// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/go/Dockerfile (1.773kB)
// templates/go/function/go.mod (418B)
// templates/go/function/go.mod.tmpl (84B)
// templates/go/function/go.sum (2.499kB)
// templates/go/function/handler.go (996B)
// templates/go/go.mod (412B)
// templates/go/go.sum (2.499kB)
// templates/go/go.work (34B)
// templates/go/go.work.sum (87B)
// templates/go/main.go (1.399kB)
// templates/python/Dockerfile (1.839kB)
// templates/python/function/__init__.py (0)
// templates/python/function/handler.py (961B)
// templates/python/function/requirements.txt (0)
// templates/python/function/requirements.txt.tmpl (68B)
// templates/python/main.py (159B)
// templates/python/requirements.txt (57B)

package fixturesfs

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGoDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xdb\x6e\xe3\x36\x10\x7d\xd7\x57\x0c\x94\x45\x5e\x0a\x92\x76\x52\xa4\x0b\x03\x02\xaa\xf8\xa2\x0d\x6a\x47\x81\xec\x74\xbb\x68\x0b\x83\x91\x28\x89\x88\x44\x0a\x24\x15\xbb\x08\xfc\xef\x05\x29\xcb\x97\x5c\x50\xf4\x8d\x73\x0e\xe7\x76\x66\x26\x4c\x22\xf8\x1e\xae\xc6\xdf\x26\x71\xb4\xbe\x5b\x84\xd1\x74\x9d\x4c\x1f\xe2\xa0\x28\x53\x85\xb9\x24\xb2\x61\x22\xa7\x54\x13\x99\xa3\x0d\x35\x69\x99\xc9\xc2\xfb\xc0\x69\x15\x46\xc1\x00\x0f\x07\xf8\xc6\xb1\x51\x7c\x16\x4c\x56\x54\x14\xe7\x84\x75\x18\xe2\xab\x2b\x44\xab\x86\x0b\xe6\xc8\xd9\xdd\x7d\x38\x5f\xdf\x86\xcb\x69\xf7\x29\xe8\xb8\xd1\x35\xbe\x1a\x78\xde\x2c\x89\x17\x80\x50\x53\x51\x93\x4b\x55\x07\x5f\x5e\x57\x61\x12\x4d\x57\x0f\xf3\x70\x35\x8b\x93\xc5\x08\x55\x5c\xb4\x5b\x42\xeb\xec\xe6\xe7\x1d\x7c\x79\xfd\xa0\xaf\xdd\xe8\x1d\xbc\x0a\xa3\x1d\x50\x0d\x87\xee\xde\xe7\xb9\x7d\xbc\x9b\x4f\x3e\x4d\x73\xd6\xab\x4d\x70\xda\xa3\x0b\xfd\xd4\xf2\x2a\xf3\xbc\xe4\xf1\x1e\x0a\x09\x5c\x68\x43\xab\x0a\xd0\x0b\x14\xdc\x94\xed\x13\x4e\x65\x4d\xb8\x48\xdb\x9b\x56\x93\x42\xf2\xba\x91\xca\x68\xa4\xd8\x0b\xd7\x4c\x91\x97\xeb\x5f\x2b\x6a\x98\x36\x6f\x03\x74\xb2\x62\xa9\x0a\xb2\x25\x46\xca\x4a\x93\xb4\xce\x8e\x11\x7a\x37\xa7\xed\xb9\x56\x0e\x3a\x6b\xeb\xe4\x53\xbc\x3c\x31\xc2\x64\xfc\xad\x2b\x9d\x36\xcf\x80\x90\x90\x28\xa5\x69\xc9\x80\x66\x99\xad\xdf\xf3\xc6\xf1\xc3\x0f\x40\x28\x57\xb2\x0e\x7a\x11\x81\xe4\xc7\x67\xab\x15\x79\xe2\xe2\x08\xb9\x70\x69\x59\xcb\x0c\x7e\xda\x7e\xc4\x77\x09\xeb\xe7\x8c\x2b\x40\x0d\x90\x42\x12\xad\x52\x52\x52\x91\x55\x4c\x79\xdf\xe3\xe4\xb7\xc9\x5d\xf2\x0e\xef\x4a\xc1\x80\x3d\x6f\xbf\x6c\xc3\xe1\x70\x11\x4f\x1e\xe7\xd3\xc0\x97\xc2\xdf\x83\x0f\x49\xfc\xc7\x8f\xc0\xef\xcd\xd9\x3c\x8c\x96\xbd\x39\x8e\xe2\xf5\xf4\x3e\xbc\x9d\x4f\x27\xc1\xc0\x9b\xde\xff\x7e\x86\x7c\x79\x3d\xb1\x76\xfd\x44\xf7\x72\x03\xda\x00\x3e\x87\xfa\x19\x02\xb2\x9b\x44\x0d\x20\xc5\xd2\x56\x69\xfe\xc2\x00\xa9\x1a\xb5\xa2\xd5\x2c\x03\x4c\x30\xee\x3d\xc1\xaa\x92\xc9\x8d\xa8\x24\xcd\x3c\xef\xd3\x5e\xed\xef\x28\x8e\x97\x87\x33\x88\x97\x3b\x88\x62\x3b\xae\x03\x64\x8d\x1d\xfc\xe5\x01\x80\x8d\xec\xd6\x10\x10\xaa\xb2\xbc\xa2\x85\x06\x1f\xd9\x9a\x7d\x40\x12\xf6\x51\xf1\x13\x17\x4e\xbd\x8b\x0b\x98\x71\x41\x2b\xe0\x35\x2d\xd8\xff\x3f\xbd\xb7\x97\xec\xce\x40\x97\xbc\xf1\xbc\x0b\x08\xb3\x0c\x84\x14\xa0\xa4\x34\xd0\x5a\x79\xa8\xc8\x20\x65\xca\xe8\xcf\x16\x2d\xa5\xc8\xf2\x3c\xe7\xa9\xdd\xe9\x7d\x4f\x97\x97\x96\x2c\x94\x6c\x1b\x40\x4b\xa0\x4d\xb3\x87\x5c\x50\xb4\x04\x54\x38\x90\x36\x2e\xef\xb2\xa9\xb8\x71\xd7\xa3\xda\xd4\x70\x29\x34\x68\x09\xa6\xa4\xa6\x93\xe6\x99\x1b\x48\xa9\x00\xd5\x0a\xb8\x04\x97\xdc\xbb\x00\x53\x32\x68\xec\x1c\x65\xab\x21\x95\x75\x6d\x8b\xa5\x25\xa3\x19\xc8\x1c\x0c\xaf\x19\x7e\xb3\xad\xa5\xac\x19\xb1\x79\x0f\x55\xa6\xa5\xdc\x08\x57\xca\x81\x3c\x99\xec\x11\x3a\x3d\xa5\x7e\x5a\xce\x37\x70\xbe\xe7\x2b\x40\x4e\x87\xd6\x4f\xf0\xbf\x42\xbc\xbb\x35\xb0\xf3\x7e\x5c\x4e\x93\x4e\x25\xbb\xf1\x79\xa3\x64\xca\xb4\x0e\x7c\xdc\xe7\xf0\x1d\x51\xcb\x8c\x05\x7e\x69\x4c\xd3\xd9\x6d\xa3\x8d\x62\xb4\x5e\xb7\xaa\xea\xf0\x11\x21\xc3\xab\x5f\xf0\x00\x0f\xf0\x70\xf4\x75\xf0\xf5\xaa\xfb\xd8\x28\x96\xf3\xed\xba\x92\x85\x0e\xfc\x9c\x56\x9a\x75\xb8\x62\x34\xfb\x67\xdd\x50\x53\x06\x3e\x59\x13\x67\x76\x0c\xdb\xb2\x74\x6d\xc5\x95\xad\x09\xfc\xc1\xf1\xfb\x11\xbc\x1e\xec\xe1\x8d\xe2\x86\xbd\xc1\xbd\xf1\x62\x02\x7f\xfa\xf8\xd8\xa8\xff\xb7\xf7\x6f\x00\x00\x00\xff\xff\x12\x8a\xd8\x49\xed\x06\x00\x00")

func templatesGoDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoDockerfile,
		"templates/go/Dockerfile",
	)
}

func templatesGoDockerfile() (*asset, error) {
	bytes, err := templatesGoDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/Dockerfile", size: 1773, mode: os.FileMode(0644), modTime: time.Unix(1729160777, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x27, 0xcc, 0xb5, 0x7, 0x6e, 0x68, 0xd2, 0x51, 0xb4, 0xcb, 0xfd, 0xc, 0x53, 0xe1, 0x62, 0xdf, 0xb7, 0x5f, 0x75, 0x43, 0x7, 0x2d, 0xef, 0x2f, 0x8e, 0x32, 0x4d, 0x9a, 0xe9, 0x3a, 0x83}}
	return a, nil
}

var _templatesGoFunctionGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x5d\x4e\xc4\x20\x14\xc5\xf1\x67\xbb\x0a\x1e\xf5\x01\xb8\x30\xed\xb4\xb3\x0d\x5d\xc1\x2d\xdc\x52\x32\x14\x2a\xd0\xc6\xee\xde\x18\xe3\xc7\x98\x4c\xe2\xfb\xf9\xff\xce\x92\xec\x16\x88\xcd\x18\x6d\xa0\x2c\xa7\x2d\x9a\xea\x53\x6c\x1a\x97\x98\x12\x5a\x0b\x68\x9a\x4c\xaf\x9b\xcf\xc4\x9c\xaf\xf3\x36\x0a\x93\x16\xf9\x8c\x13\x1e\x2f\x47\xa9\xb4\x94\xef\x88\x57\x5a\xd6\x80\x95\x8a\x2c\xf6\x2a\x5d\x62\x3b\x08\x10\xc0\x35\xe8\x56\x81\x1a\x14\xb4\x2d\xf4\x7c\xbc\x8c\xca\xd8\xa9\x3b\x43\x3f\xfc\xe8\x8f\xcd\xc3\xbd\x03\x8a\xfb\xe2\x32\x5f\xaf\xae\xfc\x26\xe1\x04\x3d\x9c\x3a\xe8\x2e\x5c\x0d\x1a\x15\xa2\xbd\xc0\x30\x30\x29\x99\x8f\xd6\x67\x32\xf5\xc6\x9c\xb1\xcc\xde\xa4\xbc\x4a\x97\xb8\x09\x84\x71\xae\x75\xfd\x10\x3b\xa1\xff\x57\x65\xaa\xf9\xc0\x31\xd0\x57\xd9\x8b\xf6\x6e\x59\xd6\x49\x9d\xa4\xc1\x52\xd9\xae\xc4\x59\xc0\x9f\x65\x0a\x18\x9d\x48\xd9\xc9\x37\x59\x8e\x68\x3e\xbd\xdb\xd5\x53\xf3\x1e\x00\x00\xff\xff\xd4\xde\x10\xcc\xa2\x01\x00\x00")

func templatesGoFunctionGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoMod,
		"templates/go/function/go.mod",
	)
}

func templatesGoFunctionGoMod() (*asset, error) {
	bytes, err := templatesGoFunctionGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod", size: 418, mode: os.FileMode(0644), modTime: time.Unix(1729248291, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0x31, 0xb2, 0x2c, 0x11, 0x41, 0x2e, 0xae, 0xde, 0xfb, 0x44, 0x42, 0xb7, 0xb8, 0x8f, 0xf4, 0xec, 0x56, 0x24, 0xfe, 0xa, 0x6c, 0xea, 0xb0, 0xc7, 0x67, 0x22, 0x23, 0x1a, 0x61, 0x3a, 0x99}}
	return a, nil
}

var _templatesGoFunctionGoModTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\x2c\xcd\x2c\x4a\x55\xd0\xe0\xaa\xae\xd6\x55\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xa8\xad\xe5\x52\x50\x50\x50\xa8\xae\x86\x29\xac\xad\xe5\x02\xeb\x4e\xcd\x4b\x01\xb1\x35\x01\x01\x00\x00\xff\xff\xe5\x67\xde\x62\x54\x00\x00\x00")

func templatesGoFunctionGoModTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoModTmpl,
		"templates/go/function/go.mod.tmpl",
	)
}

func templatesGoFunctionGoModTmpl() (*asset, error) {
	bytes, err := templatesGoFunctionGoModTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod.tmpl", size: 84, mode: os.FileMode(0644), modTime: time.Unix(1721984595, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0x7, 0x35, 0x94, 0x13, 0xd0, 0xeb, 0x9c, 0x14, 0xbd, 0x97, 0x28, 0x1b, 0x7c, 0x89, 0x46, 0x7, 0xd, 0xda, 0x13, 0xbd, 0x4f, 0x65, 0x12, 0x11, 0x59, 0xfe, 0xc9, 0x7f, 0x5c, 0xc1, 0x79}}
	return a, nil
}

var _templatesGoFunctionGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd4\xd9\x8e\xab\xca\x15\x06\xe0\xfb\xf3\x14\xfb\x1e\xb5\x29\xcc\xe8\x48\xfb\x02\x1b\x63\x06\xcf\x18\x0c\xbe\x2b\xa0\x98\xa1\x18\x0a\x03\x7e\xfa\xc8\xdd\x89\x64\x47\xda\x9d\x8e\x94\xf3\x02\x5f\xfd\xeb\x87\xb5\xe2\x94\x24\xbd\x3f\x0b\x70\x49\x9f\x61\x04\x27\x6b\xea\x08\x2a\x3b\x1a\x55\xf7\x32\x6e\x3f\xea\x3c\xee\x7e\xdd\xc1\x0c\xcc\xc0\xc7\x1c\xcc\x39\xc0\x02\x11\xb0\x3c\xe0\x17\x1f\x8c\x34\x87\x0c\x84\xe1\x02\x48\xd2\xaf\x84\xf9\x47\xa1\x80\xfb\x28\xf0\x72\xd3\x28\x4e\xad\xae\x47\xea\x5c\x08\xaa\xc1\x1c\x26\xba\x72\xa9\xa5\x46\x5f\xb4\xfb\x65\xeb\x56\x0b\x7e\xb5\xfb\xfd\xd7\xff\xe7\x59\x3a\xc6\xb3\x12\x87\xcf\xd7\x8f\x59\x6e\x2e\x4a\x10\x1a\x1b\x06\x8b\x95\x53\x92\xdd\xc5\x46\xc1\xa1\xf0\x1e\x67\x27\x73\x45\xaa\xb8\x16\x7e\xbe\x2a\x29\x52\xca\x7f\x7e\x3d\xea\xab\x80\xa4\xb8\xfa\x20\xa8\xac\x0b\x48\x50\x47\x77\x61\x4e\xc7\xf8\x35\x0b\x03\x18\x89\x01\x1c\x07\xc4\x0f\x7f\xe1\x33\x41\x18\xf1\x02\x10\x3f\x2b\x88\x0d\x6d\x7d\xa2\xfa\xa1\x07\xe4\x41\x5b\x72\xd6\xbb\x0f\xc5\xc4\x83\xa9\x94\xd6\x80\x8f\xac\x24\x5b\x73\xbc\x6f\xe2\xcd\x2d\xcc\xff\x9e\x10\x2f\x85\x80\x14\xdd\x9d\x5e\x3e\x58\x66\xa3\x66\x88\xe9\x79\xfa\x42\x85\xf6\x7c\x13\xdc\xae\xe7\x9d\x9f\x8e\xa9\xa1\x77\xf6\x76\x61\x85\x3a\x78\xcb\x12\xc2\x3b\x0a\xe2\x84\x8e\xf1\x47\x57\xa3\xe1\xd7\x9d\x99\x31\x33\xe6\x05\x36\x44\x4f\xf2\x82\xeb\x7c\x9f\x26\x5d\x5c\x3a\x98\x2e\xef\x6c\x21\x0f\x05\xdd\xe5\x87\x3d\x97\x6e\xb5\xcc\xea\x74\x2a\xe0\x35\x56\x7a\x83\xa3\x16\x56\xb9\x0f\x2b\xba\xe9\xd3\x20\x27\xa8\x23\x9f\x36\x37\x13\x9e\xaa\xe8\x66\x23\xe5\xd4\x8f\x4a\xa3\xf0\xb2\x42\x59\x71\xb4\x33\x09\xdb\x75\x38\x56\x4e\xc7\x45\x92\x6b\x4b\xd7\x4a\xcb\x75\xee\xfa\x53\xf5\x25\x32\x57\x13\x18\x45\xe3\x7c\x94\xa8\xeb\xe5\xea\x96\xf6\xaa\x77\x6c\x01\x1e\x6d\x97\xa1\x77\x0f\xf1\xe1\xf3\x77\xdf\xc6\xe9\x4e\x18\xde\xbb\x88\x31\x8e\x0b\xf4\xac\x22\x28\xeb\x67\xfd\xc2\x0c\x3c\x3d\x1c\x4d\xc9\x78\x77\x83\x5b\xb2\xeb\x6c\xbe\x2f\x7c\x35\xdd\x9a\x05\xed\x2e\xd5\x66\xcd\x6c\xac\x46\x84\xa4\x97\x88\x5c\x5e\xce\xfa\x7f\xf5\x5e\x62\x32\x62\x68\x17\xf9\xf2\x00\x73\x03\x50\x4a\xde\x5a\xd6\x3e\x5b\xe5\x7a\x36\x5a\x82\xaf\x2e\x1e\x3e\x8b\x8a\x12\xed\x37\x7a\x86\xbd\x37\x36\x81\x5d\x92\x06\xb8\xad\x3f\xe5\x02\xc1\x2a\x21\xe4\xd3\xe7\x67\xf3\xcf\x7f\x81\xe5\x55\xd3\xd3\xaf\x59\x69\x6f\x27\xf5\xbc\x34\x8f\x9d\x74\x59\x9e\x70\x0a\x46\x21\x5c\x6c\xb8\x31\x58\x54\xc8\x35\xae\xf2\xed\xf4\x73\xf8\x25\x78\x7e\xa0\x3d\xa5\x38\x4a\x5b\x86\xe5\x84\xb5\x60\xe1\x70\xa0\x8e\x6d\xbd\xb4\x1c\x8e\xb6\xf0\xb8\x72\x37\x9e\xb0\x6c\xf6\xea\x85\x93\xfe\xec\x27\x41\x81\xe3\xa7\xbd\xf8\x0a\xbd\xda\x08\x97\x35\xaf\x2d\x68\xc3\xed\xd4\xab\xb1\x8a\xb0\xee\xd4\xa6\xaa\xe7\x2a\x12\xa6\x6e\xdd\x6b\x69\x5b\x73\xca\xb8\xea\x34\xfd\x67\xe8\x4b\x60\x7e\x65\x53\x30\xde\xa6\x13\x6b\x88\x7b\xf1\x94\x69\x26\x1f\x02\xde\x1c\x37\x5d\xef\xa6\xa7\x6d\x9b\xc9\x40\x13\x61\x90\xcd\x8b\x6f\x0a\x69\x11\x69\x27\xe8\x17\xe8\xdf\xa5\x88\x33\xee\x89\xdf\x4e\xb1\x13\xd6\x97\x50\xde\x8a\xd7\x7a\xa7\x0f\xdb\xc7\x2a\xf2\x61\x71\x08\x2c\x3b\xcc\x95\x5b\x55\xdb\x77\x96\xa6\x96\xe3\x43\x95\xff\x37\xfc\x75\x09\x27\x3a\x3e\x7a\x72\x98\x35\x51\x74\xa3\x27\x75\xb3\x52\x9d\x79\x88\x75\x7e\xc8\x88\xc6\xa0\x61\xb7\xe8\xa5\xd4\x73\x32\xe2\xbe\x37\x9e\xb7\x74\xdd\x22\x42\xa6\x27\xc9\xce\x98\xa7\x15\x15\x67\x85\xdb\xef\x07\x4f\xb6\xeb\xbc\x4e\x9c\x80\xd1\x02\x92\x9c\x39\x73\xad\xab\x86\xc0\x57\xd2\x6e\xe0\x9b\xf0\x5c\xb1\xdb\xf5\xb7\xd6\x4b\xbc\x04\xaf\xbb\xc4\x73\x34\x38\xee\x3a\x36\x98\x30\xeb\x55\x01\xee\xf9\x5b\x17\xa4\x51\xaf\xe0\xa2\x1d\x8e\xe6\x0d\x56\x1b\x76\xcc\xff\x93\x24\x68\x24\x4f\x70\xfe\xb5\x6a\xfc\x7e\x04\x1e\x04\xb7\xc6\x9b\x4f\xb1\xc3\x0a\xc2\xe9\x41\xfa\x56\xd3\x19\xd6\x68\x16\xbc\x5c\x07\x0e\x34\x96\x49\x6d\x51\xb2\xf7\x8d\xf4\x12\x0d\x6d\x51\x2b\xce\xe7\x17\x94\xa7\x9b\x7e\x97\xa7\xe1\x6e\x5c\xd1\xf5\x0e\x70\xc5\x75\x8d\x5a\xa8\xd9\x76\xb9\x1c\xa4\x62\x1e\xb7\xef\xd3\xd6\x25\x7a\xc0\x36\x7c\x7e\x9b\x30\x8d\xa2\x22\xf5\x9f\x87\x06\xbc\xd9\xa9\xa9\x89\x62\x8e\xd5\xc4\x1b\x2f\x26\x53\x07\xe7\x2a\x37\xf3\x26\xba\xe0\xb8\xf3\x63\x31\xbe\xed\x1d\x8f\xeb\xce\x8a\x77\xa3\xb9\x37\xbb\xc5\x71\x8d\xea\xfa\xf3\x32\xa4\x15\x41\x6d\x05\x8b\xa7\xbe\xf8\xea\x40\x64\x73\x4d\xb2\x29\xc3\x6e\x5c\x5b\x2a\xce\xfd\x41\x43\x8e\x06\x21\x6d\xdd\x8e\x69\xb4\x12\x97\x79\xd0\xc2\x9b\x83\x32\x19\x49\x3f\x65\x5f\x42\x5f\x89\x83\x5c\x69\x4c\x2e\xcb\x7b\x04\xba\x32\x4c\xfa\x6c\x20\xcb\xa0\xe1\x4e\xed\xa3\xa1\x23\x03\xb6\x70\xaf\x3a\x7b\xaa\x52\xbb\x37\xbd\xab\x23\x86\xa5\x03\xf8\x75\x71\xff\x75\x19\x37\xeb\xf4\xa2\xad\xb7\x2a\x75\x87\x67\x3e\x4c\x1e\xac\xd3\xdc\x22\xd5\x7a\xdc\x32\xcf\x8f\x91\xa9\xd4\xcb\xf1\xe4\x58\xdc\xc6\x33\xc0\xf7\xd8\x4b\x40\x58\x05\xeb\x7a\x39\x0e\x86\x72\x50\xac\x2b\x6d\x6f\xb8\x56\x69\xe5\x26\x35\x71\xd1\xec\xf7\xc9\x5c\x71\xd9\x32\x97\x84\x40\x0e\xf1\xbb\x49\x5a\x44\x82\xe4\xf9\x23\x74\x24\x8d\xa6\xa7\x3c\x7f\x3b\x03\x50\x3a\x54\xe7\x20\xf5\xb9\x2a\x49\xc0\x01\x9e\x65\x87\xf2\x48\x27\x89\xb9\x19\x36\xe0\x78\x14\x6b\x37\x9a\x84\x5c\xc9\x6d\xe7\x39\x3a\x2e\x60\x15\xcf\x70\x1b\xd3\x23\xdd\x4d\x55\xf0\xb5\x95\x9f\x63\x7b\x9d\x5e\x46\xd6\x12\x1f\x17\xa7\xa3\xb7\x05\xe3\x64\x1a\xc7\x06\xc4\x01\x34\xc2\x0d\xdb\xea\x15\x6e\xc6\xcb\xd5\x8f\x4e\xfd\x62\xf7\x67\xe8\x25\xd8\xea\x41\xa8\xc1\xec\x99\x78\x35\xad\x55\xc5\x26\x15\xc8\x36\xfc\xc9\xb9\xd7\x86\xd0\x3e\x9c\xa6\xe5\xa1\x3b\x91\x45\xd8\x9e\xa2\xfc\xf7\x5f\xff\x0c\x00\x00\xff\xff\x68\x1a\x75\xe2\xc3\x09\x00\x00")

func templatesGoFunctionGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoSum,
		"templates/go/function/go.sum",
	)
}

func templatesGoFunctionGoSum() (*asset, error) {
	bytes, err := templatesGoFunctionGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.sum", size: 2499, mode: os.FileMode(0644), modTime: time.Unix(1729248296, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0xf8, 0x77, 0x34, 0x13, 0x7, 0x7e, 0xa3, 0x29, 0x57, 0x71, 0x98, 0x1f, 0x29, 0x6f, 0x53, 0x36, 0xb9, 0xd6, 0x7d, 0x88, 0x36, 0xc, 0xac, 0x67, 0x51, 0x84, 0x15, 0x59, 0x45, 0xaf, 0xb4}}
	return a, nil
}

var _templatesGoFunctionHandlerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x41\x6b\xdc\x3c\x10\x3d\x4b\xbf\x62\x18\xf8\xc0\xe6\x73\xbd\x09\x94\x1e\xb6\xa4\x50\x4a\x4a\x0a\xa5\x87\xa4\xd0\xc3\xb2\x04\xc5\x1e\x3b\xc2\xb6\xe4\x1d\x49\xc9\x2e\x61\xff\x7b\x91\x1c\x6f\xd6\xb4\xf4\x62\x4b\x33\xef\xbd\x79\x33\x9a\x51\x55\x9d\x6a\x09\x9a\x60\x2a\xaf\xad\x91\x52\x0f\xa3\x65\x0f\x99\x14\x58\x59\xe3\x69\xef\x51\x0a\x6c\x06\x8f\x52\x0a\x57\x77\x80\xad\xf6\x8f\xe1\xa1\xac\xec\xb0\xba\x55\x8d\x3a\xdc\x1d\x9c\xa7\xc1\xad\x66\x8d\x77\x9e\x86\xb1\x57\x9e\xdc\xca\xd5\xdd\xaa\xb5\x28\x73\x29\x63\x16\x6e\x94\xa9\x7b\xca\x2a\xbf\x87\x57\xf1\xf2\xcb\xf4\x2f\xa0\xb7\x6d\x4b\x0c\xae\xee\xca\xef\xe9\x58\x00\xd3\x2e\xdd\x6f\x69\x17\xc8\xf9\x1c\xb2\xe9\xe6\x46\x6b\x1c\x15\x40\xcc\x96\x73\x78\x91\x62\x22\x97\xdf\x4c\x63\x33\x64\xaa\x48\x3f\x51\x1d\xf9\x91\x87\x05\x20\xd3\x0e\x93\x60\x2e\xa5\xa8\x6c\x30\x9e\x18\xd6\x57\x70\x51\x5e\x48\xa1\x1b\x18\x99\x9e\x0a\xb0\x5d\x8c\x31\xed\x36\x18\x03\xda\x06\x87\xdb\x8f\x31\xfc\x22\xc5\xb2\xc8\x9c\x3f\x2f\x12\x63\x58\x24\xad\x5c\x8a\x53\x99\xab\x14\x29\xb3\x41\x8d\x1b\xe7\x59\x9b\x76\xab\xcc\x21\xdf\xe0\x2b\x00\xb7\x65\xd6\xf4\x56\xf9\x0f\xef\x73\x29\x8e\x52\x0a\x26\x37\x46\x27\x83\xea\x68\xd1\x73\x3e\xe5\x36\x68\x83\x1f\x83\xc7\x2d\x5c\x01\xde\x50\xdf\x5b\xf8\x65\xb9\xaf\x71\xce\xcf\xae\x22\x80\x69\x27\x53\x93\xc4\xbc\xe8\x31\xcd\xef\xac\x41\x62\xbe\x4b\xfe\x0a\xb8\x8f\x20\x62\x2e\xb3\xc9\x71\xec\xc7\x3d\x6b\x5f\x3d\xc2\x09\x95\x38\x95\x72\x04\x48\x7b\xaa\x82\xa7\x7b\xd5\x2a\x6d\x70\x2d\x85\x88\xf5\xe6\x01\x7c\x82\xcb\x84\x15\xe2\x81\x49\x75\xf1\x74\x8c\x1f\x26\x1f\xd8\x80\xd1\x7d\x91\xde\xf9\x07\x3d\x5f\x33\x5f\x4f\x5a\x9f\xa3\x54\x76\x66\x69\x39\xbe\x49\x0f\xb9\xa3\x03\xae\x01\x00\x90\x9f\x54\x1f\x08\x8b\x29\x31\xcf\x76\x7d\x72\xf1\x3f\x5c\xa6\xdc\x31\x3f\xd9\xf6\xac\x8c\xd3\x64\xfc\x64\xf9\xef\x7e\x7e\xce\xa0\x37\x33\x6f\x0a\x8d\xd2\x3d\xd5\xff\xa2\x7f\x4d\x88\x25\xb7\xa6\x46\x85\xde\xff\xc1\x6a\x06\x5f\x5e\xc7\x47\x69\x32\x0c\xa6\x33\xf6\xd9\x4c\x4b\xbe\x86\xff\x1c\x16\xb0\x10\x39\xce\xbb\x92\xf8\xe7\x5b\x92\xc5\x1d\xc8\x8b\xa8\x29\x8f\xf2\x77\x00\x00\x00\xff\xff\x6f\x74\x7a\xfb\xe4\x03\x00\x00")

func templatesGoFunctionHandlerGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionHandlerGo,
		"templates/go/function/handler.go",
	)
}

func templatesGoFunctionHandlerGo() (*asset, error) {
	bytes, err := templatesGoFunctionHandlerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/handler.go", size: 996, mode: os.FileMode(0644), modTime: time.Unix(1729174844, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x35, 0x82, 0x48, 0x9d, 0xd9, 0x83, 0x8c, 0x5c, 0x78, 0x27, 0xde, 0xc9, 0x7b, 0xed, 0x14, 0x18, 0x1e, 0xa2, 0x95, 0xba, 0x69, 0xe7, 0x8f, 0x31, 0xda, 0xe4, 0x70, 0xa9, 0xf9, 0xd0, 0x84, 0x9c}}
	return a, nil
}

var _templatesGoGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\x41\x4e\xc4\x20\x14\xc6\xf1\xb5\x9c\x82\xa5\xb3\x00\x1e\x9d\x76\xda\xb9\x86\x9e\xe0\x15\x5e\x29\x19\x0a\x15\x68\x63\x6f\x6f\x8c\xd1\xa8\x49\xf7\xdf\xff\x97\x6f\x49\x76\x0b\xc4\x5d\x12\xd3\x16\x4d\xf5\x29\x8a\x19\xa3\x0d\x94\x19\x73\x89\x6b\xd9\x34\x8c\x65\x7a\xdb\x7c\x26\xfe\xcc\x9e\x9c\xaf\xf3\x36\x4a\x93\x16\xf5\x82\x13\x1e\xaf\x47\xa9\xb4\x14\x45\x71\x5f\x5c\x16\xeb\xc3\x15\xbe\x83\x04\x09\xa2\x81\xa6\x85\x2b\xf4\x70\xed\xa0\xbb\x0b\x3d\x34\xa8\x11\xed\x1d\x86\xe1\xdc\xf9\x79\x51\x69\x59\x03\x56\x2a\xaa\xd8\x87\x72\xe9\xb7\xaa\x41\x0f\x1a\xda\x16\x7a\x31\xde\x47\x6d\xec\xd4\xdd\xa0\x1f\xd8\xe5\xec\xea\x8c\x65\xf6\x26\xe5\x55\xb9\x24\x4c\x20\x8c\x73\xad\xeb\x27\xd9\xc9\x86\x2b\xc5\x7d\xb4\x3e\x93\xa9\xe7\x55\xa6\x9a\x0f\x1c\x03\x7d\x97\xbd\x6c\x4f\xcb\xb2\x4e\xfa\xaa\x0c\x96\xca\x77\x2d\x6f\x12\xfe\x2d\x53\xc0\xe8\x64\xca\x4e\xbd\xab\x72\x44\xf3\xe5\xfd\x5d\x5d\xd8\x47\x00\x00\x00\xff\xff\xde\x9e\x9f\xea\x9c\x01\x00\x00")

func templatesGoGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoMod,
		"templates/go/go.mod",
	)
}

func templatesGoGoMod() (*asset, error) {
	bytes, err := templatesGoGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.mod", size: 412, mode: os.FileMode(0644), modTime: time.Unix(1729248277, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x74, 0x96, 0x5b, 0x4, 0x4b, 0x2f, 0xcd, 0xe4, 0x7, 0x2e, 0xb, 0x98, 0x55, 0x22, 0xd2, 0xc1, 0x79, 0xa3, 0x65, 0x41, 0xf1, 0xb2, 0xe6, 0xc3, 0xfb, 0x3e, 0xaf, 0xd5, 0x5e, 0x38, 0x90, 0x97}}
	return a, nil
}

var _templatesGoGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd4\xd9\x8e\xab\xca\x15\x06\xe0\xfb\xf3\x14\xfb\x1e\xb5\x29\xcc\xe8\x48\xfb\x02\x1b\x63\x06\xcf\x18\x0c\xbe\x2b\xa0\x98\xa1\x18\x0a\x03\x7e\xfa\xc8\xdd\x89\x64\x47\xda\x9d\x8e\x94\xf3\x02\x5f\xfd\xeb\x87\xb5\xe2\x94\x24\xbd\x3f\x0b\x70\x49\x9f\x61\x04\x27\x6b\xea\x08\x2a\x3b\x1a\x55\xf7\x32\x6e\x3f\xea\x3c\xee\x7e\xdd\xc1\x0c\xcc\xc0\xc7\x1c\xcc\x39\xc0\x02\x11\xb0\x3c\xe0\x17\x1f\x8c\x34\x87\x0c\x84\xe1\x02\x48\xd2\xaf\x84\xf9\x47\xa1\x80\xfb\x28\xf0\x72\xd3\x28\x4e\xad\xae\x47\xea\x5c\x08\xaa\xc1\x1c\x26\xba\x72\xa9\xa5\x46\x5f\xb4\xfb\x65\xeb\x56\x0b\x7e\xb5\xfb\xfd\xd7\xff\xe7\x59\x3a\xc6\xb3\x12\x87\xcf\xd7\x8f\x59\x6e\x2e\x4a\x10\x1a\x1b\x06\x8b\x95\x53\x92\xdd\xc5\x46\xc1\xa1\xf0\x1e\x67\x27\x73\x45\xaa\xb8\x16\x7e\xbe\x2a\x29\x52\xca\x7f\x7e\x3d\xea\xab\x80\xa4\xb8\xfa\x20\xa8\xac\x0b\x48\x50\x47\x77\x61\x4e\xc7\xf8\x35\x0b\x03\x18\x89\x01\x1c\x07\xc4\x0f\x7f\xe1\x33\x41\x18\xf1\x02\x10\x3f\x2b\x88\x0d\x6d\x7d\xa2\xfa\xa1\x07\xe4\x41\x5b\x72\xd6\xbb\x0f\xc5\xc4\x83\xa9\x94\xd6\x80\x8f\xac\x24\x5b\x73\xbc\x6f\xe2\xcd\x2d\xcc\xff\x9e\x10\x2f\x85\x80\x14\xdd\x9d\x5e\x3e\x58\x66\xa3\x66\x88\xe9\x79\xfa\x42\x85\xf6\x7c\x13\xdc\xae\xe7\x9d\x9f\x8e\xa9\xa1\x77\xf6\x76\x61\x85\x3a\x78\xcb\x12\xc2\x3b\x0a\xe2\x84\x8e\xf1\x47\x57\xa3\xe1\xd7\x9d\x99\x31\x33\xe6\x05\x36\x44\x4f\xf2\x82\xeb\x7c\x9f\x26\x5d\x5c\x3a\x98\x2e\xef\x6c\x21\x0f\x05\xdd\xe5\x87\x3d\x97\x6e\xb5\xcc\xea\x74\x2a\xe0\x35\x56\x7a\x83\xa3\x16\x56\xb9\x0f\x2b\xba\xe9\xd3\x20\x27\xa8\x23\x9f\x36\x37\x13\x9e\xaa\xe8\x66\x23\xe5\xd4\x8f\x4a\xa3\xf0\xb2\x42\x59\x71\xb4\x33\x09\xdb\x75\x38\x56\x4e\xc7\x45\x92\x6b\x4b\xd7\x4a\xcb\x75\xee\xfa\x53\xf5\x25\x32\x57\x13\x18\x45\xe3\x7c\x94\xa8\xeb\xe5\xea\x96\xf6\xaa\x77\x6c\x01\x1e\x6d\x97\xa1\x77\x0f\xf1\xe1\xf3\x77\xdf\xc6\xe9\x4e\x18\xde\xbb\x88\x31\x8e\x0b\xf4\xac\x22\x28\xeb\x67\xfd\xc2\x0c\x3c\x3d\x1c\x4d\xc9\x78\x77\x83\x5b\xb2\xeb\x6c\xbe\x2f\x7c\x35\xdd\x9a\x05\xed\x2e\xd5\x66\xcd\x6c\xac\x46\x84\xa4\x97\x88\x5c\x5e\xce\xfa\x7f\xf5\x5e\x62\x32\x62\x68\x17\xf9\xf2\x00\x73\x03\x50\x4a\xde\x5a\xd6\x3e\x5b\xe5\x7a\x36\x5a\x82\xaf\x2e\x1e\x3e\x8b\x8a\x12\xed\x37\x7a\x86\xbd\x37\x36\x81\x5d\x92\x06\xb8\xad\x3f\xe5\x02\xc1\x2a\x21\xe4\xd3\xe7\x67\xf3\xcf\x7f\x81\xe5\x55\xd3\xd3\xaf\x59\x69\x6f\x27\xf5\xbc\x34\x8f\x9d\x74\x59\x9e\x70\x0a\x46\x21\x5c\x6c\xb8\x31\x58\x54\xc8\x35\xae\xf2\xed\xf4\x73\xf8\x25\x78\x7e\xa0\x3d\xa5\x38\x4a\x5b\x86\xe5\x84\xb5\x60\xe1\x70\xa0\x8e\x6d\xbd\xb4\x1c\x8e\xb6\xf0\xb8\x72\x37\x9e\xb0\x6c\xf6\xea\x85\x93\xfe\xec\x27\x41\x81\xe3\xa7\xbd\xf8\x0a\xbd\xda\x08\x97\x35\xaf\x2d\x68\xc3\xed\xd4\xab\xb1\x8a\xb0\xee\xd4\xa6\xaa\xe7\x2a\x12\xa6\x6e\xdd\x6b\x69\x5b\x73\xca\xb8\xea\x34\xfd\x67\xe8\x4b\x60\x7e\x65\x53\x30\xde\xa6\x13\x6b\x88\x7b\xf1\x94\x69\x26\x1f\x02\xde\x1c\x37\x5d\xef\xa6\xa7\x6d\x9b\xc9\x40\x13\x61\x90\xcd\x8b\x6f\x0a\x69\x11\x69\x27\xe8\x17\xe8\xdf\xa5\x88\x33\xee\x89\xdf\x4e\xb1\x13\xd6\x97\x50\xde\x8a\xd7\x7a\xa7\x0f\xdb\xc7\x2a\xf2\x61\x71\x08\x2c\x3b\xcc\x95\x5b\x55\xdb\x77\x96\xa6\x96\xe3\x43\x95\xff\x37\xfc\x75\x09\x27\x3a\x3e\x7a\x72\x98\x35\x51\x74\xa3\x27\x75\xb3\x52\x9d\x79\x88\x75\x7e\xc8\x88\xc6\xa0\x61\xb7\xe8\xa5\xd4\x73\x32\xe2\xbe\x37\x9e\xb7\x74\xdd\x22\x42\xa6\x27\xc9\xce\x98\xa7\x15\x15\x67\x85\xdb\xef\x07\x4f\xb6\xeb\xbc\x4e\x9c\x80\xd1\x02\x92\x9c\x39\x73\xad\xab\x86\xc0\x57\xd2\x6e\xe0\x9b\xf0\x5c\xb1\xdb\xf5\xb7\xd6\x4b\xbc\x04\xaf\xbb\xc4\x73\x34\x38\xee\x3a\x36\x98\x30\xeb\x55\x01\xee\xf9\x5b\x17\xa4\x51\xaf\xe0\xa2\x1d\x8e\xe6\x0d\x56\x1b\x76\xcc\xff\x93\x24\x68\x24\x4f\x70\xfe\xb5\x6a\xfc\x7e\x04\x1e\x04\xb7\xc6\x9b\x4f\xb1\xc3\x0a\xc2\xe9\x41\xfa\x56\xd3\x19\xd6\x68\x16\xbc\x5c\x07\x0e\x34\x96\x49\x6d\x51\xb2\xf7\x8d\xf4\x12\x0d\x6d\x51\x2b\xce\xe7\x17\x94\xa7\x9b\x7e\x97\xa7\xe1\x6e\x5c\xd1\xf5\x0e\x70\xc5\x75\x8d\x5a\xa8\xd9\x76\xb9\x1c\xa4\x62\x1e\xb7\xef\xd3\xd6\x25\x7a\xc0\x36\x7c\x7e\x9b\x30\x8d\xa2\x22\xf5\x9f\x87\x06\xbc\xd9\xa9\xa9\x89\x62\x8e\xd5\xc4\x1b\x2f\x26\x53\x07\xe7\x2a\x37\xf3\x26\xba\xe0\xb8\xf3\x63\x31\xbe\xed\x1d\x8f\xeb\xce\x8a\x77\xa3\xb9\x37\xbb\xc5\x71\x8d\xea\xfa\xf3\x32\xa4\x15\x41\x6d\x05\x8b\xa7\xbe\xf8\xea\x40\x64\x73\x4d\xb2\x29\xc3\x6e\x5c\x5b\x2a\xce\xfd\x41\x43\x8e\x06\x21\x6d\xdd\x8e\x69\xb4\x12\x97\x79\xd0\xc2\x9b\x83\x32\x19\x49\x3f\x65\x5f\x42\x5f\x89\x83\x5c\x69\x4c\x2e\xcb\x7b\x04\xba\x32\x4c\xfa\x6c\x20\xcb\xa0\xe1\x4e\xed\xa3\xa1\x23\x03\xb6\x70\xaf\x3a\x7b\xaa\x52\xbb\x37\xbd\xab\x23\x86\xa5\x03\xf8\x75\x71\xff\x75\x19\x37\xeb\xf4\xa2\xad\xb7\x2a\x75\x87\x67\x3e\x4c\x1e\xac\xd3\xdc\x22\xd5\x7a\xdc\x32\xcf\x8f\x91\xa9\xd4\xcb\xf1\xe4\x58\xdc\xc6\x33\xc0\xf7\xd8\x4b\x40\x58\x05\xeb\x7a\x39\x0e\x86\x72\x50\xac\x2b\x6d\x6f\xb8\x56\x69\xe5\x26\x35\x71\xd1\xec\xf7\xc9\x5c\x71\xd9\x32\x97\x84\x40\x0e\xf1\xbb\x49\x5a\x44\x82\xe4\xf9\x23\x74\x24\x8d\xa6\xa7\x3c\x7f\x3b\x03\x50\x3a\x54\xe7\x20\xf5\xb9\x2a\x49\xc0\x01\x9e\x65\x87\xf2\x48\x27\x89\xb9\x19\x36\xe0\x78\x14\x6b\x37\x9a\x84\x5c\xc9\x6d\xe7\x39\x3a\x2e\x60\x15\xcf\x70\x1b\xd3\x23\xdd\x4d\x55\xf0\xb5\x95\x9f\x63\x7b\x9d\x5e\x46\xd6\x12\x1f\x17\xa7\xa3\xb7\x05\xe3\x64\x1a\xc7\x06\xc4\x01\x34\xc2\x0d\xdb\xea\x15\x6e\xc6\xcb\xd5\x8f\x4e\xfd\x62\xf7\x67\xe8\x25\xd8\xea\x41\xa8\xc1\xec\x99\x78\x35\xad\x55\xc5\x26\x15\xc8\x36\xfc\xc9\xb9\xd7\x86\xd0\x3e\x9c\xa6\xe5\xa1\x3b\x91\x45\xd8\x9e\xa2\xfc\xf7\x5f\xff\x0c\x00\x00\xff\xff\x68\x1a\x75\xe2\xc3\x09\x00\x00")

func templatesGoGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoSum,
		"templates/go/go.sum",
	)
}

func templatesGoGoSum() (*asset, error) {
	bytes, err := templatesGoGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.sum", size: 2499, mode: os.FileMode(0644), modTime: time.Unix(1729248280, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0xf8, 0x77, 0x34, 0x13, 0x7, 0x7e, 0xa3, 0x29, 0x57, 0x71, 0x98, 0x1f, 0x29, 0x6f, 0x53, 0x36, 0xb9, 0xd6, 0x7d, 0x88, 0x36, 0xc, 0xac, 0x67, 0x51, 0x84, 0x15, 0x59, 0x45, 0xaf, 0xb4}}
	return a, nil
}

var _templatesGoGoWork = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x57\x30\xd4\x33\x32\xd2\x33\xe0\xe2\x2a\x2d\x4e\x55\xd0\xe0\xe2\xd4\xe3\xe2\xd4\xd3\x4f\x2b\xcd\x4b\x2e\xc9\xcc\xcf\xe3\xd2\xe4\x02\x04\x00\x00\xff\xff\xb1\x6f\xc0\x55\x22\x00\x00\x00")

func templatesGoGoWorkBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWork,
		"templates/go/go.work",
	)
}

func templatesGoGoWork() (*asset, error) {
	bytes, err := templatesGoGoWorkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work", size: 34, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x5d, 0xcc, 0xa0, 0xd4, 0x72, 0x56, 0x8a, 0xd, 0x3e, 0x3, 0x38, 0xf4, 0xc8, 0x86, 0xa8, 0xe3, 0x66, 0x8f, 0x83, 0x5f, 0x4f, 0x64, 0xdf, 0x79, 0xe6, 0x99, 0xd3, 0x32, 0x58, 0x29, 0xff}}
	return a, nil
}

var _templatesGoGoWorkSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x2c\xc9\x28\x4d\xd2\x4b\xce\xcf\xd5\x4f\xcf\xcf\x4f\xcf\x49\xd5\x4f\xcf\xd7\x4d\xce\x2d\x50\x28\x33\xd0\x33\xd3\x33\xd0\x4f\xcf\xd7\xcb\xcd\x4f\x51\xc8\x30\xb4\x32\x34\x4f\x09\xcd\xc9\x76\xf2\x4f\xcc\xf6\x32\xd0\x76\xc9\x2e\x0a\x0e\xf6\xcb\x72\xce\xf6\xcc\xaa\x08\x36\x4b\x72\xb3\xac\x4a\x32\x4e\xcd\xc9\x4d\xf5\x73\xf7\xcc\xca\x8f\xb4\xe5\x02\x04\x00\x00\xff\xff\xc2\xbe\xd9\x45\x57\x00\x00\x00")

func templatesGoGoWorkSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWorkSum,
		"templates/go/go.work.sum",
	)
}

func templatesGoGoWorkSum() (*asset, error) {
	bytes, err := templatesGoGoWorkSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work.sum", size: 87, mode: os.FileMode(0644), modTime: time.Unix(1712835135, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6f, 0x74, 0xbe, 0x5c, 0xdb, 0x8e, 0x67, 0x84, 0xb8, 0x19, 0xaf, 0x6d, 0xdb, 0x7b, 0x91, 0xfd, 0xc0, 0xa1, 0x1c, 0xcd, 0x3, 0xd2, 0xe0, 0x72, 0xeb, 0xb7, 0xff, 0xfb, 0x7c, 0x85, 0xa5, 0x79}}
	return a, nil
}

var _templatesGoMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x4e\xeb\x38\x10\x7d\xb6\xbf\x62\x36\x0f\x28\x41\x25\x2e\xfb\x84\x2a\x15\x69\x25\x60\x17\xc1\x5e\x50\x83\xe0\x11\xb9\xc9\x24\xb5\xea\xd8\x91\x3d\x29\xa0\xab\xfe\xfb\x95\x93\xa6\x24\x48\x5c\xe9\xbe\x44\x89\x7d\xce\x99\x33\x67\x26\x42\x80\x2c\x64\x43\x58\x40\xe9\x6c\x0d\x1b\xa2\xc6\x2f\x84\xa8\x14\x6d\xda\x75\x9a\xdb\x5a\xd8\x06\x4d\x29\xa5\x17\x95\xd5\xd2\x54\x67\x01\x72\x46\x58\x37\x5a\x12\x8a\xb5\xb6\x6b\x51\x4b\x4f\xe8\xc4\xf1\x70\x84\x14\xb5\x54\x26\xad\x2c\x17\x02\x1e\x9c\xaa\x94\x91\x1a\xb4\xca\xd1\x78\x5c\xc0\xff\xb7\x4f\xbc\x91\xf9\x56\x56\x08\x01\xc8\xb9\xaa\x1b\xeb\x08\x62\xce\xa2\xb2\xa6\x88\xb3\xc8\xfa\xf0\xf4\xe4\x72\x6b\x76\xe1\x95\x54\x8d\x11\xe7\x2c\xda\x48\x53\x68\x74\xa2\x6c\x4d\x4e\xca\x9a\x70\xe8\x8b\x2d\x44\x23\xf7\x2b\x59\xca\x8f\xec\xc3\x13\xd6\xfe\x08\x3c\xda\xf7\xc2\x17\x5b\x51\xd9\x4e\xee\x3b\x16\x9a\x5d\x5d\xb9\xb3\x66\x5b\x79\xe1\x55\x65\xa4\xf6\x11\x4f\x38\xcf\xad\xf1\x04\x05\x96\xb2\xd5\xf4\xa4\x6a\xb4\x2d\xc1\x12\xce\xe7\x70\x0a\xc1\x63\x9a\x61\x6e\x4d\xc1\x79\x28\xdb\xb5\x17\x27\xf0\x93\x33\x87\xb2\x18\xe0\x8b\x25\x34\xd2\x79\xbc\x35\xf4\xe0\xae\x5a\x27\x83\xbd\x67\xa9\x5b\x8c\xad\x4f\xff\x45\x42\xb3\x8b\xa3\xc0\x78\xa5\x9e\x12\x25\xb3\x2f\x35\x13\xce\xde\x9c\x22\xfc\x33\xcd\x8e\xf2\x5b\x51\xbf\x55\xcd\xd3\x7d\xf6\x8c\x4e\x95\x1f\x41\x75\xc4\x0e\x77\xaf\xa4\xfd\xeb\xae\xbb\x8d\x12\x58\x2e\x21\x22\xd7\x76\x93\x19\x72\xce\xae\xee\x66\x80\xce\x05\xb2\x2f\xb6\xe9\x0f\x7c\xbb\xf9\xbc\x8a\x39\x0b\xe3\x4a\x5f\x14\x6d\x56\x9f\x99\xc4\xa3\x7c\x92\xd9\x08\xf3\x32\x6a\x32\x1e\x77\x3c\x41\xdd\xdb\xea\x46\xb7\x7e\xb3\x92\x84\xf1\xf9\xe9\x68\x10\x5f\x61\x13\xbd\xf3\xf9\xb7\xd0\x0c\xdd\x0e\x5d\x36\x4e\x23\x9e\x64\x33\x41\x3f\x5a\x47\xf1\xc5\xfc\xe2\xef\xc9\xe9\x7f\xfd\xaa\xc6\x43\x32\x69\x7f\x90\x24\x9c\xa9\xb2\x8b\xe8\xaf\x25\x18\xa5\xc3\x7e\xb0\xb2\xa6\xf4\xd1\x29\x43\xda\xc4\xd1\xb5\x73\xd6\x41\xee\x50\x92\x32\x15\x0c\x02\x90\x5d\xdd\x2d\x20\xea\xe2\x4d\x38\x63\x0e\xa9\x75\x86\xb3\x3d\xe7\x2c\xa7\xf7\x2e\xf1\x7e\x57\xd3\x0c\xa9\x6d\xb2\xee\x63\xb0\x91\x4c\x87\x94\xae\x5a\x13\xe7\xf4\x9e\xf0\xfd\x61\x5b\xbf\x5b\xa0\x9d\xd4\xe0\xc9\x29\x53\xcd\xa0\x94\x5a\xaf\x65\xbe\xed\x97\x7d\xc0\x25\xd3\xcf\xd0\x90\x2a\x41\xa3\x09\xdc\x04\x2e\x61\xde\xf5\xd8\x15\x28\x9e\xa5\x9e\xf5\xb5\xae\x0f\x5b\xd2\xff\xe6\xe9\x3f\x64\x55\x47\xe0\x2c\xd0\x8f\x90\x65\x9f\xd2\xc9\x09\x1c\x05\xe0\x72\x79\xd0\x3c\x84\x30\x35\x10\x1f\x81\xc9\x97\xff\x92\xb1\x7d\x9f\x57\x71\x80\xce\x60\x78\x3b\xb8\xe9\xd0\x8f\x81\x7f\x54\xeb\x3d\xa9\x72\x02\x1d\xcd\xee\x60\x61\xc8\x26\x14\x18\xce\x06\x06\xdf\xf3\x5f\x01\x00\x00\xff\xff\x1a\x1c\x83\x3c\x77\x05\x00\x00")

func templatesGoMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoMainGo,
		"templates/go/main.go",
	)
}

func templatesGoMainGo() (*asset, error) {
	bytes, err := templatesGoMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/main.go", size: 1399, mode: os.FileMode(0644), modTime: time.Unix(1729166856, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0x56, 0xb7, 0x94, 0x71, 0xf4, 0xa4, 0x65, 0x3e, 0xe2, 0x3c, 0x14, 0x7e, 0xcd, 0x6a, 0xa1, 0x6e, 0x50, 0x17, 0x71, 0xf6, 0xbf, 0xdb, 0xe8, 0xbb, 0x29, 0xca, 0xd9, 0x9, 0x94, 0x63, 0xc2}}
	return a, nil
}

var _templatesPythonDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5d\x6f\xdb\x36\x17\xbe\x7e\xf5\x2b\x0e\x54\xa3\x78\xb7\x81\xa2\xbd\xae\x1d\x60\x40\x17\x9a\xad\xda\x41\x62\xcb\x50\xd4\x75\x41\x17\x08\xb4\x44\x59\x44\x28\x91\x25\xa9\xc4\x42\x9a\xff\x3e\x88\xaa\x3f\x16\x0b\x03\x9a\x8b\xc0\x7a\x9e\xe7\x7c\x9f\xc3\x20\x5e\xc0\xe7\x20\x99\x2d\xe7\xd1\x22\xbd\x5a\x05\x8b\x30\x8d\xc3\x4d\xe4\xef\xca\x4c\x79\x4c\x60\x21\x69\x5d\x10\xa2\xb1\x28\xd0\x13\x31\x59\x99\x8b\x9d\x33\x60\x94\x04\x0b\x7f\xec\x4d\xc6\xde\x07\xcb\x6e\xee\x92\x65\xb4\x3e\x77\x28\x5b\x53\x8a\xfa\x92\xec\x0c\xdf\x79\x93\x09\xd2\x9c\x55\x68\xdb\x70\xae\x69\x4b\x1d\xc7\xf9\x18\x47\x2b\x40\x48\x72\x62\x0a\xa1\x2a\x7f\xf4\x9c\x04\xf1\x22\x4c\x36\x37\x41\xf2\x31\x8a\x57\x53\xc4\x59\xdd\xec\x31\xa9\xf2\x0f\xbf\xbd\xc0\xe8\x79\xa0\x8c\x97\xe9\x05\x9c\x04\x8b\x17\x20\x1a\x8e\xc5\xfc\x70\x9c\x8b\xda\xba\x28\xaf\x6b\xb2\x31\xb6\x0d\xe3\xb9\xe3\xcc\xa2\xcd\x1d\x20\x54\x28\x51\xf9\x87\xb0\x80\x8b\xd3\xcf\x46\x2b\xbc\x65\xf5\x09\x72\xe2\x4f\x6b\xc8\xca\x4a\xe4\xf0\xcb\x7e\x88\x77\xde\x40\xc0\x0d\x55\x35\x31\xec\x91\xf2\x16\x1a\x4d\x21\x98\xcf\xa1\x34\x46\xea\x29\xc6\xf0\xff\xa7\x92\x65\x25\x3c\x31\xce\xa1\x16\x06\xb6\x14\x32\x92\x95\x34\x87\x6d\x0b\x73\x91\x3d\x50\xd5\xe7\x47\xd5\x4f\x76\x2a\xc1\x7c\x7e\x95\x5c\x45\xeb\xe0\x26\xdd\x04\xb3\xeb\x60\x11\xfa\xae\x6b\x13\xa1\x59\x29\xc0\x1d\xe0\x47\xcf\x97\xe0\x4b\x6f\x43\xa4\x41\x3b\x6a\x00\x7d\x6d\xa1\x91\x39\x31\x14\xfe\x76\x00\x00\xde\xbe\xfd\x17\xc7\x6a\x6d\x08\xe7\x30\xe8\xea\x64\xa2\x2a\x40\xaa\x00\xfc\x48\x14\xe6\x6c\x8b\x89\x34\x98\x33\x6d\x34\xfe\xd9\xf6\x22\xcf\xa1\x16\x35\x28\x21\x4c\xd7\x0a\xd5\xe7\x90\xe7\x3b\x25\x1a\x09\x08\xe9\x56\x1b\x5a\x01\x91\xd2\x26\x90\xe7\x9d\xc8\x7e\x1e\x39\x84\x58\xdd\xcb\x89\x94\xdf\x07\x20\x9e\x6a\x2b\xc2\xa5\xa8\x28\xee\x70\xe7\xd3\x6d\x18\x5b\x85\x13\xae\xff\x84\x4d\x90\x2c\xfd\x51\xf7\x7f\x7a\xd4\x60\x8f\x8b\x8c\xf0\x6e\x62\x8e\xf3\x39\x8a\xaf\xe7\x57\xf1\xc9\x03\x76\xfa\x1b\x88\xa3\xbf\xee\xba\x06\x1f\xb6\xc3\x06\xf3\x89\x94\xd3\x2e\x60\x45\x58\xed\xc9\x16\x4e\x7f\xde\xb0\x50\xd1\xaf\x0d\x53\xb4\xa2\xb5\xd1\x9e\xd9\x1b\xab\xb4\x39\x76\xbd\xb0\x65\x48\x26\x8f\x6d\x46\xa8\x16\xc8\xee\x01\xca\x99\xea\xd6\x5e\x89\x7d\xeb\x8f\x9e\x6d\x3e\x2f\x80\xd4\x85\xc7\xb3\x8a\x3b\x6f\xd5\x83\x35\x94\x50\x34\x75\x66\x98\xa8\x2d\x6a\x44\x93\x95\xe0\xe1\x03\x88\xd3\x94\xd5\xcc\xa4\xa9\x27\xdb\x81\x1e\x1c\x65\xc3\x45\x1d\xe9\xd7\xb9\xfc\xcf\xfb\xf1\x8a\x90\x1d\xf5\x50\x61\x67\x7d\xfa\xef\x34\x6c\x53\xfb\x87\xc2\x9e\x4c\x77\xdb\x86\x6a\xd3\x8f\x32\x09\x6f\x93\x74\x16\xad\x56\xc1\x7a\xee\x1b\xb1\x3f\x81\xe1\x3a\xf8\xe3\x26\x9c\xfb\x05\xe1\x9a\xf6\xed\xfb\x02\xee\xe8\x9c\x73\xc1\x07\xd7\xf2\x2e\xdc\x77\xbb\xd9\x1f\x9b\x7e\x60\x52\xb2\x7a\x67\xc3\x68\x17\xbe\x7d\x03\xfa\x48\xf8\xc1\xf8\x7b\x34\xd7\x79\x9d\x95\x2e\x99\x1c\xdc\xb9\xd3\x10\xdf\xc0\x2d\x35\xd0\x48\x38\x7b\xd1\xa1\x10\x0a\x96\x49\xb2\x81\x4a\xe4\xd4\x6e\x76\x21\x95\xc8\xa8\xd6\xbe\xdb\xbf\xdc\x87\x95\x74\x2d\x9b\xed\x58\x5a\x52\x92\x53\xa5\x7d\xd7\xa8\x86\xf6\x70\x67\xed\xbb\xdd\x1b\xd4\x7f\x37\x52\x1b\x45\x49\x95\x36\x8a\xf7\xf8\x14\xe3\xc9\xaf\xbf\x7b\x63\x6f\xec\x4d\xa6\xef\xc7\xe3\x71\x2f\x54\x94\xe4\x6d\x2a\x89\x29\x7d\x17\xa7\xd8\x7e\xf6\x0c\xdd\xd3\x2c\x35\xac\xa2\xa2\x31\xbe\x7b\x26\x3f\x81\xef\x0e\x5e\x9e\x14\x33\xf4\x15\xee\x2c\xc3\xe0\x26\x59\xce\x96\xe1\xec\xda\xde\xb8\xa1\xea\x91\x70\xff\xbd\x86\xd9\x6a\x0e\x5f\x00\x51\xc0\xa6\xea\xaf\xf6\x01\xee\x6d\xab\xf7\xcc\xc0\xc4\x71\xac\xc0\x3d\xbe\xba\xee\xbd\xf3\x4f\x00\x00\x00\xff\xff\xc9\x8c\x35\x25\x2f\x07\x00\x00")

func templatesPythonDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonDockerfile,
		"templates/python/Dockerfile",
	)
}

func templatesPythonDockerfile() (*asset, error) {
	bytes, err := templatesPythonDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/Dockerfile", size: 1839, mode: os.FileMode(0644), modTime: time.Unix(1729160721, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x22, 0xf9, 0x78, 0xa0, 0x75, 0x9, 0x9, 0xf5, 0xf7, 0x62, 0x9f, 0x47, 0x74, 0xa6, 0x57, 0x24, 0x6d, 0x0, 0x42, 0xb9, 0x2d, 0xb7, 0x5f, 0x16, 0xa9, 0xb9, 0x76, 0x28, 0x66, 0x2f, 0xc3}}
	return a, nil
}

var _templatesPythonFunction__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunction__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunction__init__Py,
		"templates/python/function/__init__.py",
	)
}

func templatesPythonFunction__init__Py() (*asset, error) {
	bytes, err := templatesPythonFunction__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/__init__.py", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var _templatesPythonFunctionHandlerPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcd\x6a\xdc\x30\x10\xc7\xef\x7e\x8a\x41\x97\x38\xd4\x5d\x92\xab\xc1\x81\x40\x53\x7a\xe8\xb1\xd0\x43\x58\x8c\xb0\x47\x8e\x58\x45\x72\x47\xe3\x4d\x4c\xc8\xbb\x17\xcb\x92\x95\x6c\x92\x3d\xed\x4a\xff\x8f\xdf\x8c\xb0\x22\xf7\x08\x3c\x8f\xda\x0e\xa0\x1f\x47\x47\x0c\x3f\x74\xc7\x15\xdc\xda\xb9\x08\xa2\x71\xc3\xf0\x46\xfd\xed\x86\x01\x69\x95\xc6\x99\x1f\x9c\x6d\x7d\x7f\x68\x49\x2a\x39\xb7\x4f\x8e\x0e\xca\xb8\xa7\x64\xf6\xfd\xa1\x28\x7a\x54\xf0\x20\x6d\x6f\xb0\x34\x21\x5c\xc7\x92\x8a\xf0\xdf\x84\x9e\xeb\x80\xbc\xf7\x4c\x01\xbb\xbf\x84\xef\x37\x27\x57\x75\x01\x00\xb0\xc6\x77\xda\x2a\x57\x2a\x41\xd8\xa1\x3e\x62\x0f\xb1\xa6\x5a\xfe\xd4\xf0\x12\x8f\xaf\xe2\xb2\x08\xa9\xce\x4d\x96\x91\xa0\x81\xab\x70\xd6\x0a\xc4\x48\x78\xd4\x6e\xf2\x02\xb4\x4d\xf9\x95\xf1\x91\x93\xbc\xa9\xa8\x82\xe5\x26\x83\xee\x2f\x92\xe3\x62\xbf\x40\x53\x4b\xe6\x26\x63\xc6\xee\x77\x03\x72\x29\xa2\x45\x54\x70\x15\x87\x25\xf4\x23\x34\xf0\xb2\xb5\x08\x37\xf1\x38\xb1\xa8\x41\xfc\x42\x63\x1c\xfc\x75\x64\x7a\x51\x65\x43\x6c\x17\xf5\xf6\x10\x41\x7b\x2d\xb6\x6d\x91\xc8\xd1\xe7\xab\x22\x51\xeb\x79\x19\xd2\x33\x95\xdb\xa0\x6b\x62\x9f\x97\xd1\x2a\x5b\x1b\x10\xf8\x8c\xdd\xc4\xd8\xca\x41\x6a\x2b\x72\x5d\xb4\xa6\xd5\x6f\xe0\xfa\xbd\xb6\xae\xc8\x13\xd9\xb0\xe9\x3b\x8d\xa4\xf6\xb8\x7c\x32\xbb\xbb\xb5\xfd\x76\x29\xbf\x7b\xee\x70\x64\xed\x6c\x19\xf9\x15\xd0\x01\xe7\x46\xd0\x51\x9a\x09\x45\x95\x60\x4d\xfc\xfd\x76\x9d\xa7\x46\x73\x32\x37\x93\xb4\x5e\xa3\xe5\x93\x99\x33\xfb\x4f\x72\x7c\x00\x9f\xa9\x55\x52\x1b\xec\xbf\xec\xfc\x19\xe4\xb3\x85\x1e\x3f\x0b\x7f\x11\x79\xfb\x82\xff\x03\x00\x00\xff\xff\x4a\x8d\x90\x4c\xc1\x03\x00\x00")

func templatesPythonFunctionHandlerPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionHandlerPy,
		"templates/python/function/handler.py",
	)
}

func templatesPythonFunctionHandlerPy() (*asset, error) {
	bytes, err := templatesPythonFunctionHandlerPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/handler.py", size: 961, mode: os.FileMode(0644), modTime: time.Unix(1718011597, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x66, 0xc3, 0x83, 0x12, 0x63, 0xd0, 0x75, 0x49, 0xd1, 0x69, 0x62, 0x49, 0x98, 0x2b, 0x4, 0xcd, 0x33, 0x61, 0x27, 0xcb, 0x3a, 0x96, 0x37, 0x2a, 0x41, 0x6c, 0xee, 0x60, 0x49, 0x8f, 0x87}}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxt,
		"templates/python/function/requirements.txt",
	)
}

func templatesPythonFunctionRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxtTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xa8\xad\xe5\xaa\xae\x86\x29\xaa\xad\xe5\xe2\x02\xe9\x4c\xcd\x4b\xa9\xad\xe5\x02\x04\x00\x00\xff\xff\x1c\xd5\x59\xbf\x44\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxtTmpl,
		"templates/python/function/requirements.txt.tmpl",
	)
}

func templatesPythonFunctionRequirementsTxtTmpl() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt.tmpl", size: 68, mode: os.FileMode(0644), modTime: time.Unix(1721992347, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0xda, 0x4b, 0x2c, 0x70, 0xc3, 0x2c, 0x80, 0x92, 0xd4, 0x0, 0x78, 0x67, 0xf4, 0x56, 0x2a, 0x47, 0x8c, 0xdf, 0x9a, 0x77, 0xa8, 0xb5, 0x1b, 0xd5, 0x3a, 0x36, 0x99, 0x35, 0x78, 0xe4, 0x65}}
	return a, nil
}

var _templatesPythonMainPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\x41\x0a\x83\x30\x14\x84\xe1\xfd\x3b\xc5\xd4\x6e\xda\x8d\xee\x0b\x9e\x65\x48\x6b\x82\x41\xf3\x22\x2f\x51\xf1\xf6\xa5\x68\x57\xc3\xc0\x0f\xdf\xfd\xd6\xad\xc5\xba\x77\xd4\xce\xeb\x86\xe5\xa8\x63\x56\x91\x60\x39\x21\xac\xfa\xa9\x31\x2b\x62\x5a\xb2\x55\x8c\x4e\x87\xd9\x9b\x5c\xf7\x6c\x59\x86\x89\xe6\x82\x3b\xb8\x67\x9b\xc2\x9c\x77\xb8\x82\x32\x4c\x22\x31\x80\x54\x97\x3c\x89\xbe\x47\x43\x26\x17\x95\x6c\x5e\x02\xe0\xd7\xb4\xc5\xdb\xe6\xf9\x97\x1e\x17\xd1\x9e\xfb\x94\x6f\x00\x00\x00\xff\xff\x3d\x62\xa4\x64\x9f\x00\x00\x00")

func templatesPythonMainPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonMainPy,
		"templates/python/main.py",
	)
}

func templatesPythonMainPy() (*asset, error) {
	bytes, err := templatesPythonMainPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/main.py", size: 159, mode: os.FileMode(0644), modTime: time.Unix(1710853495, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc7, 0x2e, 0x30, 0x84, 0xaa, 0x3a, 0x52, 0xb, 0x1a, 0x36, 0x1a, 0xf3, 0x92, 0x90, 0x68, 0xef, 0x69, 0x46, 0x54, 0x49, 0x6b, 0xb, 0x14, 0xb7, 0xb4, 0xb4, 0xba, 0xf3, 0xef, 0xbe, 0xe4, 0x38}}
	return a, nil
}

var _templatesPythonRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcb\x49\x2c\xce\xe6\x2a\x4f\xcc\x2c\x29\x4a\x2d\x2e\xe6\x2a\xc9\xaf\xb0\xb5\x35\xd6\xd3\xe2\x2a\xa8\x2c\xc9\xc8\xcf\x8b\x2f\x4e\xc9\x8e\x2f\x4a\x4c\x4b\xac\x8c\x2f\xcf\x2f\xca\x4e\xcb\xc9\x2f\xb7\xb3\x35\xd0\x33\xd0\x33\x32\x02\x04\x00\x00\xff\xff\x1d\x74\xbf\xe9\x39\x00\x00\x00")

func templatesPythonRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonRequirementsTxt,
		"templates/python/requirements.txt",
	)
}

func templatesPythonRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/requirements.txt", size: 57, mode: os.FileMode(0644), modTime: time.Unix(1729176638, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcf, 0x20, 0x1e, 0xf1, 0x22, 0x22, 0x8, 0xe8, 0xa4, 0x47, 0xe4, 0x45, 0x49, 0x4c, 0xaf, 0xb3, 0xec, 0x2, 0xe6, 0xe1, 0xd, 0xb3, 0xc2, 0x77, 0xae, 0x2f, 0x72, 0x2a, 0xdd, 0x5a, 0x6a, 0xe3}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go/Dockerfile":                         templatesGoDockerfile,
	"templates/go/function/go.mod":                    templatesGoFunctionGoMod,
	"templates/go/function/go.mod.tmpl":               templatesGoFunctionGoModTmpl,
	"templates/go/function/go.sum":                    templatesGoFunctionGoSum,
	"templates/go/function/handler.go":                templatesGoFunctionHandlerGo,
	"templates/go/go.mod":                             templatesGoGoMod,
	"templates/go/go.sum":                             templatesGoGoSum,
	"templates/go/go.work":                            templatesGoGoWork,
	"templates/go/go.work.sum":                        templatesGoGoWorkSum,
	"templates/go/main.go":                            templatesGoMainGo,
	"templates/python/Dockerfile":                     templatesPythonDockerfile,
	"templates/python/function/__init__.py":           templatesPythonFunction__init__Py,
	"templates/python/function/handler.py":            templatesPythonFunctionHandlerPy,
	"templates/python/function/requirements.txt":      templatesPythonFunctionRequirementsTxt,
	"templates/python/function/requirements.txt.tmpl": templatesPythonFunctionRequirementsTxtTmpl,
	"templates/python/main.py":                        templatesPythonMainPy,
	"templates/python/requirements.txt":               templatesPythonRequirementsTxt,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": {nil, map[string]*bintree{
		"go": {nil, map[string]*bintree{
			"Dockerfile": {templatesGoDockerfile, map[string]*bintree{}},
			"function": {nil, map[string]*bintree{
				"go.mod":      {templatesGoFunctionGoMod, map[string]*bintree{}},
				"go.mod.tmpl": {templatesGoFunctionGoModTmpl, map[string]*bintree{}},
				"go.sum":      {templatesGoFunctionGoSum, map[string]*bintree{}},
				"handler.go":  {templatesGoFunctionHandlerGo, map[string]*bintree{}},
			}},
			"go.mod":      {templatesGoGoMod, map[string]*bintree{}},
			"go.sum":      {templatesGoGoSum, map[string]*bintree{}},
			"go.work":     {templatesGoGoWork, map[string]*bintree{}},
			"go.work.sum": {templatesGoGoWorkSum, map[string]*bintree{}},
			"main.go":     {templatesGoMainGo, map[string]*bintree{}},
		}},
		"python": {nil, map[string]*bintree{
			"Dockerfile": {templatesPythonDockerfile, map[string]*bintree{}},
			"function": {nil, map[string]*bintree{
				"__init__.py":           {templatesPythonFunction__init__Py, map[string]*bintree{}},
				"handler.py":            {templatesPythonFunctionHandlerPy, map[string]*bintree{}},
				"requirements.txt":      {templatesPythonFunctionRequirementsTxt, map[string]*bintree{}},
				"requirements.txt.tmpl": {templatesPythonFunctionRequirementsTxtTmpl, map[string]*bintree{}},
			}},
			"main.py":          {templatesPythonMainPy, map[string]*bintree{}},
			"requirements.txt": {templatesPythonRequirementsTxt, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
