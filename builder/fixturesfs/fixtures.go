// Code generated for package fixturesfs by go-bindata DO NOT EDIT. (@generated)
// sources:
// templates/go/Dockerfile
// templates/go/function/go.mod
// templates/go/function/go.mod.tmpl
// templates/go/function/go.sum
// templates/go/function/handler.go
// templates/go/function/handler_test.go
// templates/go/go.mod
// templates/go/go.sum
// templates/go/go.work
// templates/go/go.work.sum
// templates/go/main.go
// templates/python/Dockerfile
// templates/python/function/__init__.py
// templates/python/function/handler.py
// templates/python/function/requirements.txt
// templates/python/function/requirements.txt.tmpl
// templates/python/main.py
// templates/python/requirements.txt
package fixturesfs

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGoDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x5b\x6f\xe3\x36\x13\x7d\xd7\xaf\x18\x28\x41\x5e\x3e\x90\x94\xec\x2f\x4e\x1a\x40\xc0\x2a\xb1\xa3\x0d\xea\x44\x81\xec\x74\xbb\x68\x0b\x83\xa6\x28\x89\x88\x44\x0a\x24\xe5\xa4\x08\xfc\xdf\x0b\x49\xbe\xe6\x82\xa2\x6f\x9c\x33\xc3\xb9\x9c\x33\x13\x26\x11\xfc\x08\xe7\x37\xdf\xc7\x71\xb4\xb8\xbb\x0f\xa3\xc9\x22\x99\x3c\xc6\x41\x5e\x30\x8d\x85\x22\xaa\xe6\x32\xa3\xd4\x10\x95\xa1\x17\x6a\x59\x91\xaa\xdc\xf9\xe4\xd3\x3c\x8c\x02\x0f\xfb\x1e\x1e\x75\xde\x28\x3e\x4a\xa6\x4a\x2a\xf3\x63\x47\xfb\xc1\xc7\x83\x21\xa2\x65\x2d\x24\x1f\xe2\x81\xdf\x05\xdc\xde\x3d\x84\xd3\xc5\x75\x38\x9b\xf4\x81\x41\xef\xbf\xea\x02\x9c\xdb\x24\xbe\x07\x84\xea\x92\xda\x4c\xe9\x2a\x38\x7d\x9b\x87\x49\x34\x99\x3f\x4e\xc3\xf9\x6d\x9c\xdc\x5f\xa1\x52\xc8\xe6\x95\xd0\x2a\x1d\xfd\x7f\x0d\xa7\x6f\x9f\xcc\xb6\xbe\xfa\x00\xcf\xc3\x68\x0d\xe1\x0c\x76\x13\x7e\xac\x73\xfd\x74\x37\x1d\x7f\x59\xe6\x68\xde\xb6\xc0\xe1\x9c\x5d\xea\x65\x23\xca\xd4\x71\x92\xa7\x07\xc8\x15\x08\x69\x2c\x2d\x4b\x40\x2b\xc8\x85\x2d\x9a\x25\x66\xaa\x22\x42\xb2\x66\xd4\x18\x92\x2b\x51\xd5\x4a\x5b\x83\x34\x5f\x09\xc3\x35\x59\x0d\xbf\xad\x86\xf8\x12\x0f\xde\x27\xe8\xa9\xc5\x4a\xe7\xe4\x95\x58\xa5\x4a\x43\x58\x95\xee\x33\x7c\x1b\xd1\xf3\xe5\x68\xb4\xe4\xd9\xc5\x65\xca\x2e\xa8\xcf\xb2\xcb\xf3\x5f\x86\xcb\xc1\xc5\x28\x1b\x9e\xfb\xde\x80\x33\x8f\x2d\x7d\x9f\x39\x1d\xfb\xc7\x6c\x76\xd0\xd1\xe0\x07\x41\xf1\xec\xc0\x08\x93\x9b\xef\xfd\x70\xb4\x7e\x06\x84\xa4\x42\x8c\xb2\x82\x03\x4d\xd3\x76\x42\xc7\xb9\x89\x1f\x7f\x02\x42\x99\x56\x55\xb0\xa5\x19\x48\xb6\x7f\x36\x46\x93\xa5\x90\x7b\xa8\x4b\xc7\x8a\x4a\xa5\xf0\xbf\xd7\xcf\xfc\x7d\xc1\xea\x39\x15\x1a\x50\x0d\x24\x57\xc4\x68\x46\x0a\x2a\xd3\x92\x6b\xe7\x47\x9c\xfc\x3a\xbe\x4b\x3e\xe0\x7d\x2b\x18\xb0\xe3\x6c\x56\xd2\xf7\xfd\xfb\x78\xfc\x34\x9d\x04\xae\x92\xee\x06\x7c\x4c\xe2\xdf\x7f\x06\xee\xd6\xbc\x9d\x86\xd1\x6c\x6b\xde\x44\xf1\x62\xf2\x10\x5e\x4f\x27\xe3\xc0\x73\x26\x0f\xbf\x1d\x21\xa7\x6f\x07\xd6\x7a\xab\xf9\x46\x10\x40\x2f\x80\x8f\xa1\xad\xca\x80\xda\x5d\xa3\x16\x90\xe6\xac\xd1\x46\xac\x38\x20\x5d\xa1\x46\x36\x86\xa7\x80\x09\xc6\xdb\x9f\xd0\xb2\x92\xaa\x17\x59\x2a\x9a\x3a\xce\x97\xb3\xb6\xd1\x51\x1c\xcf\x76\x87\x12\xcf\xd6\x10\xc5\xad\x5c\x3b\xa8\x35\xd6\xf0\xa7\x03\x00\x6d\xe6\x6e\x51\x01\xa1\x32\xcd\x4a\x9a\x1b\x70\x51\xdb\xb3\x0b\x48\xc1\x26\x2b\x5e\x0a\xd9\xb1\x77\x72\x02\xb7\x42\xd2\x12\x44\x45\x73\xfe\xdf\x8f\xf3\xfd\xad\x77\x87\x62\x0a\x51\x3b\xce\x09\x84\x69\x0a\x52\x49\xd0\x4a\x59\x68\x5a\x7a\xa8\x4c\x81\x71\x6d\xcd\x57\x8b\xc6\x28\x6a\xfd\x22\x13\x8c\x5a\x6e\x36\x33\x9d\x9d\xb5\xce\x5c\xab\xa6\x06\x34\x03\x5a\xd7\x1b\xa8\x4b\x8a\x66\x80\xf2\x0e\xa4\x75\x57\x77\x56\x97\xc2\x76\xf7\xa5\x1b\x66\x85\x92\x06\x8c\x02\x5b\x50\xdb\x53\xf3\x2c\x2c\x30\x2a\x41\x37\x12\xce\xa0\x2b\xee\x9c\x80\x2d\x38\xd4\xad\x8e\xaa\x31\xc0\x54\x55\xb5\xcd\xd2\x82\xd3\x14\x54\x06\x56\x54\x1c\xbf\xdb\xd6\x42\x55\x9c\xb4\x75\x77\x5d\xb2\x42\xbd\xc8\xae\x95\x9d\xf3\x40\xd9\x3d\x74\x78\x4a\x5b\xb5\xba\xbf\x41\xf7\xf7\x78\x05\xc8\xa1\x68\x5b\x05\xff\x2d\xc5\x87\x5b\x83\x56\xef\xa7\xd9\x24\xe9\x59\x6a\x37\x3e\xab\xb5\x62\xdc\x98\xc0\xc5\xdb\x1a\x6e\xe7\xa8\x54\xca\x03\xb7\xb0\xb6\xee\xed\xa6\x36\x56\x73\x5a\x2d\x1a\x5d\xf6\xf8\x15\x21\xfe\xe0\x02\x7b\xd8\xc3\xfe\xd5\xa5\x77\x39\xe8\x03\x6b\xcd\x33\xf1\xba\x28\x55\x6e\x02\x37\xa3\xa5\xe1\x3d\xae\x39\x4d\xff\x5e\xd4\xd4\x16\x81\x4b\x16\xa4\x33\x7b\x0f\x7f\xe5\x6c\xd1\x92\xab\x1a\x1b\xb8\xde\x3e\x7c\x0f\x0e\x47\xde\x06\x7f\xd1\xc2\xf2\xcf\x1c\x05\xa7\xa5\x2d\x58\xc1\xd9\xf3\x42\x48\xcb\xf5\x8a\x96\x81\x3b\xf4\x5c\xc7\xb9\xb9\x1f\xc3\x1f\x2e\xde\x13\xe1\xfe\xe5\xfc\x13\x00\x00\xff\xff\xa1\xfa\xad\xe7\x33\x07\x00\x00")

func templatesGoDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoDockerfile,
		"templates/go/Dockerfile",
	)
}

func templatesGoDockerfile() (*asset, error) {
	bytes, err := templatesGoDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/Dockerfile", size: 1843, mode: os.FileMode(420), modTime: time.Unix(1752564042, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoFunctionGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x4b\x6e\xc3\x20\x14\x85\xe1\x71\x59\x05\xc3\x76\x00\x5c\xfc\x88\x9d\x6d\xb4\x2b\xb8\x86\x6b\x8c\x82\xc1\x05\x1c\xd5\xbb\xaf\xaa\xaa\x8f\x54\x8a\xd4\xf9\xf9\xbf\xb3\x26\xbb\x07\xe2\x0b\x46\x1b\x28\xab\x79\x8f\xa6\xfa\x14\x19\x73\x89\x6b\xd9\xb4\x8c\x65\x7a\xdd\x7d\x26\xee\x7c\x5d\xf6\x49\x9a\xb4\xaa\x67\x9c\xf1\x78\x39\x4a\xa5\xb5\x7c\x27\xa2\xd2\xba\x05\xac\x54\x54\xb1\x17\xe5\x12\xbf\x82\x04\x09\xa2\x81\xa6\xd3\xa0\x47\x0d\x5d\x07\x83\x98\xce\x93\x36\x76\xee\x4f\x30\x8c\x3f\xfa\x23\x7b\xb8\x77\x40\xf1\xba\xba\x2c\xb6\x8b\x2b\xbf\x49\x68\x61\x80\xb6\x87\xfe\x2c\xf4\xd8\xa0\x46\xb4\x67\x18\x47\xae\x14\xf7\xd1\xfa\x4c\xa6\xde\x98\x0b\x96\xc5\x9b\x94\x37\xe5\x92\x30\x81\x30\x2e\xb5\x6e\x1f\x62\x2f\x9b\xff\x55\x99\x6a\x3e\x70\x0a\xf4\x55\x0e\xb2\xbb\x5b\x96\x6d\xd6\xad\x32\x58\x2a\xbf\x6a\x79\x92\xf0\x67\x99\x02\x46\x27\x53\x76\xea\x4d\x95\x23\x9a\x4f\xef\x76\xf5\xc4\xde\x03\x00\x00\xff\xff\x21\x20\x73\xf6\xa0\x01\x00\x00")

func templatesGoFunctionGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoMod,
		"templates/go/function/go.mod",
	)
}

func templatesGoFunctionGoMod() (*asset, error) {
	bytes, err := templatesGoFunctionGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod", size: 416, mode: os.FileMode(420), modTime: time.Unix(1746038593, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoFunctionGoModTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\x2c\xcd\x2c\x4a\x55\xd0\xe0\xaa\xae\xd6\x55\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xa8\xad\xe5\x52\x50\x50\x50\xa8\xae\x86\x29\xac\xad\xe5\x02\xeb\x4e\xcd\x4b\x01\xb1\x35\x01\x01\x00\x00\xff\xff\xe5\x67\xde\x62\x54\x00\x00\x00")

func templatesGoFunctionGoModTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoModTmpl,
		"templates/go/function/go.mod.tmpl",
	)
}

func templatesGoFunctionGoModTmpl() (*asset, error) {
	bytes, err := templatesGoFunctionGoModTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod.tmpl", size: 84, mode: os.FileMode(420), modTime: time.Unix(1746038593, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoFunctionGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd4\xd9\x8e\xab\xca\x15\x06\xe0\xfb\xf3\x14\xfb\x1e\xb5\x29\xcc\xe8\x48\xfb\x02\x1b\x63\x06\xcf\x18\x0c\xbe\x2b\xa0\x98\xa1\x18\x0a\x03\x7e\xfa\xc8\xdd\x89\x64\x47\xda\x9d\x8e\x94\xf3\x02\x5f\xfd\xeb\x87\xb5\xe2\x94\x24\xbd\x3f\x0b\x70\x49\x9f\x61\x04\x27\x6b\xea\x08\x2a\x3b\x1a\x55\xf7\x32\x6e\x3f\xea\x3c\xee\x7e\xdd\xc1\x0c\xcc\xc0\xc7\x1c\xcc\x39\xc0\x02\x11\xb0\x3c\xe0\x17\x1f\x8c\x34\x87\x0c\x84\xe1\x02\x48\xd2\xaf\x84\xf9\x47\xa1\x80\xfb\x28\xf0\x72\xd3\x28\x4e\xad\xae\x47\xea\x5c\x08\xaa\xc1\x1c\x26\xba\x72\xa9\xa5\x46\x5f\xb4\xfb\x65\xeb\x56\x0b\x7e\xb5\xfb\xfd\xd7\xff\xe7\x59\x3a\xc6\xb3\x12\x87\xcf\xd7\x8f\x59\x6e\x2e\x4a\x10\x1a\x1b\x06\x8b\x95\x53\x92\xdd\xc5\x46\xc1\xa1\xf0\x1e\x67\x27\x73\x45\xaa\xb8\x16\x7e\xbe\x2a\x29\x52\xca\x7f\x7e\x3d\xea\xab\x80\xa4\xb8\xfa\x20\xa8\xac\x0b\x48\x50\x47\x77\x61\x4e\xc7\xf8\x35\x0b\x03\x18\x89\x01\x1c\x07\xc4\x0f\x7f\xe1\x33\x41\x18\xf1\x02\x10\x3f\x2b\x88\x0d\x6d\x7d\xa2\xfa\xa1\x07\xe4\x41\x5b\x72\xd6\xbb\x0f\xc5\xc4\x83\xa9\x94\xd6\x80\x8f\xac\x24\x5b\x73\xbc\x6f\xe2\xcd\x2d\xcc\xff\x9e\x10\x2f\x85\x80\x14\xdd\x9d\x5e\x3e\x58\x66\xa3\x66\x88\xe9\x79\xfa\x42\x85\xf6\x7c\x13\xdc\xae\xe7\x9d\x9f\x8e\xa9\xa1\x77\xf6\x76\x61\x85\x3a\x78\xcb\x12\xc2\x3b\x0a\xe2\x84\x8e\xf1\x47\x57\xa3\xe1\xd7\x9d\x99\x31\x33\xe6\x05\x36\x44\x4f\xf2\x82\xeb\x7c\x9f\x26\x5d\x5c\x3a\x98\x2e\xef\x6c\x21\x0f\x05\xdd\xe5\x87\x3d\x97\x6e\xb5\xcc\xea\x74\x2a\xe0\x35\x56\x7a\x83\xa3\x16\x56\xb9\x0f\x2b\xba\xe9\xd3\x20\x27\xa8\x23\x9f\x36\x37\x13\x9e\xaa\xe8\x66\x23\xe5\xd4\x8f\x4a\xa3\xf0\xb2\x42\x59\x71\xb4\x33\x09\xdb\x75\x38\x56\x4e\xc7\x45\x92\x6b\x4b\xd7\x4a\xcb\x75\xee\xfa\x53\xf5\x25\x32\x57\x13\x18\x45\xe3\x7c\x94\xa8\xeb\xe5\xea\x96\xf6\xaa\x77\x6c\x01\x1e\x6d\x97\xa1\x77\x0f\xf1\xe1\xf3\x77\xdf\xc6\xe9\x4e\x18\xde\xbb\x88\x31\x8e\x0b\xf4\xac\x22\x28\xeb\x67\xfd\xc2\x0c\x3c\x3d\x1c\x4d\xc9\x78\x77\x83\x5b\xb2\xeb\x6c\xbe\x2f\x7c\x35\xdd\x9a\x05\xed\x2e\xd5\x66\xcd\x6c\xac\x46\x84\xa4\x97\x88\x5c\x5e\xce\xfa\x7f\xf5\x5e\x62\x32\x62\x68\x17\xf9\xf2\x00\x73\x03\x50\x4a\xde\x5a\xd6\x3e\x5b\xe5\x7a\x36\x5a\x82\xaf\x2e\x1e\x3e\x8b\x8a\x12\xed\x37\x7a\x86\xbd\x37\x36\x81\x5d\x92\x06\xb8\xad\x3f\xe5\x02\xc1\x2a\x21\xe4\xd3\xe7\x67\xf3\xcf\x7f\x81\xe5\x55\xd3\xd3\xaf\x59\x69\x6f\x27\xf5\xbc\x34\x8f\x9d\x74\x59\x9e\x70\x0a\x46\x21\x5c\x6c\xb8\x31\x58\x54\xc8\x35\xae\xf2\xed\xf4\x73\xf8\x25\x78\x7e\xa0\x3d\xa5\x38\x4a\x5b\x86\xe5\x84\xb5\x60\xe1\x70\xa0\x8e\x6d\xbd\xb4\x1c\x8e\xb6\xf0\xb8\x72\x37\x9e\xb0\x6c\xf6\xea\x85\x93\xfe\xec\x27\x41\x81\xe3\xa7\xbd\xf8\x0a\xbd\xda\x08\x97\x35\xaf\x2d\x68\xc3\xed\xd4\xab\xb1\x8a\xb0\xee\xd4\xa6\xaa\xe7\x2a\x12\xa6\x6e\xdd\x6b\x69\x5b\x73\xca\xb8\xea\x34\xfd\x67\xe8\x4b\x60\x7e\x65\x53\x30\xde\xa6\x13\x6b\x88\x7b\xf1\x94\x69\x26\x1f\x02\xde\x1c\x37\x5d\xef\xa6\xa7\x6d\x9b\xc9\x40\x13\x61\x90\xcd\x8b\x6f\x0a\x69\x11\x69\x27\xe8\x17\xe8\xdf\xa5\x88\x33\xee\x89\xdf\x4e\xb1\x13\xd6\x97\x50\xde\x8a\xd7\x7a\xa7\x0f\xdb\xc7\x2a\xf2\x61\x71\x08\x2c\x3b\xcc\x95\x5b\x55\xdb\x77\x96\xa6\x96\xe3\x43\x95\xff\x37\xfc\x75\x09\x27\x3a\x3e\x7a\x72\x98\x35\x51\x74\xa3\x27\x75\xb3\x52\x9d\x79\x88\x75\x7e\xc8\x88\xc6\xa0\x61\xb7\xe8\xa5\xd4\x73\x32\xe2\xbe\x37\x9e\xb7\x74\xdd\x22\x42\xa6\x27\xc9\xce\x98\xa7\x15\x15\x67\x85\xdb\xef\x07\x4f\xb6\xeb\xbc\x4e\x9c\x80\xd1\x02\x92\x9c\x39\x73\xad\xab\x86\xc0\x57\xd2\x6e\xe0\x9b\xf0\x5c\xb1\xdb\xf5\xb7\xd6\x4b\xbc\x04\xaf\xbb\xc4\x73\x34\x38\xee\x3a\x36\x98\x30\xeb\x55\x01\xee\xf9\x5b\x17\xa4\x51\xaf\xe0\xa2\x1d\x8e\xe6\x0d\x56\x1b\x76\xcc\xff\x93\x24\x68\x24\x4f\x70\xfe\xb5\x6a\xfc\x7e\x04\x1e\x04\xb7\xc6\x9b\x4f\xb1\xc3\x0a\xc2\xe9\x41\xfa\x56\xd3\x19\xd6\x68\x16\xbc\x5c\x07\x0e\x34\x96\x49\x6d\x51\xb2\xf7\x8d\xf4\x12\x0d\x6d\x51\x2b\xce\xe7\x17\x94\xa7\x9b\x7e\x97\xa7\xe1\x6e\x5c\xd1\xf5\x0e\x70\xc5\x75\x8d\x5a\xa8\xd9\x76\xb9\x1c\xa4\x62\x1e\xb7\xef\xd3\xd6\x25\x7a\xc0\x36\x7c\x7e\x9b\x30\x8d\xa2\x22\xf5\x9f\x87\x06\xbc\xd9\xa9\xa9\x89\x62\x8e\xd5\xc4\x1b\x2f\x26\x53\x07\xe7\x2a\x37\xf3\x26\xba\xe0\xb8\xf3\x63\x31\xbe\xed\x1d\x8f\xeb\xce\x8a\x77\xa3\xb9\x37\xbb\xc5\x71\x8d\xea\xfa\xf3\x32\xa4\x15\x41\x6d\x05\x8b\xa7\xbe\xf8\xea\x40\x64\x73\x4d\xb2\x29\xc3\x6e\x5c\x5b\x2a\xce\xfd\x41\x43\x8e\x06\x21\x6d\xdd\x8e\x69\xb4\x12\x97\x79\xd0\xc2\x9b\x83\x32\x19\x49\x3f\x65\x5f\x42\x5f\x89\x83\x5c\x69\x4c\x2e\xcb\x7b\x04\xba\x32\x4c\xfa\x6c\x20\xcb\xa0\xe1\x4e\xed\xa3\xa1\x23\x03\xb6\x70\xaf\x3a\x7b\xaa\x52\xbb\x37\xbd\xab\x23\x86\xa5\x03\xf8\x75\x71\xff\x75\x19\x37\xeb\xf4\xa2\xad\xb7\x2a\x75\x87\x67\x3e\x4c\x1e\xac\xd3\xdc\x22\xd5\x7a\xdc\x32\xcf\x8f\x91\xa9\xd4\xcb\xf1\xe4\x58\xdc\xc6\x33\xc0\xf7\xd8\x4b\x40\x58\x05\xeb\x7a\x39\x0e\x86\x72\x50\xac\x2b\x6d\x6f\xb8\x56\x69\xe5\x26\x35\x71\xd1\xec\xf7\xc9\x5c\x71\xd9\x32\x97\x84\x40\x0e\xf1\xbb\x49\x5a\x44\x82\xe4\xf9\x23\x74\x24\x8d\xa6\xa7\x3c\x7f\x3b\x03\x50\x3a\x54\xe7\x20\xf5\xb9\x2a\x49\xc0\x01\x9e\x65\x87\xf2\x48\x27\x89\xb9\x19\x36\xe0\x78\x14\x6b\x37\x9a\x84\x5c\xc9\x6d\xe7\x39\x3a\x2e\x60\x15\xcf\x70\x1b\xd3\x23\xdd\x4d\x55\xf0\xb5\x95\x9f\x63\x7b\x9d\x5e\x46\xd6\x12\x1f\x17\xa7\xa3\xb7\x05\xe3\x64\x1a\xc7\x06\xc4\x01\x34\xc2\x0d\xdb\xea\x15\x6e\xc6\xcb\xd5\x8f\x4e\xfd\x62\xf7\x67\xe8\x25\xd8\xea\x41\xa8\xc1\xec\x99\x78\x35\xad\x55\xc5\x26\x15\xc8\x36\xfc\xc9\xb9\xd7\x86\xd0\x3e\x9c\xa6\xe5\xa1\x3b\x91\x45\xd8\x9e\xa2\xfc\xf7\x5f\xff\x0c\x00\x00\xff\xff\x68\x1a\x75\xe2\xc3\x09\x00\x00")

func templatesGoFunctionGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoSum,
		"templates/go/function/go.sum",
	)
}

func templatesGoFunctionGoSum() (*asset, error) {
	bytes, err := templatesGoFunctionGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.sum", size: 2499, mode: os.FileMode(420), modTime: time.Unix(1746038593, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoFunctionHandlerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\xdf\x6b\xdb\x30\x10\x7e\x96\xfe\x8a\xdb\xc1\xc0\x5e\x3d\xa7\x85\xb1\x87\x74\x19\x8c\xd1\xad\x85\xb1\x87\x76\xb0\x87\x10\x8a\x6a\x9f\x5d\x61\x5b\x72\x4e\x72\xdb\x50\xf2\xbf\x0f\xc9\x71\x9a\xd0\xb2\x17\x5b\xba\xbb\xef\xbb\xef\x7e\xa8\x57\x45\xa3\x6a\x82\x6a\x30\x85\xd7\xd6\x48\xa9\xbb\xde\xb2\x87\x44\x0a\x2c\xac\xf1\xf4\xe4\x51\x0a\xac\xba\xf8\xf3\xba\x23\x94\x52\xb8\xb2\x01\xac\xb5\xbf\x1f\xee\xf2\xc2\x76\xb3\x6b\x55\xa9\xcd\xcd\xc6\x79\xea\xdc\x6c\xe2\xfa\xe8\xa9\xeb\x5b\xe5\xc9\xcd\x5c\xd9\xcc\x6a\x8b\x32\x95\x32\x78\xe1\x52\x99\xb2\xa5\xa4\xf0\x4f\xb0\x4b\x92\x7f\x1f\xff\x19\xb4\xb6\xae\x89\xc1\x95\x4d\xfe\x2b\x1e\x33\x60\x5a\xc7\xfb\x35\xad\x07\x72\x3e\x85\x64\xbc\xb9\xde\x1a\x47\x19\x10\xb3\xe5\x14\x9e\xa5\x18\xc1\xf9\x95\xa9\x6c\x82\x4c\x05\xe9\x07\x2a\x03\x3e\xe0\x30\x03\x64\x5a\x63\x24\x4c\xa5\x14\x85\x1d\x8c\x27\x86\xf9\x02\x4e\xf3\x53\x29\x74\x05\x3d\xd3\x43\x06\xb6\x09\x36\xa6\xf5\x12\x83\x41\xdb\xc1\xe1\xea\x3c\x98\x9f\xa5\x38\x4e\x32\xf9\x0f\x93\x04\x1b\x66\x91\x2b\x95\x62\x9f\x66\x11\x2d\x79\xd2\xa9\x7e\xe9\x3c\x6b\x53\xaf\x94\xd9\xa4\x4b\xdc\x05\xe0\x2a\x4f\xaa\xd6\x2a\xff\xf9\x53\x2a\xc5\x56\x4a\xc1\xe4\xfa\xa0\xa4\x53\x0d\x1d\xd5\x9c\x8e\xbe\x25\xda\xc1\xf7\x83\xc7\x15\x2c\x00\x2f\xa9\x6d\x2d\xfc\xb5\xdc\x96\x38\xf9\x27\x55\x21\x80\x69\x3d\x15\x1d\x7b\xb6\xab\x31\xff\x49\xfe\xca\xf8\x64\x94\x81\x69\xec\x43\x70\xbf\x5b\x80\xd1\x6d\x2c\x99\xc9\x0f\x6c\xc2\x35\x8b\x93\xf8\x4d\x8f\x17\xcc\x3f\x94\x6e\xa9\xdc\x01\x41\x3b\x30\xd6\x83\x32\xa0\x8d\xa7\x9a\x18\x77\x55\x54\x96\x41\xc7\x26\x9f\x83\x86\x2f\x10\xc3\xcf\x41\x9f\x9c\xbc\x6e\x67\x6b\x6b\xd0\x9e\x58\x85\x0d\x0a\xbd\x34\x43\x77\x47\x8c\x19\xe8\xd0\xca\xb0\x80\xf9\x4d\x4b\xd4\x27\x67\xf0\x01\xc6\x2b\x15\xd6\x94\xbb\x5c\xa3\xf4\xa3\x09\xc6\xed\x38\x18\x1f\x31\xdf\xc4\xee\x67\x70\x1b\x82\x88\x39\x4f\xc6\x79\x84\x14\xee\x51\xfb\xe2\x1e\xf6\x51\x11\x53\x28\x47\x80\xf4\x44\xc5\xe0\xe9\x56\xd5\x4a\x1b\x9c\x4b\x21\x42\xbe\x69\xbc\x5f\xe1\x2c\xc6\x0a\x71\xc7\xa4\x9a\x70\xda\x86\xcf\xdb\xbd\xbb\x18\xb9\xbe\x05\xaa\xe4\x40\xd2\xf1\x72\x8c\x7c\xc8\x0d\x6d\x70\x0e\x00\x80\xfc\xa0\xda\x81\x30\x1b\x1d\xd3\xe6\xcc\xf7\x2a\x4e\xe0\x2c\xfa\xb6\xe9\x5e\xb6\x67\x65\x9c\x26\xe3\x47\xc9\x6f\xeb\xf9\x33\x05\xbd\x88\x79\x61\xa8\xe2\xa0\xff\x07\xdf\xad\xc2\x11\xb6\xa4\x4a\x0d\xad\x7f\x85\xaa\x3a\x9f\x5f\x84\xa1\x54\x09\x0e\xa6\x31\xf6\xd1\x8c\x4f\x78\x0e\xef\x1d\x66\x70\x44\xb2\x9d\x5e\x42\xc4\x1f\xbe\x81\x24\x6c\x78\x9a\x05\x4e\xb9\x95\xff\x02\x00\x00\xff\xff\xc7\xfe\x3d\xc5\xca\x04\x00\x00")

func templatesGoFunctionHandlerGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionHandlerGo,
		"templates/go/function/handler.go",
	)
}

func templatesGoFunctionHandlerGo() (*asset, error) {
	bytes, err := templatesGoFunctionHandlerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/handler.go", size: 1226, mode: os.FileMode(420), modTime: time.Unix(1758023298, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoFunctionHandler_testGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x91\xc1\xce\x9b\x30\x10\x84\xcf\xde\xa7\xd8\x5a\x6a\x85\x2b\x0a\x52\x8f\x48\xff\xed\x57\xd5\x43\xd4\x48\x09\xf7\xca\x81\xc5\x41\x18\x9b\xe0\x25\x4d\x14\xe5\xdd\x2b\x3b\x90\x0b\x5a\x98\x9d\x6f\x06\x7b\xd2\xcd\xa0\x0d\x61\xb7\xb8\x86\x7b\xef\xfe\x32\x05\x06\xe8\xc7\xc9\xcf\x8c\x19\x08\xd9\x78\xc7\x74\x63\x09\x62\xdb\x41\x79\xd6\xae\xb5\x34\x97\xdb\x17\x09\x42\x5a\x6f\xca\x60\xbd\x89\xb3\x0f\xf1\x19\x51\xbd\x33\x12\x40\x84\x76\x40\x69\x7a\x3e\x2f\xa7\xa2\xf1\x63\x79\xd0\x9d\xbe\x1f\xef\x81\x69\x0c\x6f\xca\x0f\xa6\x71\xb2\x9a\x29\x94\xa1\x1d\x4a\xe3\x25\x28\x80\xa8\x62\x4d\x81\x7f\xbf\x42\x33\xc6\xef\x2b\xb9\xa8\x15\x3e\x00\x84\xf5\xc6\xd0\x8c\xd5\x07\xc6\x02\xc5\x1f\xfa\x97\x6d\x43\x4d\xb7\xb7\xd1\x87\xe2\xc8\xad\x5f\x38\xc7\x6f\x49\x5f\x85\xfd\x14\xd3\xc3\x03\x84\xd8\xd1\x95\x6c\xf5\xc2\xa4\xf9\x93\x4e\x8b\xc9\x41\x3c\x95\x02\x10\x33\x5d\x52\x4a\x3b\x14\x07\xba\x2c\x14\x38\x9a\x64\xe3\x17\xc7\xb2\xc2\x9f\x71\x31\xad\x85\x29\x47\x9a\x53\xa5\xed\xef\xd6\xb4\x6c\x3d\xcf\xa2\xde\x7f\xee\x33\x95\xe3\xab\x7c\x8e\x33\x5d\x14\x88\xbe\x4b\xbe\x2f\x1f\xe8\x7a\x8b\x91\xce\xc5\xce\x9b\x2c\x1d\x66\x94\xfc\x5c\xa1\x4c\x70\x95\xc4\x5f\x9a\xb5\xed\x32\xb9\x4a\x5f\xaf\x6f\xf1\x09\x9b\x77\xbd\x2e\x8c\xbd\xbc\x0b\x94\x08\xf1\x45\x01\x3c\xe1\x7f\x00\x00\x00\xff\xff\xa1\x8e\x10\xdc\x03\x02\x00\x00")

func templatesGoFunctionHandler_testGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionHandler_testGo,
		"templates/go/function/handler_test.go",
	)
}

func templatesGoFunctionHandler_testGo() (*asset, error) {
	bytes, err := templatesGoFunctionHandler_testGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/handler_test.go", size: 515, mode: os.FileMode(420), modTime: time.Unix(1755757047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\x8e\xdb\x20\x14\x86\xd7\xe5\x14\x2c\x9b\x05\xf0\xc0\x26\x8e\xaf\xd1\x9e\x80\x60\x82\x51\x80\xe7\x02\x8e\xe2\xdb\x57\x8e\xd4\x6a\x34\x23\xcf\xcc\xf6\xe9\xfb\xbe\xf7\x27\x9c\xd6\xe8\xa8\x47\x76\x5b\xb3\x6d\x01\x33\x9b\x4d\x9e\xa2\x2b\x84\x78\xa4\x92\xab\x8e\x03\x21\x0d\x31\xda\xd9\x84\x4c\x3d\xbe\x6e\x1d\x21\xc5\xfd\x59\x43\x71\xf4\x27\xf9\xe1\x43\x9b\xd7\x2b\xb7\x98\xc4\x2f\x73\x33\xdb\xef\xad\x36\x97\xaa\x70\xf9\x91\x7c\x61\xcb\xdd\x57\xfa\x00\x0e\x1c\x98\x02\xd5\x43\x07\x03\x74\x1a\xf4\xc8\xe4\x45\x19\x69\xcc\x34\xc2\xe5\x72\xdc\xf9\xbf\xad\xb9\xb4\x44\xd3\x5c\x15\x75\xba\x0b\x8f\x6f\xaa\x1a\x06\x50\x00\xea\xac\x15\x1b\x75\xa7\xed\xa0\x26\xd9\x0f\x67\x72\x3a\x9a\x3a\x9b\x3a\x07\x8b\x65\x11\x1e\x99\x8d\xce\xe4\xb9\xb5\x65\x4f\x6a\xae\xa8\x10\x34\xe4\x29\x14\x67\xdb\xb1\x55\x5c\x2b\x9b\xb9\x46\xf7\xcf\x1c\x78\x7f\x68\x56\x93\xae\xae\x88\x88\xf4\x21\xb9\x96\x1c\xbe\x22\x6b\x44\xcf\x2c\xa6\x84\x79\x6f\xcb\xf1\x9b\x4a\x5a\x63\x0b\xfb\x93\x9e\xcb\x63\x61\xb9\xc9\x4e\x58\x53\xdb\x4e\x9e\x3f\xa4\x31\x9a\xec\x39\x16\x2f\x9e\xa2\x6e\xd9\xbe\x16\xe8\x4f\xb1\xe6\x9e\x6d\xc7\x94\x7a\x87\x9d\xc8\xdf\x00\x00\x00\xff\xff\x1d\xed\xcb\x6e\x68\x02\x00\x00")

func templatesGoGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoMod,
		"templates/go/go.mod",
	)
}

func templatesGoGoMod() (*asset, error) {
	bytes, err := templatesGoGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.mod", size: 616, mode: os.FileMode(420), modTime: time.Unix(1752564042, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd6\xd7\xae\xa3\x4a\xbe\x06\xf0\xfb\xfd\x14\x7d\x8f\x96\xc9\xe9\x48\xfb\x02\x6c\x63\x0c\x06\x07\x4c\xbc\x2b\x72\x2e\xa2\x09\x4f\x7f\xe4\xb5\x7a\x46\x76\xab\xbb\x77\x8f\x34\xf3\x02\xbf\xfa\xf8\xa8\xfa\x57\x25\xd9\x90\x8e\xfe\x26\x80\x15\x7a\x03\x31\x58\x8c\xa5\x1f\xa2\xaa\x47\xa3\xfa\x51\x25\xdd\x47\x53\x24\xfd\xb7\x07\xb6\xc1\x36\xd8\x07\x81\x11\x14\x46\x62\x2c\x46\xd2\x18\xcd\x7f\xe0\x1c\x01\x70\x00\x42\x1e\xe3\xb8\x6f\x29\xfe\x7f\xe5\x0e\x7b\xcc\x0c\x2d\xb4\xed\xce\x6a\xa4\xfd\x8c\xdc\x4a\x46\x52\xf0\xf3\x82\xd6\x0e\x22\xca\xe8\x5d\x7e\xdc\x4f\x4e\xcd\xd3\x5b\xed\xef\xbf\xfe\x3b\xcb\xa2\x09\xdc\x54\x30\x7c\xae\x7e\xc9\x0b\x95\xaf\xb0\x50\x39\xe0\x90\xad\xad\x6a\xd0\xee\x66\x14\x9c\x4b\x77\xbd\x59\xb9\xc3\x22\xa5\x5d\xfa\xc5\xb6\x42\x86\x4a\xf8\xf5\xea\xf1\x58\x07\x43\x06\xeb\x8f\x21\xaa\x9a\x12\x0c\x51\x8f\xf6\x61\x81\x26\xf0\x25\x0b\x8d\xb1\x18\x81\x61\x04\x43\x13\x1f\x3c\x4d\xd2\x01\x4b\x84\x38\xc5\x32\xcf\x10\xd3\x63\x16\x55\xcb\x1c\xd6\xf5\x2e\x37\xee\xc9\x81\x3a\x7f\x9c\x9b\xdc\xb9\x5c\x4c\xdc\xb9\x48\xd3\x11\xb3\x1f\xe5\x16\x53\x31\xbd\xf8\xdf\x84\x78\x29\xa4\xcc\x5a\xfd\xaa\xb9\x65\x3f\xf0\x3e\xd3\x21\x6d\xa7\xec\xd6\x0b\x99\x64\x32\x1d\x74\x19\xe6\x5d\x17\xa3\x51\xd7\xc2\x27\xd8\x3d\xf6\x96\x25\x04\x8f\x28\x48\x52\x34\x81\x1f\x7d\x13\x4d\xdf\x1e\xf8\x06\xdf\xe0\x2f\xb0\xc2\xba\x9c\x1b\xd8\x84\x9e\xa5\x7d\x52\x59\x10\xad\x1e\x64\x29\x4c\x25\xda\x17\x67\x9d\xca\x4e\x72\x6e\xf4\x47\x24\xa0\x65\x92\x7b\x83\xe3\x0e\xd4\x85\x0f\x6a\xb4\x1d\xb3\xa0\x18\xa2\x7e\xf8\xb4\xa9\xcd\x67\x75\xac\x93\xcf\x88\xd5\xac\xb5\x8c\x40\xb1\x8e\xf2\xf2\x62\xe6\x1c\x34\x9b\x70\xae\xad\x9e\x8a\x39\xc7\xe4\xec\x5a\x2e\x8e\x94\xfd\xa7\xea\x4b\x64\xaa\x19\x40\x1c\xcf\xc4\xcc\x21\xf6\xdd\x76\x2a\x73\x3b\x5a\x26\x03\x2e\xa6\x83\xa3\xda\xca\xae\x3e\xfd\xf0\x4d\x98\x69\xcc\xf4\xde\x45\x02\x61\x52\x46\xcf\x2a\x82\xaa\x79\xd6\xcf\x6c\xb0\xa7\x07\xe3\x25\x9d\x1f\x4e\xe0\xa5\x5a\x6f\xd2\x63\xe9\x4b\xd9\x49\x2d\x51\x47\x94\xda\x3d\x7e\x30\x5a\x16\x0c\x23\x37\x08\xd5\xfd\x76\xfc\x47\xef\x25\x26\xce\x86\x66\x59\x88\x67\x50\x28\x18\xb2\x2b\x3a\xc3\xd0\xf3\x6d\x71\xcc\x67\x83\xf1\x25\x7e\xf5\xc9\xa8\xac\x22\xfd\x70\xcc\xa1\xfb\xc6\xa6\xa0\x4f\xb3\x00\x76\xcd\xa7\x5c\x46\xa0\x4e\x87\xe1\xd3\xa7\x37\xc4\x13\xc6\x48\x5a\x52\xdd\xa3\x9d\x57\xe6\x69\x91\x6e\xa2\x7a\xe9\xb9\xbb\x78\x85\x19\x36\x33\x21\x7f\xa0\xe6\x80\xaf\x23\x47\xb1\x05\xef\xfa\xe7\xf0\x4b\xf0\xe2\x8c\xba\xbb\xf2\xc2\x9d\x70\x92\x62\xf6\x8c\x01\xc3\x09\xb9\x74\x8d\x68\x58\x14\x6a\xc0\x79\xeb\x1c\x5c\x46\x6c\x75\xe9\x4e\x71\xbf\xf6\xd3\xa0\x84\xc9\xd3\xe6\xbf\x42\x6f\x0f\xcc\x7d\x4f\xcb\x3c\xaa\x38\xbd\x64\x2b\xdb\x18\x1e\xad\x46\x95\x8e\x85\x14\x31\x4b\xbf\x1f\xe5\xac\x6b\xa8\xdd\xbc\xed\xe5\xe3\x9f\xa1\x2f\x81\xe9\xad\x89\x80\xe4\x94\x2d\xa4\xc2\xea\xec\x35\x97\x55\x3a\xc4\x68\x75\x3e\xf4\xa3\x93\x5d\x4f\x5d\x2e\x60\x32\x0b\x82\x9c\x28\x7f\x53\x48\x17\x0d\xdd\x02\xfc\x32\xfa\x57\x29\xec\x86\x7a\xe2\xde\x35\xb1\xc2\xe6\x1e\x0a\x27\xd6\x6e\xb4\xe3\x74\x5a\xb7\xb1\x0f\xca\x73\x60\x98\x61\xb1\xf3\xea\xc6\x7c\x90\x28\x22\xce\xab\x24\xfc\x67\xf8\xeb\x21\x5c\xd0\xe4\xe2\x0a\x61\xde\xc6\xb1\x87\x2e\xd2\x61\x2b\x59\x44\x08\x8f\xf4\x94\x0f\x32\x1e\x4d\x1a\x3f\x72\x99\x6b\xe5\x83\xf3\xde\x78\xd1\xa1\x4d\x17\x0d\xc3\xf2\x24\xc9\x0d\xfe\xb4\xe2\xf2\xb6\xa3\x74\x7d\x72\x05\xb3\x29\x9a\xd4\x0a\x70\x39\x18\xd2\x1b\xa5\xee\x8f\x92\xc2\xd0\x35\xa7\x4d\x74\x1b\xde\x6a\xf2\xb4\xff\xad\xf5\x12\x2f\x85\xfb\x3e\x75\x2d\x19\xcc\x5a\x4f\x06\x0b\x24\xdd\x3a\x80\x23\xed\xf5\x41\x16\x8f\x3b\x58\x76\xd3\x45\xf5\x40\x7d\x20\xe7\xe2\x47\x72\x88\xe6\xe1\x09\x12\x5f\x47\x8d\xd6\x67\xcc\x05\x98\xd7\xba\xc4\x92\x58\x24\xc3\x5c\xd7\x61\xec\xe4\x23\x4e\x2a\x2d\x4f\x0b\x4d\x60\x01\x45\x4c\x1b\x03\x11\xdc\xdf\x48\x2f\xd1\xa2\x53\xd4\xb1\x04\x71\x8f\x8a\xec\x30\x6a\x45\x16\x6a\xf3\x16\x6d\x34\x8c\x2a\xed\x7d\xd4\x01\xd9\x34\x2b\x71\xe2\x4a\x22\xe9\xde\xbf\xb6\xa9\xa2\x15\x74\xe1\xf3\xdf\x84\x59\x1c\x97\x99\xff\x1c\x34\xd8\x9b\x9d\xa9\x32\xcb\x16\x50\x4a\xdd\xf9\xae\xe2\x4d\x70\xab\x0b\xb5\x68\xe3\x3b\x4c\x7a\x3f\x61\x13\x4f\xb7\x5c\xaa\xbf\xed\x5c\x0f\xa5\xde\xec\x0e\x26\x4d\xd4\x34\x9f\x93\x21\xab\x87\xa8\xab\x41\xf9\xd4\xf9\xaf\x0e\x58\xb2\x90\x39\x13\x51\xcc\xd6\x31\xb9\xf2\x36\x9e\xe5\xc8\x92\x01\x40\x0d\xef\x92\xc5\x5b\x56\x2c\x82\x0e\x78\x56\x94\x0b\x11\xf7\xa7\xec\x4b\x68\x7b\xb0\x22\x87\x9b\xd3\xbb\xf8\x88\xb1\xbe\x0a\xd3\x31\x9f\x06\x31\x68\xa9\x6b\xb7\xb6\x68\xac\x80\x0e\xe8\x92\xa5\x23\xb5\xd4\xbf\xe9\x3d\xa8\xfc\xa8\x43\x4b\xf8\x24\x69\xfc\x2b\x6a\xb1\xf4\x37\xf7\xe4\xcb\x0b\xaa\x89\x6c\x71\xf5\x62\x7a\x67\xe8\x34\xa6\xc8\x95\xd6\xeb\xfb\x30\x72\x09\xca\x5a\x15\x69\x64\xa7\xe3\xef\xb1\xd7\xe9\x8d\x68\xce\xfe\xd0\x2b\xab\xaf\x1e\x80\xb9\xbf\x4a\xaa\xd8\x12\xf3\x10\x8f\x6b\x6d\xf3\x70\x45\xed\x2e\x59\x56\x6d\xbd\x41\x0d\xfb\x99\xd9\x97\x30\xf9\x08\x60\x55\xc1\xfa\xb9\x1b\xf0\xef\xa5\xc6\x7a\xe0\xf9\x9c\x48\x8c\xe7\x13\x84\x91\x3b\x49\x8d\x50\xaa\x79\x71\xbd\x9b\x20\x0e\xf3\xb8\x55\x83\x29\xd8\x72\xfc\x81\x77\x7f\x9a\xf4\x27\xea\x4b\xe4\xf0\xbe\x22\xee\xd9\x64\x19\x20\x63\x18\xeb\x9a\x26\xb6\x8b\xe3\xde\xd1\xfb\x83\x74\xbd\x5d\xcb\xf2\x72\x4d\x79\x67\xd1\xa1\x40\x6a\xbf\xc4\xab\xb1\x1c\xb2\x67\x1d\xd4\xd7\x31\x3d\x5b\xe2\x7c\x56\x03\xd8\x89\xc1\xe1\x6a\xa9\xf9\x54\x76\x40\xa0\x70\x45\xb5\x27\xf9\xba\x88\x28\xa9\xc6\xeb\x89\x3c\x2a\x82\x9b\xfc\x91\xf9\xba\x6f\x2b\xc2\xcb\xc8\x4a\x46\xb3\x87\xe1\xd2\xce\x2e\x67\x4e\x52\xa0\xde\xe1\xed\x68\x5f\x26\xfc\x1c\xe4\x86\x65\x84\xce\x80\x10\xe1\x0f\x0d\x37\x31\x4e\xa2\x01\xf8\xba\x74\xbf\x5f\x8e\x87\x7d\x76\x97\xf7\x27\x09\x79\x80\x1b\x1d\xa6\x2b\x69\xb5\x5e\x2c\x19\xab\x97\xbb\x7e\x12\xa9\xbb\x46\x9c\xaf\x96\x41\x1d\x5c\xe5\x1f\xb0\x97\x80\xa0\x0e\xf6\x8d\x38\x4f\xca\xee\xbc\x33\x6c\xd4\x3c\x50\xdd\xae\x13\xda\x4c\x85\x65\xab\xeb\x29\xb1\x73\xc8\xaa\xe0\x98\x40\x08\xe1\xbb\x39\x74\xd1\x10\xa4\xcf\x59\xd0\x0f\x59\xbc\x3c\x65\xe2\xed\x26\x00\xdc\xb9\xbe\x05\x99\x4f\xd5\x69\x8a\x9d\xc1\x4d\xb0\x10\x77\xe8\x39\xb6\x50\xc3\x16\xbb\x5c\xd8\xc6\x89\x17\xa6\xd8\x15\xa6\xf5\xdc\xfd\xb0\x04\x75\xb2\x81\x5d\x82\xce\x68\xbf\xd4\xc1\xe7\xaf\xa7\xbf\xbe\x5b\xb5\x65\x32\xd7\xbd\x3e\x5e\xee\xcc\x1c\x0b\xb1\x9a\xad\x8c\x76\xd3\xab\x90\x62\xc4\x45\xde\xb9\xc0\x63\x55\xa3\xd8\x0e\xe1\xe7\x0b\xe6\x57\xd2\xeb\x73\x20\x5c\x13\xd9\xd0\xe3\x06\x23\x66\x20\x70\xb8\x42\x68\x06\xcf\x5f\x83\xa6\x23\x26\x36\x9e\xf0\xa4\xa9\x78\xbe\x2b\xa3\x5b\x2b\xfc\x00\xfe\x7b\xf2\x7d\x1f\xa2\x3e\x8c\x5b\xb6\x22\x51\x59\x90\x1e\xbe\x44\xe3\xf9\x4a\x5e\xf9\xe9\x94\x90\x79\xf1\x30\x2e\x63\xe6\x8d\x68\xb3\xc3\x9d\x29\x19\xb4\xdf\x48\x2f\xd1\xdc\x1b\x84\x94\xcc\x5d\xac\xaa\x1f\x91\x3d\x79\x1e\xd9\xa0\x3d\x59\x32\x07\x1d\xfb\x28\x5b\xd0\xc1\xf2\xd6\xb4\x85\xd3\x35\x8d\xdd\xbf\xff\xfa\xff\x00\x00\x00\xff\xff\x0c\x96\x25\x96\x63\x0c\x00\x00")

func templatesGoGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoSum,
		"templates/go/go.sum",
	)
}

func templatesGoGoSum() (*asset, error) {
	bytes, err := templatesGoGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.sum", size: 3171, mode: os.FileMode(420), modTime: time.Unix(1752564042, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoGoWork = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x57\x30\xd4\x33\x32\xd6\x33\xe0\xe2\x2a\xc9\xcf\xcf\x49\xce\x48\xcc\xcc\x53\x48\xcf\x07\x8b\x19\x73\x71\x95\x16\xa7\x2a\x68\x70\x71\xea\x71\x71\xea\xe9\xa7\x95\xe6\x25\x97\x64\xe6\xe7\x71\x69\x72\x01\x02\x00\x00\xff\xff\x7b\x2d\xbd\xe8\x36\x00\x00\x00")

func templatesGoGoWorkBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWork,
		"templates/go/go.work",
	)
}

func templatesGoGoWork() (*asset, error) {
	bytes, err := templatesGoGoWorkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work", size: 54, mode: os.FileMode(420), modTime: time.Unix(1752564042, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoGoWorkSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xbb\x96\xa2\x4c\x10\xc0\xf1\x7c\x9e\xc2\x9c\x23\x7d\x11\x44\xe6\x1c\x03\x15\x3e\x81\x01\x05\x14\xfd\x30\xb3\xb9\x74\xa3\x60\x23\x30\x5c\x7c\xfa\x3d\xcc\x26\x6e\xb0\xc9\x86\x95\xfc\xfe\x55\x45\xb3\x86\x7d\x13\x31\xe2\x05\x88\xaf\x6d\x12\x51\x06\x28\x9f\xd6\x65\xd2\x4d\x5a\x24\x22\x11\x4d\x18\xfa\x6c\x6f\xea\x0d\x7c\x23\xf2\x7c\xb4\x1b\x3d\xb5\xf6\x5d\xc0\x9a\x7c\xbf\xf2\x9f\xf5\x4c\xa8\xee\x46\x18\xa2\xd9\x2d\x3c\x1f\x03\x55\x89\x96\x1f\x6f\x62\x59\x24\xaf\x6b\x15\x8f\x62\x9c\xa5\x69\x9e\x91\x11\x85\x22\x1c\x51\x49\x5b\x77\x9a\x0e\x77\xdb\xc1\xe3\x6b\x83\xd8\x5e\xe8\x76\x87\xc0\xe5\x1b\xe7\xec\xcb\x6b\xfd\x65\xde\x41\x8a\xf2\x0b\x59\x79\xce\x1f\x68\xdd\x54\x49\x13\xb1\x0a\x34\x49\xdd\x64\xe9\x30\x92\x58\xc4\x23\x49\x0e\xda\xae\x0d\x95\x8b\xbb\x95\xfd\xdc\x5a\xf0\x46\x07\xca\x69\x4e\x9d\x6c\x48\x1e\x85\xea\x37\x96\x62\x06\x27\x73\xc5\x2d\xd4\x2d\x3f\x28\xcf\xaf\x0f\x2a\xf2\x8a\x82\x1e\x14\x3c\x9e\xb4\x50\x44\xca\xef\xdd\x5e\xa1\x2c\x05\x45\x9b\x95\x46\xb6\x8b\x85\xb2\x10\x0a\xd8\xab\x5f\xec\xa2\xb2\x1c\x01\xc5\xdb\x39\x43\xff\x3f\x89\xe6\xe6\xe6\xb9\xfa\x3b\x04\x28\x17\xc7\x91\xa1\x4f\x76\x24\xc5\xba\xde\xcf\xb1\x90\x0c\xb9\x45\x1e\x41\xa3\x63\x67\x6b\x05\x83\xae\x78\xe7\xbb\xd4\x07\x4f\xf7\xbf\xca\xa7\x96\xf0\xf3\xc0\x77\xaf\xe1\x3c\xaf\x47\x11\x23\x11\x4d\xa1\x88\x21\x96\xa0\x0c\x17\x68\x81\x25\xac\x4e\x93\x99\x9c\x48\x51\x14\xc3\x18\xff\x84\xda\x40\xce\x80\x9d\x96\x6d\xe5\x6f\x4a\xea\x80\x93\x9b\x5a\x36\x95\xbf\x6e\xbd\x36\xd3\x05\x96\x1e\xd1\xc1\x10\x62\xf5\x65\x77\xf4\xdf\x43\x6f\x87\x5d\x33\xeb\xf6\x0a\x88\xb9\x73\xee\x3d\xf1\xfc\xbd\x91\xed\xe7\x4c\x73\x39\xb6\x8d\xc8\x74\x19\xf3\xea\xab\xaa\xd9\x0c\x0e\xdb\xfb\xf2\xe3\x57\x00\x00\x00\xff\xff\x80\x4b\x40\x98\x6c\x02\x00\x00")

func templatesGoGoWorkSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWorkSum,
		"templates/go/go.work.sum",
	)
}

func templatesGoGoWorkSum() (*asset, error) {
	bytes, err := templatesGoGoWorkSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work.sum", size: 620, mode: os.FileMode(420), modTime: time.Unix(1758102871, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesGoMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x4e\xeb\x38\x10\x7d\xb6\xbf\x62\x36\x0f\x28\x41\x25\x2e\xfb\x84\x2a\x15\x69\x25\x60\x17\xc1\x5e\x50\x83\xe0\x11\xb9\xc9\x24\xb5\xea\xd8\x91\x3d\x29\xa0\xab\xfe\xfb\x95\x93\xa6\x24\x48\x5c\xe9\xbe\x44\x89\x7d\xce\x99\x33\x67\x26\x42\x80\x2c\x64\x43\x58\x40\xe9\x6c\x0d\x1b\xa2\xc6\x2f\x84\xa8\x14\x6d\xda\x75\x9a\xdb\x5a\xd8\x06\x4d\x29\xa5\x17\x95\xd5\xd2\x54\x67\x01\x72\x46\x58\x37\x5a\x12\x8a\xb5\xb6\x6b\x51\x4b\x4f\xe8\xc4\xf1\x70\x84\x14\xb5\x54\x26\xad\x2c\x17\x02\x1e\x9c\xaa\x94\x91\x1a\xb4\xca\xd1\x78\x5c\xc0\xff\xb7\x4f\xbc\x91\xf9\x56\x56\x08\x01\xc8\xb9\xaa\x1b\xeb\x08\x62\xce\xa2\xb2\xa6\x88\xb3\xc8\xfa\xf0\xf4\xe4\x72\x6b\x76\xe1\x95\x54\x8d\x11\xe7\x2c\xda\x48\x53\x68\x74\xa2\x6c\x4d\x4e\xca\x9a\x70\xe8\x8b\x2d\x44\x23\xf7\x2b\x59\xca\x8f\xec\xc3\x13\xd6\xfe\x08\x3c\xda\xf7\xc2\x17\x5b\x51\xd9\x4e\xee\x3b\x16\x9a\x5d\x5d\xb9\xb3\x66\x5b\x79\xe1\x55\x65\xa4\xf6\x11\x4f\x38\xcf\xad\xf1\x04\x05\x96\xb2\xd5\xf4\xa4\x6a\xb4\x2d\xc1\x12\xce\xe7\x70\x0a\xc1\x63\x9a\x61\x6e\x4d\xc1\x79\x28\xdb\xb5\x17\x27\xf0\x93\x33\x87\xb2\x18\xe0\x8b\x25\x34\xd2\x79\xbc\x35\xf4\xe0\xae\x5a\x27\x83\xbd\x67\xa9\x5b\x8c\xad\x4f\xff\x45\x42\xb3\x8b\xa3\xc0\x78\xa5\x9e\x12\x25\xb3\x2f\x35\x13\xce\xde\x9c\x22\xfc\x33\xcd\x8e\xf2\x5b\x51\xbf\x55\xcd\xd3\x7d\xf6\x8c\x4e\x95\x1f\x41\x75\xc4\x0e\x77\xaf\xa4\xfd\xeb\xae\xbb\x8d\x12\x58\x2e\x21\x22\xd7\x76\x93\x19\x72\xce\xae\xee\x66\x80\xce\x05\xb2\x2f\xb6\xe9\x0f\x7c\xbb\xf9\xbc\x8a\x39\x0b\xe3\x4a\x5f\x14\x6d\x56\x9f\x99\xc4\xa3\x7c\x92\xd9\x08\xf3\x32\x6a\x32\x1e\x77\x3c\x41\xdd\xdb\xea\x46\xb7\x7e\xb3\x92\x84\xf1\xf9\xe9\x68\x10\x5f\x61\x13\xbd\xf3\xf9\xb7\xd0\x0c\xdd\x0e\x5d\x36\x4e\x23\x9e\x64\x33\x41\x3f\x5a\x47\xf1\xc5\xfc\xe2\xef\xc9\xe9\x7f\xfd\xaa\xc6\x43\x32\x69\x7f\x90\x24\x9c\xa9\xb2\x8b\xe8\xaf\x25\x18\xa5\xc3\x7e\xb0\xb2\xa6\xf4\xd1\x29\x43\xda\xc4\xd1\xb5\x73\xd6\x41\xee\x50\x92\x32\x15\x0c\x02\x90\x5d\xdd\x2d\x20\xea\xe2\x4d\x38\x63\x0e\xa9\x75\x86\xb3\x3d\xe7\x2c\xa7\xf7\x2e\xf1\x7e\x57\xd3\x0c\xa9\x6d\xb2\xee\x63\xb0\x91\x4c\x87\x94\xae\x5a\x13\xe7\xf4\x9e\xf0\xfd\x61\x5b\xbf\x5b\xa0\x9d\xd4\xe0\xc9\x29\x53\xcd\xa0\x94\x5a\xaf\x65\xbe\xed\x97\x7d\xc0\x25\xd3\xcf\xd0\x90\x2a\x41\xa3\x09\xdc\x04\x2e\x61\xde\xf5\xd8\x15\x28\x9e\xa5\x9e\xf5\xb5\xae\x0f\x5b\xd2\xff\xe6\xe9\x3f\x64\x55\x47\xe0\x2c\xd0\x8f\x90\x65\x9f\xd2\xc9\x09\x1c\x05\xe0\x72\x79\xd0\x3c\x84\x30\x35\x10\x1f\x81\xc9\x97\xff\x92\xb1\x7d\x9f\x57\x71\x80\xce\x60\x78\x3b\xb8\xe9\xd0\x8f\x81\x7f\x54\xeb\x3d\xa9\x72\x02\x1d\xcd\xee\x60\x61\xc8\x26\x14\x18\xce\x06\x06\xdf\xf3\x5f\x01\x00\x00\xff\xff\x1a\x1c\x83\x3c\x77\x05\x00\x00")

func templatesGoMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoMainGo,
		"templates/go/main.go",
	)
}

func templatesGoMainGo() (*asset, error) {
	bytes, err := templatesGoMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/main.go", size: 1399, mode: os.FileMode(420), modTime: time.Unix(1755852771, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPythonDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5b\x6f\xdb\x36\x14\x7e\x1e\x7f\xc5\x81\x6a\x14\xbb\x80\xa2\xbd\xac\x19\x60\x40\x0f\x9a\xad\xda\x41\xe2\x0b\x1c\x75\x5d\xd0\x05\x02\x2d\xd1\x16\x11\x4a\x64\x49\x2a\xb1\x90\xe6\xbf\x0f\xa2\xe2\xcb\x62\xa1\x40\xfd\x60\x88\xe7\xfb\xce\xfd\x12\xae\x26\xf0\x39\x8c\x47\xd3\xf1\x62\x92\x5c\xcd\xc2\x49\x94\xac\xa2\xe5\x22\xd8\xe6\xa9\xf6\xb9\x24\x52\xb1\x72\x43\xa9\x21\x72\x83\x9f\xa8\x4d\xf3\x4c\x6e\x51\x87\x52\x1c\x4e\x82\xbe\x3f\xe8\xfb\x97\x0e\x5d\xde\xc5\xd3\xc5\xfc\xd4\xa0\xaa\x6d\x2e\xcb\x73\xb0\x51\xbc\xf0\x07\x03\x6c\x04\x2f\xf0\xba\x12\xc2\xb0\x9a\x21\x84\x3e\xae\x16\x33\xc0\x58\x09\x6a\x37\x52\x17\x41\xef\x39\x0e\x57\x93\x28\x5e\xde\x84\xf1\xc7\xc5\x6a\x36\xc4\x82\x97\xd5\x8e\xd0\x22\xbb\xfc\xe3\x05\x7a\xcf\x1d\x69\xbc\x0c\xcf\xc4\x71\x38\x79\x81\xf0\x16\x0e\xc9\xfc\xb0\x9f\xb3\xdc\x1a\x2f\x6f\x73\x72\x3e\xd6\x15\x17\x19\x42\xa3\xc5\xf2\x0e\x30\xde\x68\x59\x04\x7b\xb7\x40\x36\xc7\xcf\xca\x68\xb2\xe6\xe5\x51\x84\x56\x9f\xe6\x90\xe6\x85\xcc\xe0\xb7\x5d\x17\x8e\xde\x41\x28\x2c\xd3\x25\xb5\xfc\x91\x89\x1a\x2a\xc3\x20\x1c\x8f\x21\xb7\x56\x99\x21\x21\xf0\xf3\x53\xce\xd3\x1c\x9e\xb8\x10\x50\x4a\x0b\x6b\x06\x29\x4d\x73\x96\xc1\xba\x86\xb1\x4c\x1f\x98\x6e\xe3\x63\xfa\x17\xd7\x95\x70\x3c\xbe\x8a\xaf\x16\xf3\xf0\x26\x59\x86\xa3\xeb\x70\x12\x05\x9e\xe7\x02\x61\x69\x2e\xc1\xeb\xc0\x7b\xcf\xe7\xc2\x97\x56\x87\x2a\x8b\xb7\xcc\x02\xfe\x5a\x43\xa5\x32\x6a\x19\xfc\x8b\x00\x00\xde\xbf\xff\x1f\xc6\x4b\x63\xa9\x10\xd0\x69\xea\xa8\xa2\x0b\xc0\x7a\x03\xe4\x91\x6a\x22\xf8\x9a\x50\x65\x89\xe0\xc6\x1a\xf2\xab\xab\x45\x96\x41\x29\x4b\xd0\x52\xda\xa6\x14\xba\x8d\x21\xcb\xb6\x5a\x56\x0a\x30\x36\xb5\xb1\xac\x00\xaa\x94\x0b\x20\xcb\x1a\x92\x7b\x1e\x30\x8c\x79\xd9\xd2\xa9\x52\xaf\x0d\x90\x4f\xa5\x23\x91\x5c\x16\x8c\x34\x72\xf4\xe9\x36\x5a\x39\x06\x8a\xe6\x7f\xc3\x32\x8c\xa7\x41\xaf\xf9\x1f\x1e\x38\xc4\x17\x32\xa5\xa2\xe9\x18\x42\x9f\x17\xab\xeb\xf1\xd5\xea\x68\x81\xa0\x76\x07\x56\x8b\x7f\xee\x9a\x02\xef\xa7\xc3\x39\x0b\xa8\x52\xc3\xc6\x61\x41\x79\xe9\xab\x1a\x8e\x3f\xbf\x9b\xa8\xd9\xd7\x8a\x6b\x56\xb0\xd2\x1a\xdf\xee\xac\x63\xba\x18\x9b\x5a\xb8\x34\x14\x57\x87\x32\x63\x5c\x4a\xec\xe6\x00\x67\x5c\x37\x63\xaf\xe5\xae\x0e\x7a\xcf\x2e\x9e\x17\xc0\xfa\xcc\xe2\x49\xc6\x8d\xb5\xe2\xc1\x29\x2a\xd8\x54\x65\x6a\xb9\x2c\x9d\xd4\xca\x2a\xcd\xc1\x27\x7b\x21\x49\x12\x5e\x72\x9b\x24\xbe\xaa\x3b\x6a\x70\xa0\x75\x27\x75\x80\xdf\xc6\xf2\x93\xff\xe3\x19\x61\xd7\xea\xae\xc4\x4e\xea\xf4\xfd\x30\x5c\x51\xdb\x43\xe1\x56\xa6\xd9\x6d\xcb\x8c\x6d\x5b\x19\x47\xb7\x71\x32\x5a\xcc\x66\xe1\x7c\x1c\x58\xb9\x3b\x0a\xa3\x79\xf8\xd7\x4d\x34\x0e\x36\x54\x18\xd6\x96\xef\x0b\x78\xbd\x53\xcc\x83\x00\x3c\x87\x7b\x70\xdf\xcc\x66\xbb\x6c\xe6\x81\x2b\xc5\xcb\xad\x73\x63\x3c\xf8\xf6\x0d\xd8\x23\x15\x7b\xe5\x57\x6f\x1e\x7a\x1b\x95\xc9\xb9\xea\x9c\xb9\x63\x13\xdf\xc1\x2d\xb3\x50\x29\x38\xb9\xe8\xb0\x91\x1a\xa6\x71\xbc\x84\x42\x66\xcc\x4d\xf6\x46\x69\x99\x32\x63\x02\xaf\xbd\xdc\xfb\x91\xf4\x1c\x9a\x6e\x79\x92\x33\x9a\x31\x6d\x02\xcf\xea\x8a\xb5\xe2\x46\x3b\xf0\x9a\x1b\xd4\xbe\x2b\x65\xac\x66\xb4\x48\x2a\x2d\x5a\xf9\x90\x90\xc1\xef\x7f\xfa\x7d\xbf\xef\x0f\x86\x1f\xfa\xfd\x7e\x4b\xd4\x8c\x66\x75\xa2\xa8\xcd\x03\x8f\x24\xc4\x3d\x5b\x84\xed\x58\x9a\x58\x5e\x30\x59\xd9\xc0\x3b\xa1\x1f\x85\x17\x97\x7b\x33\x4f\x9a\x5b\xd6\x05\xe4\x8c\x0a\x9b\xa7\x39\x4b\x1f\x12\x5e\x5a\xa6\x1f\xa9\x08\xbc\x8b\xbe\x87\xd0\x34\x0a\x6f\xe2\xe9\x68\x1a\x8d\xae\xdd\x0d\x78\x05\x3f\x18\x18\xcd\xc6\xf0\x05\x30\x03\x62\x8b\x76\xab\x1f\xe0\xde\xb5\x62\xc7\x2d\x0c\x10\x72\x04\xef\x70\x95\xbd\x7b\xf4\x5f\x00\x00\x00\xff\xff\xc7\xa4\xbf\x79\x4f\x07\x00\x00")

func templatesPythonDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonDockerfile,
		"templates/python/Dockerfile",
	)
}

func templatesPythonDockerfile() (*asset, error) {
	bytes, err := templatesPythonDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/Dockerfile", size: 1871, mode: os.FileMode(420), modTime: time.Unix(1758543534, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPythonFunction__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunction__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunction__init__Py,
		"templates/python/function/__init__.py",
	)
}

func templatesPythonFunction__init__Py() (*asset, error) {
	bytes, err := templatesPythonFunction__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/__init__.py", size: 0, mode: os.FileMode(420), modTime: time.Unix(1746038593, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPythonFunctionHandlerPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x4f\x8b\xdb\x30\x10\xc5\xef\xfe\x14\x63\x41\x89\xdd\xba\x5e\x9b\x42\x28\x86\x2d\x14\xb6\x4b\x0b\x3d\xf4\x1e\x4c\x10\xd6\xc8\x3b\x44\x91\x5c\x69\xb2\xa9\x09\xf9\xee\xc5\x72\x9c\xfd\x73\x8c\x6f\xf6\x9b\xf9\xbd\x37\x33\xa6\xfd\xe0\x3c\x83\x0c\xa3\xed\xc8\x25\xda\xbb\x3d\x18\xd7\xf7\x64\x7b\xb8\x68\xbf\x5d\xdf\xa3\x9f\x25\x1e\x87\x57\xca\x03\x75\x5c\xc0\x77\x3b\x26\xb3\x3a\x8c\xfc\xe4\xec\x36\xa8\xdd\xd6\x4b\x2d\xc7\xed\xd1\xf9\x9d\x36\xee\xb8\x34\x04\xb5\x4b\x92\x24\x9a\x81\x42\x0d\x4f\xd2\x2a\x83\x99\x89\x0e\xcd\xc5\xa9\x00\x8f\x7f\x0f\x18\xb8\x89\x06\x9b\xc0\x3e\x9a\xb4\x39\x7c\xfe\xf6\xee\x53\x93\x00\x00\xcc\xfd\x25\x59\xed\x32\x2d\x36\x55\x59\x95\x5f\x6a\xdf\xd5\x5f\x5b\xf0\xd8\x21\x3d\xa3\x5a\x98\x11\xde\xc0\xe9\xf2\x7a\x16\x79\x12\x11\xa4\x97\x8a\xb2\x47\xce\x84\x96\x64\x44\x01\x8f\xd2\x04\xcc\x67\x97\xe9\xf1\x92\x02\x4e\x63\x94\x8f\x92\x0c\xaa\x1f\xff\x3a\x1c\x98\x9c\x9d\x3b\x50\xa5\x69\xba\x20\xb5\xf3\x40\x40\x16\xbc\xb4\x3d\x66\x6f\xf0\xc1\x20\x0e\xa2\x80\x3a\x87\x8f\xb0\x7e\x65\xf0\x6e\x94\x25\xe7\x66\xb5\x47\x96\x4a\xb2\x5c\xb5\x9b\x95\xec\x98\x9e\x89\xc7\x5f\x0f\xab\xf6\xdc\x36\x10\x69\xd3\x5d\x26\xcb\xba\x82\x80\x9d\xb3\x2a\x88\xfc\x8a\x95\x47\x49\xd7\x2b\x97\xb1\x3e\xab\xab\x17\x9d\x34\x64\x04\x9f\xa6\x3c\x1f\x60\x0d\xf7\xf7\x50\xbd\x64\xba\x31\x17\x10\xa3\x97\xd3\x72\xe0\xb4\xc0\xef\xee\x60\x7d\x6e\xa0\x73\xfb\xc1\x20\xa3\x5a\x76\x75\x0b\x5e\x39\x8b\xe9\x65\x46\x8f\x7c\xf0\x16\x4e\xd7\xcc\xc2\x1d\x78\x38\xb0\x68\x40\xfc\x44\x63\x1c\xfc\x89\xff\x66\x2a\x8a\x58\x72\x4e\xfe\x07\x00\x00\xff\xff\x8f\x5a\xda\xf4\xf9\x02\x00\x00")

func templatesPythonFunctionHandlerPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionHandlerPy,
		"templates/python/function/handler.py",
	)
}

func templatesPythonFunctionHandlerPy() (*asset, error) {
	bytes, err := templatesPythonFunctionHandlerPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/handler.py", size: 761, mode: os.FileMode(420), modTime: time.Unix(1758560708, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxt,
		"templates/python/function/requirements.txt",
	)
}

func templatesPythonFunctionRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt", size: 0, mode: os.FileMode(420), modTime: time.Unix(1754919169, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxtTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xa8\xad\xe5\xaa\xae\x86\x29\xaa\xad\xe5\xe2\x02\xe9\x4c\xcd\x4b\xa9\xad\xe5\x02\x04\x00\x00\xff\xff\x1c\xd5\x59\xbf\x44\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxtTmpl,
		"templates/python/function/requirements.txt.tmpl",
	)
}

func templatesPythonFunctionRequirementsTxtTmpl() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt.tmpl", size: 68, mode: os.FileMode(420), modTime: time.Unix(1754919170, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPythonMainPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\x41\x0a\x83\x30\x14\x84\xe1\xfd\x3b\xc5\xd4\x6e\xda\x8d\xee\x0b\x9e\x65\x48\x6b\x82\x41\xf3\x22\x2f\x51\xf1\xf6\xa5\x68\x57\xc3\xc0\x0f\xdf\xfd\xd6\xad\xc5\xba\x77\xd4\xce\xeb\x86\xe5\xa8\x63\x56\x91\x60\x39\x21\xac\xfa\xa9\x31\x2b\x62\x5a\xb2\x55\x8c\x4e\x87\xd9\x9b\x5c\xf7\x6c\x59\x86\x89\xe6\x82\x3b\xb8\x67\x9b\xc2\x9c\x77\xb8\x82\x32\x4c\x22\x31\x80\x54\x97\x3c\x89\xbe\x47\x43\x26\x17\x95\x6c\x5e\x02\xe0\xd7\xb4\xc5\xdb\xe6\xf9\x97\x1e\x17\xd1\x9e\xfb\x94\x6f\x00\x00\x00\xff\xff\x3d\x62\xa4\x64\x9f\x00\x00\x00")

func templatesPythonMainPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonMainPy,
		"templates/python/main.py",
	)
}

func templatesPythonMainPy() (*asset, error) {
	bytes, err := templatesPythonMainPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/main.py", size: 159, mode: os.FileMode(420), modTime: time.Unix(1757342625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPythonRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x4c\x4b\xac\xd4\x2d\xcf\x2f\xca\x4e\xcb\xc9\x2f\xd7\x2d\x4e\xc9\xb6\xb5\x35\xd0\x33\xd0\x33\x36\x2c\x4a\x36\xb4\x00\x04\x00\x00\xff\xff\x1f\x86\x0c\xb8\x1e\x00\x00\x00")

func templatesPythonRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonRequirementsTxt,
		"templates/python/requirements.txt",
	)
}

func templatesPythonRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/requirements.txt", size: 30, mode: os.FileMode(420), modTime: time.Unix(1758560708, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go/Dockerfile":                         templatesGoDockerfile,
	"templates/go/function/go.mod":                    templatesGoFunctionGoMod,
	"templates/go/function/go.mod.tmpl":               templatesGoFunctionGoModTmpl,
	"templates/go/function/go.sum":                    templatesGoFunctionGoSum,
	"templates/go/function/handler.go":                templatesGoFunctionHandlerGo,
	"templates/go/function/handler_test.go":           templatesGoFunctionHandler_testGo,
	"templates/go/go.mod":                             templatesGoGoMod,
	"templates/go/go.sum":                             templatesGoGoSum,
	"templates/go/go.work":                            templatesGoGoWork,
	"templates/go/go.work.sum":                        templatesGoGoWorkSum,
	"templates/go/main.go":                            templatesGoMainGo,
	"templates/python/Dockerfile":                     templatesPythonDockerfile,
	"templates/python/function/__init__.py":           templatesPythonFunction__init__Py,
	"templates/python/function/handler.py":            templatesPythonFunctionHandlerPy,
	"templates/python/function/requirements.txt":      templatesPythonFunctionRequirementsTxt,
	"templates/python/function/requirements.txt.tmpl": templatesPythonFunctionRequirementsTxtTmpl,
	"templates/python/main.py":                        templatesPythonMainPy,
	"templates/python/requirements.txt":               templatesPythonRequirementsTxt,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"go": &bintree{nil, map[string]*bintree{
			"Dockerfile": &bintree{templatesGoDockerfile, map[string]*bintree{}},
			"function": &bintree{nil, map[string]*bintree{
				"go.mod":          &bintree{templatesGoFunctionGoMod, map[string]*bintree{}},
				"go.mod.tmpl":     &bintree{templatesGoFunctionGoModTmpl, map[string]*bintree{}},
				"go.sum":          &bintree{templatesGoFunctionGoSum, map[string]*bintree{}},
				"handler.go":      &bintree{templatesGoFunctionHandlerGo, map[string]*bintree{}},
				"handler_test.go": &bintree{templatesGoFunctionHandler_testGo, map[string]*bintree{}},
			}},
			"go.mod":      &bintree{templatesGoGoMod, map[string]*bintree{}},
			"go.sum":      &bintree{templatesGoGoSum, map[string]*bintree{}},
			"go.work":     &bintree{templatesGoGoWork, map[string]*bintree{}},
			"go.work.sum": &bintree{templatesGoGoWorkSum, map[string]*bintree{}},
			"main.go":     &bintree{templatesGoMainGo, map[string]*bintree{}},
		}},
		"python": &bintree{nil, map[string]*bintree{
			"Dockerfile": &bintree{templatesPythonDockerfile, map[string]*bintree{}},
			"function": &bintree{nil, map[string]*bintree{
				"__init__.py":           &bintree{templatesPythonFunction__init__Py, map[string]*bintree{}},
				"handler.py":            &bintree{templatesPythonFunctionHandlerPy, map[string]*bintree{}},
				"requirements.txt":      &bintree{templatesPythonFunctionRequirementsTxt, map[string]*bintree{}},
				"requirements.txt.tmpl": &bintree{templatesPythonFunctionRequirementsTxtTmpl, map[string]*bintree{}},
			}},
			"main.py":          &bintree{templatesPythonMainPy, map[string]*bintree{}},
			"requirements.txt": &bintree{templatesPythonRequirementsTxt, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
