// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/go/Dockerfile (1.505kB)
// templates/go/function/go.mod (338B)
// templates/go/function/go.mod.tmpl (78B)
// templates/go/function/go.sum (1.344kB)
// templates/go/function/handler.go (223B)
// templates/go/go.mod (332B)
// templates/go/go.sum (1.344kB)
// templates/go/go.work (34B)
// templates/go/main.go (1.192kB)
// templates/python/Dockerfile (1.703kB)
// templates/python/function/__init__.py (0)
// templates/python/function/handler.py (264B)
// templates/python/function/requirements.txt (0)
// templates/python/function/requirements.txt.tmpl (67B)
// templates/python/main.py (159B)
// templates/python/requirements.txt (57B)

package fixturesfs

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGoDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x5f\x6f\xdb\xb6\x17\x7d\xe7\xa7\xb8\x50\x8a\xbc\xfc\x40\xd2\x4e\xfb\xeb\x32\x03\x02\xe6\xc6\x8e\x57\xcc\x89\x02\x39\xd9\x56\x6c\x43\xc0\x90\x94\x44\x84\x22\x09\x92\x4a\x32\x14\xf9\xee\x03\x25\x2b\xb6\x9b\x66\x7b\xd3\x3d\x57\x3c\xf7\xcf\x39\xf7\xbc\x2c\x2e\x00\x63\xa7\x59\xac\xac\x6f\xf3\x77\x5f\xaf\xe7\xe5\x6a\x79\x7d\xb5\x9e\x5f\x9f\x17\xe5\xc5\x0c\x6b\x65\xba\x27\xca\x5a\xf1\xf1\xc3\x33\xd4\x0d\xf7\x44\x59\x6a\x9d\x34\x15\x63\x81\xda\x0a\x3f\xb2\xc8\x1b\x61\xeb\xd9\x84\xfc\x48\xa6\xff\x07\x16\x60\x84\xd0\x6b\xfa\x4f\x37\x9f\xd7\x8b\xb7\xd8\xad\x66\xa6\x9e\x4d\xc9\xc9\x09\x66\xda\x29\x23\x13\xd9\x5d\xa7\xb4\x40\xa8\xbc\xb9\x84\xda\x82\x32\x21\x32\xad\x01\x3f\x40\xad\x62\xd3\xdd\x11\x6e\x5b\xaa\x0c\xef\x3e\x76\x81\xd6\x56\xb5\xce\xfa\x18\xb0\x97\x0f\x2a\x48\x4f\x1f\xde\xff\xa4\x59\x94\x21\x7e\x4b\x30\x14\x23\xd6\xd7\xf4\x89\x46\x6b\x75\xa0\xbc\x15\x3b\x86\xf1\x19\x9a\x97\x2b\x38\x5c\x4a\x0f\x1d\x0c\xb2\xf7\x53\xb1\xd9\x0b\xe6\xe5\xd9\xcf\x43\xeb\xcc\xdd\x03\xc6\xc6\x62\xce\x78\x23\x81\x09\x91\xfa\x47\xe8\xac\xb8\xfa\x02\x18\x57\xde\xb6\xf9\xb8\x36\xa0\xd5\xee\xb3\x0b\x9e\xde\x29\xb3\x83\x7a\x3a\xde\xb4\x56\xc0\xff\x9e\xbe\x97\x1f\x0a\xb6\xf7\x42\x79\xc0\x0e\x68\x6d\x69\xf0\x9c\x36\xcc\x08\x2d\x3d\xfa\xad\x28\x7f\x59\x7c\x2e\x5f\xe1\x43\x2b\x04\x08\x1a\x66\x5e\x15\xd3\xe9\xf4\xa2\x58\xdc\xac\x97\x79\x66\x4d\xb6\x05\xaf\xca\xe2\xf7\x2f\x79\x36\x86\xe7\xeb\xf9\x6a\x33\x86\x67\xab\xe2\x76\x79\x39\xff\xb4\x5e\x2e\xf2\x09\x5a\x5e\xfe\x7a\x80\xbc\xfb\xba\x17\x3d\x8f\x8a\x6e\xd7\x0d\xf8\x11\xc8\x21\x34\x6a\x08\x38\x79\x87\x45\xc0\x5e\xf2\xce\x07\xf5\x20\x01\xfb\x16\x77\xa6\x0b\x52\x00\xa1\x84\x8c\x2f\x21\x6d\x45\xd8\x47\xa3\x2d\x13\x08\xbd\x39\x6b\xfa\x7b\x55\x14\x9b\x17\xbf\x17\x9b\x67\x58\x15\x49\xae\x17\x28\x05\xcf\xf0\x27\x02\x80\xc4\xdc\xdb\x10\x30\xd6\xa2\xd2\xac\x0e\x90\xe1\xd4\x73\x06\xd8\xc2\x96\x95\xdc\x29\xd3\x6f\xef\xe8\x08\xce\x95\x61\x1a\x54\xcb\x6a\xf9\x9d\x23\xf8\xd7\x1b\x1b\x9c\x3f\x7b\x4f\xa6\xa7\xe4\x43\x3a\x80\xd0\x28\x87\xd0\x11\xcc\x85\x00\x63\x0d\x78\x6b\x23\x74\x69\x31\xcc\x08\xe0\xd2\xc7\xf0\x96\xc5\x38\xc3\x29\xaf\x2a\xc5\x93\x9b\xb7\xd3\x1c\x1f\xa7\x64\xed\x6d\xe7\x00\x6f\x80\x39\xb7\x85\x7a\x52\xbc\x01\x5c\xf7\x20\x73\x7d\xdd\x8d\xd3\x2a\xf6\x77\xe3\x3b\x1e\x95\x35\x01\x82\x85\xd8\xb0\x38\x2c\xe5\x5e\x45\xe0\xcc\x80\xef\x0c\x1c\x43\x5f\x1c\x1d\x41\x6c\x24\xb8\xa4\xa0\xed\x02\x70\xdb\xb6\xa9\x59\xd6\x48\x26\xc0\x56\x10\x55\x2b\xc9\x37\x3e\x6d\x6c\x2b\x69\xaa\xfb\xd2\x25\x6f\xec\xa3\xe9\x5b\x79\x49\xee\x69\xba\x83\xf6\x8f\x68\xd4\xa9\x7f\x9b\xf7\x6f\x0f\xc5\xa7\xfb\x72\x8d\xda\xfd\x17\xc5\xab\x2b\x83\xa4\xf4\xcd\x66\x59\x0e\x5b\x4a\x5e\xaf\x9c\xb7\x5c\x86\x90\x67\x64\xac\x91\xf5\x89\xd6\x0a\x99\x67\x4d\x8c\x6e\x88\x3b\x17\xa2\x97\xac\xbd\xed\xbc\x1e\xf0\x19\xa5\xd3\x93\x1f\xc8\x84\x4c\xc8\x74\x76\x3a\x39\x3d\x19\x7e\x74\x5e\x56\xea\xe9\x56\xdb\x3a\xe4\x59\xc5\x74\x90\x03\xee\x25\x13\x7f\xdf\x3a\x16\x9b\x3c\xa3\x98\xf6\x61\x86\xd0\xd9\xc5\x02\xfe\xc8\xc8\xae\xc9\xec\x2f\xf4\x4f\x00\x00\x00\xff\xff\x12\xca\xe0\xf5\xe1\x05\x00\x00")

func templatesGoDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoDockerfile,
		"templates/go/Dockerfile",
	)
}

func templatesGoDockerfile() (*asset, error) {
	bytes, err := templatesGoDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/Dockerfile", size: 1505, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0xa9, 0x7f, 0xd, 0xfe, 0x3c, 0xe8, 0xa3, 0xe7, 0x34, 0x4d, 0xce, 0xe9, 0x89, 0xe6, 0x13, 0xd5, 0x2f, 0x84, 0xf1, 0xb, 0xef, 0xce, 0x20, 0xd4, 0x6c, 0xa0, 0xcc, 0x9b, 0xf3, 0x62, 0x1}}
	return a, nil
}

var _templatesGoFunctionGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x4f\x4e\xc4\x20\x14\x80\xf1\xb5\x9c\x82\xa5\x2e\x80\x07\x6d\x6d\xe7\x1a\x7a\x82\x37\xf4\x0d\x90\xe1\x4f\x05\x3a\x49\x6f\x6f\x5c\xa8\xe9\xc2\xc4\x03\x7c\xbf\x2f\x95\x75\x8f\xc4\x3d\xe6\x35\x52\x55\xb7\x3d\xdb\x1e\x4a\x66\xcc\x15\xae\xa5\x31\x12\x18\xab\xf4\xb1\x87\x4a\xdc\x85\xee\xf7\xab\xb4\x25\xa9\x37\xbc\xe1\xf1\x7e\xb4\x4e\xa9\xfd\x44\xa2\x53\xda\x22\x76\x6a\xaa\xad\x77\xe5\x0a\x7f\x80\x04\x09\xc2\x80\x19\x61\xd0\x03\x0c\xe3\x34\x1a\x31\x01\x69\x3b\xdb\xc1\xbe\xea\xf1\x57\x7f\x66\x4f\x7f\x0d\x28\x3f\x92\xab\x62\xbb\xbb\x76\x26\x61\x86\x61\x82\xe9\x22\xf4\x62\x50\x23\xae\x17\x58\x16\xae\x14\x0f\x79\x0d\x95\x6c\x3f\x99\x1e\x9b\x0f\xb6\xd4\x4d\xb9\x22\x6c\x24\xcc\xbe\xf7\xed\x4b\x9c\xa4\xf9\x5f\x55\xa9\xd7\x03\xaf\x91\xbe\xcb\x59\x8e\xa7\xf2\x85\x7d\x06\x00\x00\xff\xff\xda\xb2\x38\x91\x52\x01\x00\x00")

func templatesGoFunctionGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoMod,
		"templates/go/function/go.mod",
	)
}

func templatesGoFunctionGoMod() (*asset, error) {
	bytes, err := templatesGoFunctionGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod", size: 338, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8a, 0x56, 0x65, 0x58, 0xa6, 0xc6, 0x7d, 0x98, 0xab, 0x37, 0xff, 0x70, 0x83, 0x55, 0xc9, 0x37, 0x57, 0x70, 0x9a, 0x40, 0x73, 0xf0, 0xfc, 0xa4, 0x96, 0x58, 0x25, 0xc, 0xa7, 0x59, 0x4, 0xb2}}
	return a, nil
}

var _templatesGoFunctionGoModTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\x2c\xcd\x2c\x4a\x55\xd0\xe0\xaa\xae\x56\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xd0\xad\xad\x05\xa9\x85\xaa\x02\x73\x74\x15\x52\xf3\x52\x6a\x6b\xb9\x34\x01\x01\x00\x00\xff\xff\x14\x02\x94\xe3\x4e\x00\x00\x00")

func templatesGoFunctionGoModTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoModTmpl,
		"templates/go/function/go.mod.tmpl",
	)
}

func templatesGoFunctionGoModTmpl() (*asset, error) {
	bytes, err := templatesGoFunctionGoModTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod.tmpl", size: 78, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x79, 0x49, 0x15, 0x80, 0x0, 0x5, 0xe, 0x56, 0x34, 0xf6, 0xa8, 0xee, 0x5e, 0xb3, 0x4a, 0xdb, 0x96, 0xec, 0xb3, 0x32, 0x14, 0x33, 0xa1, 0x70, 0x2c, 0x3e, 0xcc, 0x29, 0x42, 0x70, 0x7d, 0xd0}}
	return a, nil
}

var _templatesGoFunctionGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\xcb\xae\xaa\x48\x18\x46\xe7\xe7\x29\xf6\x9c\x68\x15\x77\xe8\xe4\x0c\x14\x45\x14\xbc\x23\x82\x33\x2c\x8a\x6b\x41\x21\x85\x08\x3e\x7d\xc7\xee\x74\xa2\x83\x3e\xd9\x9d\xf4\x79\x81\xf5\xad\x7f\xe5\x4f\xb2\x36\xbd\x5f\xc7\x88\x96\xe0\x10\xc6\xe1\x70\x1c\x58\x8b\x4b\x06\x70\xd5\x95\x49\x33\xaa\x8b\x84\x7d\x75\x70\x0c\xc7\x70\x24\x40\x41\x82\x22\x54\xa1\x28\x43\x59\x1f\xf1\x9a\x10\xf2\x61\x18\xe9\x50\xd3\xbe\x52\xfe\x0f\x32\x83\x5d\xaf\xc8\x93\xdb\x6d\xe6\xd5\xe6\xbc\xe7\x0e\x44\x31\x57\xfc\x76\x00\x95\xcf\x4d\x2d\xe0\x5a\x9d\xeb\xf8\x95\x2e\x1b\xeb\x9f\x3f\xfe\x9f\x59\x90\xd0\x71\x49\xa3\xd7\xfa\x2e\x2f\x6c\xbd\x84\xd1\x6a\xc1\x53\xb5\xf2\xca\x76\xed\x9e\x30\xda\x92\xe0\x79\xf0\x72\x5f\xe5\xc8\x99\x5c\x0b\xa3\xe4\xda\x72\xf2\xef\xeb\xf1\xbd\x42\x6d\x46\xab\x51\x8b\xcb\x9a\x84\x2d\x66\x80\x45\x05\x48\xe8\xa7\x0b\x2f\x42\x51\x92\x25\x61\x24\x43\xcc\x23\x15\x89\x48\xe1\xa5\x97\x84\x79\x34\x3a\x17\x32\x61\x37\xc7\x4f\x5e\x28\x69\x17\xdb\x49\xdc\x77\x4b\xec\x5e\x1a\xd9\x39\x29\x77\x93\x7f\xf4\x50\xdf\xd8\xe7\xe0\xf7\x48\xbc\x05\x19\xd6\x3b\x4b\x25\xfd\xed\x84\x40\xa0\x39\x46\x5a\x14\x3a\xa7\xcc\x0f\xd0\x99\x62\xe2\x6f\x65\x32\x7b\x00\x8d\xd5\x0c\x63\xc0\x3e\x5c\xa2\xb0\xc3\x28\x49\x41\x42\x47\xac\xc6\x8f\xaf\x8e\x1f\xf3\x63\xfe\x0d\xbc\x52\x03\x2d\x40\x67\x61\x93\xa5\x2c\x29\x3d\x0a\xca\x4e\x24\x93\x07\x01\xac\xd8\x6e\xa4\xcc\xb1\xf2\x23\x5b\x72\x48\xb6\x44\xed\x03\x9c\x86\x2c\xcd\x10\x6d\xea\x17\x1a\x11\x1c\x56\x69\xdb\xd6\xaf\xa3\xe4\xb1\xf0\x02\x43\x51\x36\xed\x60\x79\xce\xcb\x93\x33\x98\x87\xa9\xbd\x63\x9a\x3b\xdd\xd3\x0c\xf6\x4a\xa4\x2f\xa4\x1e\xe9\x15\xf6\x57\xe7\xc9\x65\xff\x7d\xf0\x9b\x78\xb1\x05\xc1\x8c\xec\x34\x87\x17\x25\x65\xae\x1c\x69\xf4\xe0\x76\x4d\x3d\x3d\x7a\x12\x38\xd2\xde\xf0\x17\x81\x32\xbd\x6d\x4c\x57\xfa\x85\x78\x8a\x08\x4d\x5e\x6c\xfd\x6f\x69\x63\xa1\xb8\x73\xd9\xd2\xc1\xca\x67\xe6\x79\x65\xc4\x74\xe9\xd5\xb6\xb9\x2c\x4c\xac\x0c\x6c\x7e\xb7\xb2\xa6\x96\x66\xbd\xc1\xac\xe5\xf7\xa0\x6f\xc2\xb2\x71\xe2\xc2\xc4\xc9\x06\x71\xa5\x6e\xd4\x7d\x6e\xd9\x72\x04\x65\xbb\x5f\xb0\xbb\x9f\xed\x9d\x26\x9f\x40\x4b\x0d\x51\x2e\x90\x5f\x04\x69\x70\xdb\x0c\xe1\x95\xe0\x7f\xa2\xa8\xe3\xbf\x7e\xf5\xb2\x4f\xbc\xa8\x76\xa3\x89\xa3\x9e\xeb\xf5\xf2\xe1\x3c\x8d\xf8\x1a\x92\x2d\x3a\x9e\xa2\x62\x76\xa9\xea\x53\x27\x02\x6e\xda\x3f\xcd\xc9\x7f\x83\xbf\xbf\xca\x00\x92\x5d\x30\x89\xf2\x5b\x1c\x5f\xc0\x60\x2e\x0c\xd3\x13\x22\xba\x94\x1f\x79\x6b\xf1\xf8\xb1\xd6\xef\x5a\x16\x78\x79\xeb\x7f\x16\xaf\x4b\xfc\x0c\x9b\xe8\xb5\x10\x65\x71\x4c\xb2\xeb\xeb\x0d\xe1\x18\xbe\xb1\x33\xdb\x52\xd5\x82\x9a\x69\xd0\xbb\x36\x5f\xa3\x43\x55\xd8\xc5\x2d\x76\x69\xc2\xae\x89\x9a\x5c\x36\x5e\x20\xb1\xc3\x2c\xb8\x00\xe9\x83\xcd\xda\x06\xb7\x28\x6d\x40\x8b\x59\x9b\xc5\xc3\x8b\x2c\x7c\x64\x0f\xb5\x6d\x75\x40\xd9\x55\xaa\xd2\x14\x6e\xc3\xc3\xc4\xe3\x82\x96\x69\x6a\x61\x47\x37\xb8\xdb\xa9\xb5\x1f\x0f\x4a\x31\x2b\x4e\x1e\xfb\xf9\xe3\xcf\x00\x00\x00\xff\xff\x79\x2a\xd4\x85\x40\x05\x00\x00")

func templatesGoFunctionGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoSum,
		"templates/go/function/go.sum",
	)
}

func templatesGoFunctionGoSum() (*asset, error) {
	bytes, err := templatesGoFunctionGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.sum", size: 1344, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x67, 0x36, 0x6b, 0x59, 0x2f, 0xd6, 0xaa, 0x42, 0xfa, 0xfc, 0x76, 0x17, 0xd4, 0x9b, 0x5e, 0xf6, 0xe9, 0xdc, 0x86, 0xe, 0xa0, 0xb7, 0xf0, 0x4f, 0x12, 0x90, 0x3a, 0x24, 0xeb, 0x9e, 0x2e, 0xe9}}
	return a, nil
}

var _templatesGoFunctionHandlerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8c\x4b\x6e\xc3\x30\x0c\x44\xd7\xe6\x29\x08\xaf\x6c\xc0\xb5\x0f\xd1\x4d\x17\x5d\xa5\x27\x50\x65\x46\x15\xf4\xa1\x42\x52\x40\x82\x20\x77\x2f\x1a\xb7\x40\x57\x33\x0f\x0f\x33\xcd\xf9\xe4\x02\xe1\xb9\x57\x6f\x91\x2b\x40\x2c\x8d\xc5\x70\x82\x61\xf4\x5c\x8d\xae\x36\x02\x0c\xba\x27\x1c\x43\xb4\xaf\xfe\xb9\x7a\x2e\xdb\xc9\x9d\xdd\xed\xe3\xa6\x46\x45\xb7\xbf\xf1\x8b\x51\x69\xd9\x19\xe9\xa6\x7b\xda\x02\x8f\x30\x03\xfc\x58\x7c\x73\x75\xcf\x34\x79\xbb\xe2\xef\xeb\xfa\x7a\xe4\x82\x99\x43\x20\x41\xdd\xd3\xfa\xfe\xac\x0b\x0a\x5d\x9e\x7c\xa2\x4b\x27\xb5\x19\xa7\x83\xb4\x71\x55\x5a\x90\x44\x58\x66\xbc\x03\x0c\x42\xd6\xa5\xe2\x7f\x7f\x7f\x2c\x58\x63\x86\x07\x7c\x07\x00\x00\xff\xff\x55\xa4\x91\xb2\xdf\x00\x00\x00")

func templatesGoFunctionHandlerGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionHandlerGo,
		"templates/go/function/handler.go",
	)
}

func templatesGoFunctionHandlerGo() (*asset, error) {
	bytes, err := templatesGoFunctionHandlerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/handler.go", size: 223, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x65, 0xa7, 0x97, 0xfc, 0x78, 0x41, 0xdb, 0xf4, 0x25, 0x58, 0xd1, 0x41, 0x3b, 0xb4, 0x88, 0x11, 0xd1, 0xa6, 0x4c, 0x64, 0xaf, 0xcc, 0xbd, 0xf3, 0xf7, 0x2c, 0xbe, 0x1a, 0x29, 0xee, 0x53, 0xb7}}
	return a, nil
}

var _templatesGoGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\x4b\x6e\xeb\x20\x14\x80\xe1\xf1\x65\x15\x0c\x6f\x06\x3c\x8c\xed\xd8\x6c\xa3\x5d\xc1\x09\x1c\x03\x0a\x0f\x17\x70\x24\xef\xbe\xea\xa0\x95\x32\xf0\x02\xfe\x4f\x7f\x2a\xf6\x88\x48\x5d\x61\xdb\x91\x4d\x0f\x25\x33\x0f\xd9\x46\xac\x84\xb8\x42\x07\xae\x14\x21\x15\xbf\x8e\x50\x91\xfe\x27\xff\x5c\xe8\xfe\x78\x70\x53\x92\xf8\x80\x0d\xce\xcf\xb3\x75\x4c\x4d\x60\x7e\x25\x57\xd9\xfe\x74\x8d\xbe\x24\x97\x5c\x32\x25\xd5\x24\x47\xb9\xc8\x71\x96\xb3\x66\xc3\xaa\x60\x00\xb0\x5a\xae\xeb\xb5\xf3\x77\xd1\x31\xed\x11\x3a\x36\xd1\xec\x53\xb8\xf2\xae\x0e\x6a\x58\xa7\x45\xdd\x99\xde\xac\x81\xed\xae\x46\xbd\x68\x72\xbb\x5a\xf5\xd0\x7c\x30\xa5\xee\xc2\x15\x66\x22\x42\xf6\xbd\xef\x3f\xe4\xcc\x15\x15\x82\x86\x6c\x43\x45\xd3\xaf\xab\x8a\xbd\x9e\xf0\x88\xf8\x5b\x2e\x7c\x7a\x2b\x6f\xe4\x3b\x00\x00\xff\xff\x72\x12\x38\xb1\x4c\x01\x00\x00")

func templatesGoGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoMod,
		"templates/go/go.mod",
	)
}

func templatesGoGoMod() (*asset, error) {
	bytes, err := templatesGoGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.mod", size: 332, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0x9, 0x99, 0xa3, 0x23, 0x21, 0x37, 0xa9, 0x88, 0x2e, 0x95, 0x68, 0x3b, 0xc1, 0x33, 0x78, 0xb6, 0x35, 0x21, 0xd4, 0x5, 0xea, 0xb6, 0x2a, 0x54, 0xe2, 0x7b, 0x75, 0x75, 0xce, 0xd9, 0x99}}
	return a, nil
}

var _templatesGoGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd2\xcd\xce\xaa\x38\x1c\xc7\xf1\xfd\xb9\x8a\x67\x4f\xb4\xe5\x1d\x26\x39\x0b\x44\x11\x05\xdf\x11\xc1\x1d\x42\x79\x2d\x14\x69\x55\x78\xae\x7e\x42\x26\x93\xe8\x62\x4e\xce\x24\x33\x37\xf0\xf9\x7f\xfb\x4b\xb3\x82\xe5\x8f\xdb\x34\x26\x35\x38\x46\x69\x34\x9c\x06\xca\x50\x4d\x01\x6a\x9e\x75\xd6\x4d\xda\x2a\xa3\x5f\x4f\x38\x85\x53\x38\x11\xa0\x20\x41\x11\xaa\x50\x94\xa1\xac\x4f\x78\x4d\x88\xf8\x28\x4a\x74\xa8\x69\x5f\x39\xff\x07\x9e\xc3\x67\xaf\xc8\xc6\xfd\x3e\xf7\x5b\x6b\xd1\x73\x47\xac\x58\x6b\x7e\x37\x80\x26\xe0\x66\x36\xf0\xec\xa7\xe7\x06\x8d\x2e\x9b\x9b\x9f\x3f\xfe\x9b\xb3\x20\x23\xd3\x9a\x24\xe3\xf5\x7d\x59\x39\x7a\x0d\x93\xf5\x92\x27\x6a\xe3\xd7\x6c\xe3\x9d\x51\xbc\xc3\xe1\xf7\xd1\x2f\x03\x95\xc3\x17\x7c\xab\xcc\x9a\x63\xb5\xf1\xcf\xd7\xd3\x47\x13\xb3\x82\x34\x13\x86\xea\x16\x47\x0c\x51\x40\x93\x0a\x64\xe4\xb3\x85\x17\x78\x4d\x52\x05\x65\xa2\xa7\x49\x1c\xa5\x8a\x20\xea\xaa\x3e\x46\x70\xa5\x68\xac\x9b\xa8\xf3\x6b\xab\x67\x68\x39\x68\xbb\x07\x55\x10\xd9\x84\xd5\x5d\xf7\xa9\xd7\x55\xab\x3b\x7d\x96\x7b\x54\xff\x5f\x11\x6f\x83\x0c\x9b\xbd\xad\xe2\xfe\x7e\x8e\x41\xa8\xb9\x66\x5e\x55\x3a\xa7\x2c\x8e\xd0\x9d\x21\x1c\xec\x64\x3c\x7f\x01\x8d\xb6\x14\x21\x40\x3f\x5a\x92\xe8\x89\xe2\x2c\x07\x19\x99\xd0\x16\xbd\xbe\x9e\xfc\x94\x9f\xf2\x6f\xf0\x5a\x0d\xb5\x30\xbe\x08\xdb\x22\xa7\x59\xed\x13\x50\x3f\x45\x6c\xbc\x30\xa0\xd5\x6e\x2b\x15\xae\x5d\x9e\xe8\x8a\x8b\x65\x5b\xd4\x3e\xe0\x3c\xa2\x79\x11\x93\xae\x1d\xe9\x18\xa3\xa8\xc9\x19\x6b\xc7\x47\xc9\x53\x61\x84\xa1\x28\x5b\x4e\xb8\xba\x94\xf5\xd9\x1d\xac\xe3\xcc\xd9\x53\xcd\x9b\x1d\x48\x01\x7b\x25\xd1\x97\x52\x1f\xeb\x0d\x0a\xd6\x17\xe3\x7a\xf8\x7d\xf8\x2d\xbc\xda\x81\x70\x8e\xf7\x9a\xcb\x8b\x92\xb2\x50\x4e\x24\x79\x71\xfb\xae\x9d\x9d\x7c\x09\x9c\x48\x6f\x06\xcb\x50\x99\xdd\xb7\x96\x27\xfd\x22\x3c\x8f\x31\xc9\x46\x5b\xff\x2b\xda\x5c\x2a\xde\x42\xb6\x75\xb0\x0e\xa8\x75\x59\x9b\x29\x59\xf9\xad\x63\xad\x2a\x0b\x29\x03\x5d\x3c\xec\xa2\x6b\xa5\x79\x6f\x52\x7b\xf5\x7b\xe8\x5b\xb0\x6c\x9e\xb9\x28\x73\x8b\x41\x5c\xab\x5b\xf5\x50\xda\x8e\x9c\x40\xd9\xe9\x97\xf4\x11\x14\x07\xb7\x2b\x0d\x68\xab\x51\x5c\x0a\xf8\x17\x83\x74\x88\x75\x43\x74\xc3\xe8\xef\x51\xd4\xa9\x34\xe2\xd7\x43\xe6\x27\xad\x97\x18\xae\x7a\x69\x37\xab\x97\xfb\x6d\xa6\xb7\x08\xef\xe2\xd3\x39\xa9\xe6\xd7\xa6\x3d\x3f\x45\xc0\xcd\xfa\x6f\xcb\xf8\x77\xf8\xfb\x57\x19\x40\xb6\x0f\x8d\xa4\xbc\xa7\xe9\x15\x0c\xd6\xd2\xb4\x7c\x21\x21\x2b\xf9\x55\x32\x9b\x47\xaf\x8d\xfe\xd0\x8a\xd0\x2f\x59\xf0\xb9\x78\x5b\xa3\xef\xa8\x4b\xc6\x0b\x49\x91\xa6\xb8\xb8\x8d\xdf\x10\x4e\xe1\x9b\x5d\x38\xb6\xaa\x56\xc4\xca\xc3\xde\x73\xf8\x36\x3e\x36\x95\x53\xdd\x53\x8f\x64\xf4\x96\xa9\xd9\x75\xeb\x87\x12\x3d\xce\xc3\x2b\x90\x3e\x6c\xca\x3a\xc4\xe2\xbc\x03\x0c\x51\x56\xa4\xc3\x28\x0b\x1f\xb3\x47\xda\xae\x39\xc6\xc5\x4d\x6a\xf2\x1c\xee\xa2\xa3\xe1\x73\x21\xa3\x9a\x5a\x39\xc9\x1d\xee\xf7\x6a\x1b\xa4\x83\x52\xcd\xab\xb3\x4f\x7f\xfe\xf8\x33\x00\x00\xff\xff\x7b\x0e\x96\xfc\x40\x05\x00\x00")

func templatesGoGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoSum,
		"templates/go/go.sum",
	)
}

func templatesGoGoSum() (*asset, error) {
	bytes, err := templatesGoGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.sum", size: 1344, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc1, 0xaa, 0x89, 0xc0, 0xa5, 0xf9, 0x56, 0x39, 0xc5, 0x52, 0x91, 0x46, 0xc7, 0xb1, 0x29, 0xbc, 0xa6, 0xb6, 0xb7, 0xf2, 0x7d, 0x13, 0x1e, 0x73, 0xa6, 0xc2, 0x9c, 0xe8, 0xfe, 0xda, 0x4, 0xd6}}
	return a, nil
}

var _templatesGoGoWork = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x57\x30\xd4\x33\x32\xd2\x33\xe0\xe2\x2a\x2d\x4e\x55\xd0\xe0\xe2\xd4\xe3\xe2\xd4\xd3\x4f\x2b\xcd\x4b\x2e\xc9\xcc\xcf\xe3\xd2\xe4\x02\x04\x00\x00\xff\xff\xb1\x6f\xc0\x55\x22\x00\x00\x00")

func templatesGoGoWorkBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWork,
		"templates/go/go.work",
	)
}

func templatesGoGoWork() (*asset, error) {
	bytes, err := templatesGoGoWorkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work", size: 34, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x5d, 0xcc, 0xa0, 0xd4, 0x72, 0x56, 0x8a, 0xd, 0x3e, 0x3, 0x38, 0xf4, 0xc8, 0x86, 0xa8, 0xe3, 0x66, 0x8f, 0x83, 0x5f, 0x4f, 0x64, 0xdf, 0x79, 0xe6, 0x99, 0xd3, 0x32, 0x58, 0x29, 0xff}}
	return a, nil
}

var _templatesGoMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x6a\xe3\x3a\x10\x7d\xd6\x7c\xc5\x5c\x3f\x14\xfb\x92\x5a\xbd\xaf\x81\x14\x2e\xb4\xbb\x5b\xca\x6e\x4b\x53\xda\xc7\x45\xb1\xc7\x8e\x88\x2c\x19\x69\x9c\xb6\x2c\xf9\xf7\x45\x76\xec\x3a\x85\x2e\xec\x4b\x90\x26\xe7\x9c\x39\x73\x46\x96\x12\x55\xa9\x5a\xa6\x12\x2b\xef\x1a\xdc\x32\xb7\x61\x29\x65\xad\x79\xdb\x6d\xf2\xc2\x35\xd2\xb5\x64\x2b\xa5\x82\xac\x9d\x51\xb6\x3e\x8f\x90\x73\xa6\xa6\x35\x8a\x49\x6e\x8c\xdb\xc8\x46\x05\x26\x2f\xa7\xe2\x0c\x29\x1b\xa5\x6d\x5e\x3b\x90\x12\xef\xbc\xae\xb5\x55\x06\x8d\x2e\xc8\x06\x5a\xe2\xf7\x9b\x47\x68\x55\xb1\x53\x35\x61\x04\x02\xe8\xa6\x75\x9e\x31\x05\x91\x54\x0d\x27\x20\x12\x17\xe2\x6f\x60\x5f\x38\xbb\x8f\x47\xd6\x0d\x25\x00\x22\xd9\x2a\x5b\x1a\xf2\xb2\xea\x6c\xc1\xda\xd9\x58\x0c\xe5\x0e\x93\x99\xfb\x07\x55\xa9\xb7\xf5\x5b\x60\x6a\xc2\x04\x9c\xec\x07\x19\xca\x9d\xac\x5d\x2f\xf7\x19\x8b\xec\xbe\xa9\xfd\x79\xbb\xab\x83\x0c\xba\xb6\xca\x84\x04\x32\x80\xc2\xd9\xc0\x58\x52\xa5\x3a\xc3\x8f\xba\x21\xd7\x31\xae\xf0\xbf\x0b\xfc\x17\xa3\xc7\x7c\x4d\x85\xb3\x25\x40\x6c\xdb\x8f\x97\x66\xf8\x0b\x84\x27\x55\x8e\xf0\xe5\x0a\x5b\xe5\x03\xdd\x58\xbe\xf3\x57\x9d\x57\xd1\xde\x93\x32\x1d\xa5\x2e\xe4\x5f\x89\xc9\xee\xd3\x24\x32\x7e\xf2\x40\x49\xb2\xc5\x87\x9e\x19\x88\x17\xaf\x99\xfe\x4e\xb3\xa7\xfc\x49\x14\xc4\x18\xd7\xfa\xea\x76\x81\xe4\x7d\x54\x0e\xe5\x2e\xff\x41\x2f\x5f\xde\xff\x4a\x41\xc4\xd4\xf3\x67\xcd\xdb\x87\xf7\xd1\xd2\xd9\x98\xd9\x62\x86\x79\x9e\x79\x4d\xe7\xc6\x4f\x50\xdf\x86\xdd\xa6\xa3\x87\x7c\x28\x64\x19\x08\x5d\xf5\x66\xfe\x59\xa1\xd5\x26\x06\x2a\xaa\x86\xf3\x7b\xaf\x2d\x1b\x9b\x26\xd7\xde\x3b\x8f\x85\x27\xc5\xda\xd6\x38\x0a\xe0\xfa\xea\x76\x89\x49\x3f\x48\x06\x42\x78\xe2\xce\x5b\x10\x07\x00\x51\xf0\x6b\x3f\xdb\xb0\xdc\x7c\x4d\xdc\xb5\xeb\xfe\x32\xda\xf8\x10\x47\xfe\xd0\xd9\xb4\xe0\xd7\x0c\x0e\xc7\xf5\x7e\x96\xf8\x5e\x19\x0c\xec\xb5\xad\x17\x58\x29\x63\x36\xaa\xd8\x0d\xaf\x63\xc4\x65\xa7\xd7\x38\x90\xae\xd0\x90\x8d\xdc\x0c\x2f\xf1\xa2\x9f\xb1\x6f\x50\x3e\x29\xb3\x18\x7a\x5d\x1f\xf7\x31\x7c\x17\xf9\xff\xec\x74\x4f\x00\x11\xe9\x13\x64\x35\xa4\x74\x76\x86\x93\x00\x5e\xae\x8e\x9a\xc7\x10\x4e\x0d\xa4\x13\x30\xfb\xf0\x90\x85\x38\x0c\x79\x95\x47\xe8\x02\xc7\xd3\xd1\x4d\x8f\xbe\x8f\xfc\x49\x6d\xf0\xa4\xab\x13\xe8\x6c\x77\x47\x0b\x63\x36\xb1\xc1\x58\x1b\x19\x70\x80\xdf\x01\x00\x00\xff\xff\x1d\x7b\x64\x11\xa8\x04\x00\x00")

func templatesGoMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoMainGo,
		"templates/go/main.go",
	)
}

func templatesGoMainGo() (*asset, error) {
	bytes, err := templatesGoMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/main.go", size: 1192, mode: os.FileMode(0644), modTime: time.Unix(1710248861, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc6, 0x5c, 0x88, 0xf8, 0x59, 0x56, 0x65, 0x5b, 0x27, 0x51, 0x7d, 0x1, 0x6, 0xa5, 0xb2, 0xd2, 0x43, 0x83, 0x61, 0xdb, 0xac, 0xe5, 0x85, 0x3b, 0xe4, 0x29, 0xd7, 0x8e, 0x74, 0x43, 0x92, 0x13}}
	return a, nil
}

var _templatesPythonDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x51\x6f\xdb\x36\x17\x7d\xfe\xf8\x2b\x2e\x54\xa3\xf8\xb6\x81\xa2\xbd\x2d\x1b\x66\x40\x0f\xaa\xad\xc4\x41\x12\xcb\x90\xd5\x76\x41\x17\x08\xb4\x44\x59\x44\x28\x91\x25\xa9\xc4\x82\x9b\xff\x3e\x88\x4a\xec\xb4\x35\x06\xd4\x0f\x86\x78\xcf\x21\xef\xb9\xe7\x5e\x32\x4c\x2e\x60\x75\x9b\x2e\xe2\x65\xf6\x21\x4a\xd6\x97\xf1\x32\xf8\xcd\x9f\x4c\x50\x1f\x8f\xcf\xb3\x8f\x61\x3a\x5b\xcc\xe3\x8b\x03\x38\xf6\xff\xf2\x27\x67\x03\xbc\xce\xde\x85\xeb\x28\x30\x82\xd7\x78\xd3\x0a\x61\x58\xc7\x10\x42\xe7\x49\x7c\x03\x18\x2b\x41\x6d\x29\x75\x1d\x8c\xf6\x69\x98\x5c\x44\xe9\xea\x3a\x4c\xcf\xe3\xe4\x66\x8a\x05\x6f\xda\x1d\xa1\x75\xf1\xc7\xef\x4f\xb0\xad\x72\xed\x73\x49\xa4\x62\x4d\x49\xa9\x21\xb2\xc4\x8f\xd4\xe6\x55\x21\xb7\xd3\xd1\xfe\x84\x88\x27\xa0\x06\x5e\x28\x3f\x9a\x4e\x75\xb6\x92\xcd\x74\xb4\xff\xba\xea\x27\x3c\xda\x3f\x17\xe4\x8e\xdf\xb4\x5c\x14\x08\xcd\xe2\xd5\x2d\x60\x5c\x6a\x59\x07\x2f\x19\x81\x94\xc7\xcf\xd6\x68\xb2\xe1\xcd\x31\x84\x92\xf7\x4b\xc8\xab\x5a\x16\xf0\xcb\xee\x14\x8e\xde\x40\x28\x2c\xd3\x0d\xb5\xfc\x81\x89\x0e\x5a\xc3\x20\x9c\xcf\xa1\xb2\x56\x99\x29\x21\xf0\xff\xc7\x8a\xe7\x15\x3c\x72\x21\xa0\x91\x16\x36\x0c\x72\x9a\x57\xac\x80\x4d\x07\x73\x99\xdf\x33\x3d\xe8\x63\xfa\x27\xd7\x89\x70\x3e\xbf\x4c\x2f\xe3\x65\x78\x9d\xad\xc2\xd9\x55\x78\x11\x05\x9e\xe7\x84\xb0\xbc\x92\xe0\x9d\xc0\x47\xfb\xef\x83\x4f\xc3\x1e\xaa\x2c\xde\x32\x0b\xf8\x73\x07\xad\x2a\xa8\x65\xf0\x0f\x02\x00\x78\xfb\xf6\x2b\x8c\x37\xc6\x52\x21\xe0\xe4\x51\xc7\x2d\xba\x06\xac\x4b\x20\x0f\x54\x13\xc1\x37\x84\x2a\x4b\x04\x37\xd6\x90\x9f\x9d\x17\x45\x01\x8d\x6c\x40\x4b\x69\x7b\x2b\xf4\xa0\xa1\x28\xb6\x5a\xb6\x0a\x30\x36\x9d\xb1\xac\x06\xaa\x94\x13\x50\x14\x3d\xc9\x2d\x0f\x18\xc6\xbc\x19\xe8\x54\xa9\xe7\x06\xc8\xc7\xc6\x91\x48\x25\x6b\x46\xfa\x38\x7a\xbf\x8e\x12\xc7\x40\xd1\xf2\x03\xac\xc2\x74\x11\x8c\xfa\xff\xe9\x81\x43\x7c\x21\x73\x2a\xfa\x8e\x21\xf4\x31\x4e\xae\xe6\x97\xc9\xf1\x04\x82\x9c\xdb\xab\x24\xfe\xfb\xb6\x37\xf8\x65\x3a\x5c\xb2\x80\x2a\x35\xed\x13\xd6\x94\x37\xbe\xea\xe0\xf8\xf3\x4f\x13\x35\xfb\xdc\x72\xcd\x6a\xd6\x58\xe3\xdb\x9d\x75\x4c\xa7\xb1\xf7\xc2\x95\xa1\xb8\x3a\xd8\x8c\x71\x23\xb1\x9b\x03\x5c\x70\xdd\x4f\xbc\x96\xbb\x2e\x18\xed\x9d\x9e\x27\xc0\xfa\xbb\x13\x5f\x55\xdc\x9f\x56\xdf\xbb\x8d\x0a\xca\xb6\xc9\x2d\x97\x8d\x8b\x5a\xd9\xe6\x15\xf8\xe4\x25\x48\xb2\x8c\x37\xdc\x66\x99\xaf\xba\x13\x1e\x1c\x68\xa7\x8b\x3a\xc0\xdf\x6a\xf9\x9f\xff\xe3\x15\x61\xd7\xea\x53\x85\xbd\xf2\xe9\xbf\x65\x38\x53\x87\x37\xc2\x5d\x99\xfe\x6e\x5b\x66\xec\xd0\xca\x34\x5a\xa7\xd9\x2c\xbe\xb9\x09\x97\xf3\xc0\xca\xdd\x31\x18\x2d\xc3\x77\xd7\xd1\x3c\x28\xa9\x30\x6c\xb0\xef\x13\x78\xa3\xd7\x98\x07\x01\x78\x0e\xf7\xe0\xae\x9f\xcd\xe1\xb2\x99\x7b\xae\x14\x6f\xb6\x2e\x8d\xf1\xe0\xcb\x17\x60\x0f\x54\xbc\x6c\x7e\xce\xe6\xa1\x6f\x55\x99\x8a\xab\x93\x33\x77\x6c\xe2\x1b\x58\x33\x0b\xad\x82\x57\x4f\x24\x94\x52\xc3\x22\x4d\x57\x50\xcb\x82\xb9\xc9\x2e\x95\x96\x39\x33\x26\xf0\x86\xc7\x0e\x78\x53\xb0\x9d\xaf\x3a\xcf\xc1\xf9\x96\x67\x15\xa3\x05\xd3\x26\xf0\xac\x6e\xd9\x10\xee\xb7\x07\x5e\xff\x08\x0d\xeb\x56\x19\xab\x19\xad\xb3\x56\x8b\x21\x3e\x25\x64\xf2\xeb\x9f\xfe\xd8\x1f\xfb\x93\xe9\xd9\x78\x3c\x1e\x88\x9a\xd1\xa2\xcb\x14\xb5\x55\xe0\x11\x4c\xdc\xd2\x43\x68\x11\x85\xd7\xe9\x62\xb6\x88\x66\x57\xee\x82\x5a\xa6\x1f\xa8\x08\xce\x0c\xcc\x6e\xe6\xf0\x09\x30\x03\x62\xeb\xe1\xca\xdd\xc3\x9d\xf3\x69\xc7\x2d\x4c\x10\x72\x04\xef\xf0\x64\x7a\x77\xe8\xdf\x00\x00\x00\xff\xff\xed\x40\xcd\x3e\xa7\x06\x00\x00")

func templatesPythonDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonDockerfile,
		"templates/python/Dockerfile",
	)
}

func templatesPythonDockerfile() (*asset, error) {
	bytes, err := templatesPythonDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/Dockerfile", size: 1703, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x98, 0xc, 0xe6, 0xda, 0x76, 0x43, 0x34, 0x23, 0xc7, 0x3b, 0xe7, 0xb0, 0x50, 0xf, 0xee, 0xc8, 0x3c, 0x34, 0x7e, 0x7, 0x76, 0x9e, 0x62, 0xeb, 0xaf, 0xc5, 0x43, 0x88, 0xc8, 0x19, 0x12}}
	return a, nil
}

var _templatesPythonFunction__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunction__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunction__init__Py,
		"templates/python/function/__init__.py",
	)
}

func templatesPythonFunction__init__Py() (*asset, error) {
	bytes, err := templatesPythonFunction__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/__init__.py", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var _templatesPythonFunctionHandlerPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcd\xb1\x4a\x04\x31\x10\x06\xe0\x3e\x4f\xf1\x9b\xea\x4e\xa2\x0f\x10\x50\x10\x2c\x2c\xec\x2d\xc4\x62\xb9\x9d\xc4\x40\x76\xe6\x9c\xcc\x82\xc7\xb2\xef\x2e\xc4\x28\x62\x97\x7c\xf3\xcf\x3f\x49\x65\x81\x5d\xce\x85\x33\xca\x72\x16\x35\x5c\xbb\x8e\x55\x72\xfe\xa3\xcf\x92\x33\xa9\x73\x33\x25\xbc\x4f\x3c\x57\x3a\xd4\x4e\x71\x8c\x82\xd2\xc7\x4a\xcd\x22\x1e\xcb\xc9\x5e\x9b\x69\xc0\x03\x5f\xde\x8e\xb8\xb9\xff\x47\xd1\x01\xc0\xf7\xfa\x6d\xe1\x24\x87\xe4\x0b\xb7\x32\x13\xd2\xca\x27\x2b\xc2\xe3\x86\x06\xfc\xd6\x6e\xe3\xb5\xfb\x00\xfa\x34\x9d\xee\x36\x3f\xc8\xc7\x9f\xd8\x7e\xec\xdd\x4a\xb6\x2a\x63\xeb\x1f\x00\x7e\xa1\xd6\xa6\x4c\x3e\xc2\x3f\x51\xad\x12\xf0\x22\x5a\xe7\x2b\xdf\x13\xbb\xfb\x0a\x00\x00\xff\xff\x15\xa5\x4e\xfd\x08\x01\x00\x00")

func templatesPythonFunctionHandlerPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionHandlerPy,
		"templates/python/function/handler.py",
	)
}

func templatesPythonFunctionHandlerPy() (*asset, error) {
	bytes, err := templatesPythonFunctionHandlerPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/handler.py", size: 264, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0xea, 0xf0, 0x80, 0x40, 0xf7, 0x2b, 0xc, 0x26, 0xdd, 0xd8, 0x76, 0x87, 0xfd, 0x59, 0x9b, 0xc5, 0x45, 0x88, 0xf5, 0x1, 0x1, 0xfd, 0xc3, 0xc4, 0xa6, 0x6c, 0x65, 0x41, 0x19, 0x5b, 0x60}}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxt,
		"templates/python/function/requirements.txt",
	)
}

func templatesPythonFunctionRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxtTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xd0\xad\xad\xe5\xaa\xae\x86\xa9\x02\x73\x74\x15\x52\xf3\x52\x6a\x6b\xb9\x00\x01\x00\x00\xff\xff\x86\x7b\x02\x07\x43\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxtTmpl,
		"templates/python/function/requirements.txt.tmpl",
	)
}

func templatesPythonFunctionRequirementsTxtTmpl() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt.tmpl", size: 67, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0x49, 0xd, 0x2c, 0x62, 0x37, 0xb9, 0x46, 0xc4, 0x3a, 0xf7, 0x24, 0x1f, 0x7d, 0x6, 0x4e, 0x31, 0xce, 0xda, 0xcb, 0xf0, 0xe7, 0x5, 0x55, 0xe0, 0x2f, 0x8, 0x1c, 0x8f, 0xde, 0x41, 0x84}}
	return a, nil
}

var _templatesPythonMainPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\x41\x0a\x83\x30\x14\x84\xe1\xfd\x3b\xc5\xd4\x6e\xda\x8d\xee\x0b\x9e\x65\x48\x6b\x82\x41\xf3\x22\x2f\x51\xf1\xf6\xa5\x68\x57\xc3\xc0\x0f\xdf\xfd\xd6\xad\xc5\xba\x77\xd4\xce\xeb\x86\xe5\xa8\x63\x56\x91\x60\x39\x21\xac\xfa\xa9\x31\x2b\x62\x5a\xb2\x55\x8c\x4e\x87\xd9\x9b\x5c\xf7\x6c\x59\x86\x89\xe6\x82\x3b\xb8\x67\x9b\xc2\x9c\x77\xb8\x82\x32\x4c\x22\x31\x80\x54\x97\x3c\x89\xbe\x47\x43\x26\x17\x95\x6c\x5e\x02\xe0\xd7\xb4\xc5\xdb\xe6\xf9\x97\x1e\x17\xd1\x9e\xfb\x94\x6f\x00\x00\x00\xff\xff\x3d\x62\xa4\x64\x9f\x00\x00\x00")

func templatesPythonMainPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonMainPy,
		"templates/python/main.py",
	)
}

func templatesPythonMainPy() (*asset, error) {
	bytes, err := templatesPythonMainPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/main.py", size: 159, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc7, 0x2e, 0x30, 0x84, 0xaa, 0x3a, 0x52, 0xb, 0x1a, 0x36, 0x1a, 0xf3, 0x92, 0x90, 0x68, 0xef, 0x69, 0x46, 0x54, 0x49, 0x6b, 0xb, 0x14, 0xb7, 0xb4, 0xb4, 0xba, 0xf3, 0xef, 0xbe, 0xe4, 0x38}}
	return a, nil
}

var _templatesPythonRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcb\x49\x2c\xce\xe6\x2a\x4f\xcc\x2c\x29\x4a\x2d\x2e\xe6\x2a\xc9\xaf\xb0\xb5\x35\xd6\xd3\xe2\x2a\xa8\x2c\xc9\xc8\xcf\x8b\x2f\x4e\xc9\x8e\x2f\x4a\x4c\x4b\xac\x8c\x2f\xcf\x2f\xca\x4e\xcb\xc9\x2f\xb7\xb3\x35\xd0\x33\xd0\x33\x34\x02\x04\x00\x00\xff\xff\xde\x27\x92\xc2\x39\x00\x00\x00")

func templatesPythonRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonRequirementsTxt,
		"templates/python/requirements.txt",
	)
}

func templatesPythonRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/requirements.txt", size: 57, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa8, 0x2b, 0x8a, 0x6a, 0xf0, 0x87, 0xbf, 0x84, 0x11, 0x5c, 0x39, 0x78, 0x96, 0x57, 0x5f, 0x77, 0x89, 0xa5, 0xea, 0x67, 0x6f, 0x3b, 0x8e, 0x10, 0x93, 0xc0, 0x48, 0x4, 0xa0, 0x93, 0x12, 0x3e}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go/Dockerfile":                         templatesGoDockerfile,
	"templates/go/function/go.mod":                    templatesGoFunctionGoMod,
	"templates/go/function/go.mod.tmpl":               templatesGoFunctionGoModTmpl,
	"templates/go/function/go.sum":                    templatesGoFunctionGoSum,
	"templates/go/function/handler.go":                templatesGoFunctionHandlerGo,
	"templates/go/go.mod":                             templatesGoGoMod,
	"templates/go/go.sum":                             templatesGoGoSum,
	"templates/go/go.work":                            templatesGoGoWork,
	"templates/go/main.go":                            templatesGoMainGo,
	"templates/python/Dockerfile":                     templatesPythonDockerfile,
	"templates/python/function/__init__.py":           templatesPythonFunction__init__Py,
	"templates/python/function/handler.py":            templatesPythonFunctionHandlerPy,
	"templates/python/function/requirements.txt":      templatesPythonFunctionRequirementsTxt,
	"templates/python/function/requirements.txt.tmpl": templatesPythonFunctionRequirementsTxtTmpl,
	"templates/python/main.py":                        templatesPythonMainPy,
	"templates/python/requirements.txt":               templatesPythonRequirementsTxt,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": {nil, map[string]*bintree{
		"go": {nil, map[string]*bintree{
			"Dockerfile": {templatesGoDockerfile, map[string]*bintree{}},
			"function": {nil, map[string]*bintree{
				"go.mod":      {templatesGoFunctionGoMod, map[string]*bintree{}},
				"go.mod.tmpl": {templatesGoFunctionGoModTmpl, map[string]*bintree{}},
				"go.sum":      {templatesGoFunctionGoSum, map[string]*bintree{}},
				"handler.go":  {templatesGoFunctionHandlerGo, map[string]*bintree{}},
			}},
			"go.mod":  {templatesGoGoMod, map[string]*bintree{}},
			"go.sum":  {templatesGoGoSum, map[string]*bintree{}},
			"go.work": {templatesGoGoWork, map[string]*bintree{}},
			"main.go": {templatesGoMainGo, map[string]*bintree{}},
		}},
		"python": {nil, map[string]*bintree{
			"Dockerfile": {templatesPythonDockerfile, map[string]*bintree{}},
			"function": {nil, map[string]*bintree{
				"__init__.py":           {templatesPythonFunction__init__Py, map[string]*bintree{}},
				"handler.py":            {templatesPythonFunctionHandlerPy, map[string]*bintree{}},
				"requirements.txt":      {templatesPythonFunctionRequirementsTxt, map[string]*bintree{}},
				"requirements.txt.tmpl": {templatesPythonFunctionRequirementsTxtTmpl, map[string]*bintree{}},
			}},
			"main.py":          {templatesPythonMainPy, map[string]*bintree{}},
			"requirements.txt": {templatesPythonRequirementsTxt, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
