// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/go/Dockerfile (1.505kB)
// templates/go/function/go.mod (376B)
// templates/go/function/go.mod.tmpl (78B)
// templates/go/function/go.sum (1.664kB)
// templates/go/function/handler.go (223B)
// templates/go/go.mod (370B)
// templates/go/go.sum (1.664kB)
// templates/go/go.work (34B)
// templates/go/go.work.sum (87B)
// templates/go/main.go (1.214kB)
// templates/python/Dockerfile (1.703kB)
// templates/python/function/__init__.py (0)
// templates/python/function/handler.py (133B)
// templates/python/function/requirements.txt (0)
// templates/python/function/requirements.txt.tmpl (67B)
// templates/python/main.py (159B)
// templates/python/requirements.txt (57B)

package fixturesfs

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGoDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x5f\x6f\xdb\xb6\x17\x7d\xe7\xa7\xb8\x50\x8a\xbc\xfc\x40\x32\x4e\xfb\xeb\x32\x03\x02\xe6\xc6\x8e\x57\xcc\x89\x02\x39\xd9\x56\x6c\x83\xc1\x90\x94\x44\x84\x22\x09\x92\x4a\x32\x14\xf9\xee\x03\x25\x2b\xb6\x9b\x66\x7b\xd3\x3d\x57\x3c\xf7\xcf\x39\xf7\xa2\x2c\x2e\x01\x63\xa7\x59\xac\xac\x6f\xf3\x77\x5f\x6f\x66\xe5\x72\x71\x73\xbd\x9a\xdd\x5c\x14\xe5\xe5\x14\x6b\x65\xba\x27\xca\x5a\xf1\xf1\xc3\x33\xd4\x0d\xf7\x44\x59\x6a\x9d\x34\x15\x63\x81\xda\x0a\x3f\xb2\xc8\x1b\x61\xeb\xe9\x09\xf9\x91\x4c\xfe\x0f\x2c\xc0\x08\xa1\xd7\xf4\x9f\x6e\x3f\xaf\xe6\x6f\xb1\x5b\xcd\x4c\x3d\x9d\x90\xd3\x53\xcc\xb4\x53\x46\x26\xb2\xbb\x4e\x69\x81\x50\x79\x7b\x05\xb5\x05\x65\x42\x64\x5a\x03\x7e\x80\x5a\xc5\xa6\xbb\x23\xdc\xb6\x54\x19\xde\x7d\xec\x02\xad\xad\x6a\x9d\xf5\x31\x60\x2f\x1f\x54\x90\x9e\x3e\xbc\xff\x49\xb3\x28\x43\xfc\x96\x60\x28\x46\xac\xaf\xe9\x13\x8d\xd6\xea\x40\x79\x2b\x76\x0c\xe3\x33\x34\x2b\x97\x70\xb8\x94\x1e\x3a\x18\x64\xef\xa7\x62\xbd\x17\xcc\xca\xf3\x9f\x87\xd6\x99\xbb\x07\x8c\x8d\xc5\x9c\xf1\x46\x02\x13\x22\xf5\x8f\xd0\x79\x71\xfd\x05\x30\xae\xbc\x6d\xf3\x71\x6d\x40\xab\xdd\x67\x17\x3c\xbd\x53\x66\x07\xf5\x74\xbc\x69\xad\x80\xff\x3d\x7d\x2f\x3f\x14\x6c\xef\x85\xf2\x80\x1d\xd0\xda\xd2\xe0\x39\x6d\x98\x11\x5a\x7a\xf4\x5b\x51\xfe\x32\xff\x5c\xbe\xc2\x87\x56\x08\x10\x34\xcc\xbc\x2c\x26\x93\xc9\x65\x31\xbf\x5d\x2d\xf2\xcc\x9a\x6c\x0b\x5e\x97\xc5\xef\x5f\xf2\x6c\x0c\x2f\x56\xb3\xe5\x7a\x0c\xcf\x97\xc5\x66\x71\x35\xfb\xb4\x5a\xcc\xf3\x13\xb4\xb8\xfa\xf5\x00\x79\xf7\x75\x2f\x7a\x1e\x15\xdd\xae\x1b\xf0\x23\x90\x43\x68\xd4\x10\x70\xf2\x0e\x8b\x80\xbd\xe4\x9d\x0f\xea\x41\x02\xf6\x2d\xee\x4c\x17\xa4\x00\x42\x09\x19\x5f\x42\xda\x8a\xb0\x8f\x46\x5b\x26\x10\x7a\x73\xd6\xf4\xf7\xb2\x28\xd6\x2f\x7e\x2f\xd6\xcf\xb0\x2c\x92\x5c\x2f\x50\x0a\x9e\xe1\x4f\x04\x00\x89\xb9\xb7\x21\x60\xac\x45\xa5\x59\x1d\x20\xc3\xa9\xe7\x0c\xb0\x85\x2d\x2b\xb9\x53\xa6\xdf\xde\xd1\x11\x5c\x28\xc3\x34\xa8\x96\xd5\xf2\x3b\x47\xf0\xaf\x37\x36\x38\x7f\xfa\x9e\x4c\xce\xc8\x87\x74\x00\xa1\x51\x0e\xa1\x23\x98\x09\x01\xc6\x1a\xf0\xd6\x46\xe8\xd2\x62\x98\x11\xc0\xa5\x8f\xe1\x2d\x8b\x71\x86\x53\x5e\x55\x8a\x27\x37\x6f\xa7\x39\x3e\x4e\xc9\xda\xdb\xce\x01\x5e\x03\x73\x6e\x0b\xf5\xa4\x78\x0d\xb8\xee\x41\xe6\xfa\xba\x6b\xa7\x55\xec\xef\xc6\x77\x3c\x2a\x6b\x02\x04\x0b\xb1\x61\x71\x58\xca\xbd\x8a\xc0\x99\x01\xdf\x19\x38\x86\xbe\x38\x3a\x82\xd8\x48\x70\x49\x41\xdb\x05\xe0\xb6\x6d\x53\xb3\xac\x91\x4c\x80\xad\x20\xaa\x56\x92\x6f\x7c\xda\xd8\x56\xd2\x54\xf7\xa5\x4b\xde\xd8\x47\xd3\xb7\xf2\x92\xdc\xd3\x74\x07\xed\x1f\xd1\xa8\x53\xff\x36\xef\xdf\x1e\x8a\x4f\xf7\xe5\x1a\xb5\xfb\x2f\x8a\x57\x57\x06\x49\xe9\xdb\xf5\xa2\x1c\xb6\x94\xbc\x5e\x39\x6f\xb9\x0c\x21\xcf\xc8\x58\x23\xeb\x13\xad\x15\x32\xcf\x9a\x18\xdd\x10\x77\x2e\x44\x2f\x59\xbb\xe9\xbc\x1e\xf0\x29\xa5\x93\xd3\x1f\xc8\x09\x39\x21\x93\xe9\xd9\xc9\xd9\xe9\xf0\xa3\xf3\xb2\x52\x4f\x1b\x6d\xeb\x90\x67\x15\xd3\x41\x0e\xb8\x97\x4c\xfc\xbd\x71\x2c\x36\x79\x46\x37\xb4\x0f\x33\x84\xce\x2f\xe7\xf0\x47\x46\x76\x4d\x66\x7f\xa1\x7f\x02\x00\x00\xff\xff\x4d\xbe\xd4\x04\xe1\x05\x00\x00")

func templatesGoDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoDockerfile,
		"templates/go/Dockerfile",
	)
}

func templatesGoDockerfile() (*asset, error) {
	bytes, err := templatesGoDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/Dockerfile", size: 1505, mode: os.FileMode(0644), modTime: time.Unix(1712835065, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9c, 0x6c, 0x83, 0x20, 0x4b, 0xa0, 0x97, 0x5c, 0x73, 0x51, 0xd5, 0xaf, 0x19, 0xe8, 0x24, 0xf7, 0xd, 0xa7, 0xaf, 0xa, 0x59, 0xa0, 0xc4, 0xc5, 0x58, 0x1c, 0xb8, 0x5f, 0xa1, 0x53, 0x11, 0x4e}}
	return a, nil
}

var _templatesGoFunctionGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x41\x4e\xc4\x20\x14\xc6\xf1\xb5\x9c\x82\xa5\x2e\x80\x07\x6d\x67\xa6\xd7\xd0\x13\xbc\xc2\x1b\x4a\x86\x42\x05\x3a\xb1\xb7\x37\xc6\xa8\xa9\x89\x89\xfb\xef\xff\xfb\x96\xec\xb6\x48\x7c\xc6\xe4\x22\x15\x75\xdd\x92\x6d\x21\x27\xc6\x7c\xe6\x5a\x1a\x23\x81\xb1\x42\xaf\x5b\x28\xc4\x7d\x68\xf3\x36\x49\x9b\x17\xf5\x8c\x57\xdc\x5f\xf6\xda\x68\xa9\xdf\x91\x68\xb4\xac\x11\x1b\x55\x55\xdd\x4d\xf9\xcc\xef\x20\x41\x82\x30\x60\x7a\x18\x3a\xad\x75\x07\xfd\x59\x38\x3a\xe9\x61\xec\x4f\x64\xc7\xe9\x47\x7f\x64\x0f\x7f\x1d\x50\xba\x2f\xbe\x88\xf5\xe6\xeb\x81\xec\xe0\x0c\xdd\x00\xc3\x28\xf4\xc5\xa0\x46\x74\x23\x5c\x2e\x5c\x29\x1e\x92\x0b\x85\x6c\x3b\x98\x33\xd6\x39\xd8\x5c\x56\xe5\xb3\xb0\x91\x30\xcd\xad\xad\x1f\xe2\x20\xcd\xff\xaa\x42\xad\xec\x38\x45\xfa\x2a\xcf\xb2\xff\x55\xe6\x88\xc9\xcb\x5c\xbc\x7a\x53\x75\x4f\xf6\x73\x05\x87\xd5\x13\x7b\x0f\x00\x00\xff\xff\x84\xf0\x29\xd7\x78\x01\x00\x00")

func templatesGoFunctionGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoMod,
		"templates/go/function/go.mod",
	)
}

func templatesGoFunctionGoMod() (*asset, error) {
	bytes, err := templatesGoFunctionGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod", size: 376, mode: os.FileMode(0644), modTime: time.Unix(1717155255, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x29, 0xec, 0x26, 0x6e, 0xa6, 0x74, 0x35, 0xde, 0xc6, 0xd8, 0x5f, 0x1, 0x6, 0x40, 0x21, 0x9a, 0xbd, 0x65, 0x2b, 0x62, 0xbc, 0xaa, 0xb4, 0x51, 0xd6, 0x6b, 0xdd, 0x83, 0x89, 0x6b, 0xbe, 0x33}}
	return a, nil
}

var _templatesGoFunctionGoModTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\x2c\xcd\x2c\x4a\x55\xd0\xe0\xaa\xae\x56\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xd0\xad\xad\x05\xa9\x85\xaa\x02\x73\x74\x15\x52\xf3\x52\x6a\x6b\xb9\x34\x01\x01\x00\x00\xff\xff\x14\x02\x94\xe3\x4e\x00\x00\x00")

func templatesGoFunctionGoModTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoModTmpl,
		"templates/go/function/go.mod.tmpl",
	)
}

func templatesGoFunctionGoModTmpl() (*asset, error) {
	bytes, err := templatesGoFunctionGoModTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod.tmpl", size: 78, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x79, 0x49, 0x15, 0x80, 0x0, 0x5, 0xe, 0x56, 0x34, 0xf6, 0xa8, 0xee, 0x5e, 0xb3, 0x4a, 0xdb, 0x96, 0xec, 0xb3, 0x32, 0x14, 0x33, 0xa1, 0x70, 0x2c, 0x3e, 0xcc, 0x29, 0x42, 0x70, 0x7d, 0xd0}}
	return a, nil
}

var _templatesGoFunctionGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd3\xcb\xce\xa2\x48\x18\xc6\xf1\x7d\x5f\x45\xef\x8d\x52\xc8\x79\x92\x5e\x28\x8a\x1c\x54\x40\x10\xc1\x1d\x50\x9c\x0f\x05\x54\xa9\xe0\xd5\x4f\xec\xce\x24\xba\xf8\x66\x7a\x92\x99\x1b\xf8\xbd\x7f\x9e\x50\x59\x41\xf2\x5b\xb4\x88\x51\x43\x9d\xc2\x34\x9c\x9c\x09\x93\xa4\xc1\x54\xd2\xde\x9b\x6c\x98\x77\x55\x86\xbf\xdf\xc1\x02\x2c\xc0\x7c\x09\x96\x2c\x60\x80\x00\x18\x0e\x70\xd2\x9c\x16\x97\x21\x1d\x86\x50\x02\xa2\xf8\x3d\xa7\xff\xa8\x37\xe0\x3e\xf2\xdc\xaa\xef\x37\x5e\xa7\x6c\xc7\xd9\xa9\xe6\x15\x9d\x36\x27\xaa\xf5\x67\x6b\x95\x72\xd5\xbb\xbb\xf7\x5b\x89\x93\x0f\x3f\xbe\xfd\x37\x67\xa9\x0c\x2d\x1a\x04\x5f\xd7\xad\xb2\x32\xa4\x06\x40\x7d\x47\x23\xa1\xf5\x1a\x72\x70\xcf\x49\x6c\xd6\xc1\xf3\xe4\x95\xbe\x30\xab\x2f\x75\x54\xc9\xcd\x8c\x34\xab\xaf\xaf\xa7\xb7\x36\x26\x05\x6a\xe7\x24\x69\xba\x3a\x24\x09\xa6\x30\xac\xa8\x0c\x7d\xb4\x70\x0c\x4d\xd3\x0c\x60\x85\x39\x4c\x78\x9a\x93\x58\x3e\x89\xa5\xe8\x15\x01\x29\x95\xe0\xd6\x38\xc4\x1b\xdb\x92\xaf\xaa\x59\x36\x45\x7a\x1d\xab\xb5\x34\xf3\x35\x41\x54\x72\x15\xda\x68\xa0\xa1\xc1\x36\xf6\xff\x13\xf1\x36\x08\x53\x97\xea\x81\x37\xab\x71\x0f\xf5\xb5\x08\xae\x4f\x6c\x63\x0b\x27\x7a\x36\x7a\xc4\x95\xcc\x07\xeb\xf4\x9d\x7f\x5d\x75\xe6\x6a\xfb\xd1\x02\xc3\x7b\x12\x67\x39\x95\xa1\x39\xee\x92\xc7\xf7\x3b\xbd\xa0\x17\xf4\x1b\xac\x0b\x81\x18\xc4\x97\xe5\xb1\xc8\x71\xd6\x78\x88\x6a\xee\x4c\xbd\x7a\xd4\x14\xae\xcc\x23\x5b\xec\xd5\xd2\xc1\xda\x2c\xe6\x54\x46\xfc\x80\x33\x84\xb2\x3a\x79\xb9\x71\xd3\xbd\xbe\x85\x5f\x80\x97\x87\xd2\x29\x1f\xef\x7e\x7c\xcd\x0f\xf8\xcc\xdd\xea\x48\x29\xf6\x46\x4d\xf9\x6b\xa5\xdf\xd2\x3b\xa7\x17\x42\x72\x13\xc9\xaa\x71\x4f\xda\x3f\x7a\x6f\x99\xb4\x00\xcf\x75\xb5\x36\xc3\x4a\x07\xb3\x4d\x35\x38\xce\xb1\x94\x2b\xad\x1c\x1d\x3e\x52\xa4\x67\xc4\x24\x75\x93\x1c\x77\x5a\x89\x82\x0f\x36\x0f\x71\x5e\xc4\x68\xe8\x7e\xca\x75\x12\xb6\x39\x21\x3f\x7d\x6e\xb1\x7c\xc1\x80\xe1\x14\x23\xd0\x2e\x65\x73\xde\x4f\xca\x69\x6d\x58\x58\x74\xd7\x36\x2a\xc0\xc8\x43\x69\xc7\x8e\xb1\xd4\x26\xbe\x7e\x59\x5d\xed\xdf\x87\xdf\xc2\x2b\x93\x0a\x36\xb5\x25\xee\x69\x86\xe5\xb7\xbc\x83\xe0\x63\x66\x0d\xdd\xda\xf1\x58\xca\x41\xa3\xec\xef\x02\x7e\xdd\x1f\x15\x97\x15\xbf\xf6\xf3\xb8\x46\xd9\xcb\x96\x7e\x45\xcb\x3b\xde\xdd\x72\xaa\x44\xe9\x3e\x56\x2e\xba\x9c\x22\xcd\xeb\x0c\x45\xab\x94\x84\x9f\xf0\xf6\xa6\x16\x43\xc7\x6e\x46\x19\xab\xda\xef\xa1\x6f\xc1\x9c\x7c\x9e\x85\xd9\xbe\x98\x18\x5d\x38\x0a\x76\xa9\x1a\x1c\x04\x9c\x31\xee\xf0\xcd\x2f\xec\xfd\x50\xae\x80\x2a\x84\x71\xb9\xac\xff\x66\x90\x21\x21\xc3\x14\x46\x75\xf2\xd7\x28\xc2\x82\x7d\xe1\x57\x3b\xf3\x60\xe7\xc2\xd5\x5e\xb8\x74\x07\xed\xb1\x7f\xca\x69\x14\xd6\x66\xec\x9c\x61\xb5\xb9\xb6\xdd\xf9\xce\x50\xb3\xf5\xf8\x54\x56\xff\x0e\x7f\xff\xa3\x27\x2a\xb3\x82\x15\x2c\xfb\x34\xbd\x52\x93\xb2\x93\x15\x6f\x09\x91\xc6\x3d\x4a\xa2\xd2\xc9\xe3\x20\xdd\xc4\x22\xf0\x4a\xe2\x7f\x2e\xde\x35\xc9\x33\x1c\xe0\xeb\x02\x2c\xd2\xb4\x2e\xa2\xd7\x6b\x01\x1f\xbf\x61\x61\xa8\x82\x50\x21\x25\x0f\x46\xd7\xa0\xbb\xf8\xd4\x56\x46\xd5\xa7\x2e\xca\x70\x94\x09\xd9\xf5\xe8\x05\x2c\x3e\x6d\x82\x2b\xc5\x7e\xd8\x98\x0c\x09\x89\xf3\x81\x22\x09\x26\x45\x3a\xbd\xe4\xe5\xc7\xec\xa1\x68\xb6\xa7\xb8\x88\xd8\x36\xcf\x81\x19\x9e\x56\xde\x2c\x20\x58\x14\x2a\x03\xf6\xc0\xb2\x84\xce\x4f\x27\xbe\xda\x54\x67\x0f\xff\xf8\x96\xa1\x3a\x6c\xb3\x05\x1a\x32\x6a\xa4\xf0\xd4\xc6\xbf\x56\xf8\xf9\x00\x03\xac\x35\xa9\xb3\x46\x96\x64\x5b\xc1\x1e\x8c\x93\xa1\x5b\x3d\xc8\xe2\x50\x87\x3b\x66\xd0\x5a\xd4\x8f\xee\x25\x4a\xed\x9b\x74\xf8\x1a\x7a\x0b\x93\x9f\x64\xf6\x30\x6e\x74\x26\x4f\x5b\x65\x73\x26\x2d\x28\x77\x9c\xed\xdd\x3b\x9d\x1f\x9e\x5e\x3f\x70\xa1\x3f\x11\x09\x0e\x76\x5a\xfd\xf8\xf6\x67\x00\x00\x00\xff\xff\xd5\x79\x43\x5e\x80\x06\x00\x00")

func templatesGoFunctionGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoSum,
		"templates/go/function/go.sum",
	)
}

func templatesGoFunctionGoSum() (*asset, error) {
	bytes, err := templatesGoFunctionGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.sum", size: 1664, mode: os.FileMode(0644), modTime: time.Unix(1717155255, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0xb7, 0x4, 0x78, 0x64, 0xfd, 0x5, 0x0, 0x32, 0x46, 0x9e, 0xed, 0xa8, 0x29, 0x1b, 0x23, 0x55, 0x74, 0xc3, 0x9a, 0xa4, 0xb7, 0x7e, 0x72, 0xba, 0x12, 0xeb, 0xb9, 0xa3, 0x2d, 0x2a, 0xdc}}
	return a, nil
}

var _templatesGoFunctionHandlerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8c\x4b\x6e\xc3\x30\x0c\x44\xd7\xe6\x29\x08\xaf\x6c\xc0\xb5\x0f\xd1\x4d\x17\x5d\xa5\x27\x50\x65\x46\x15\xf4\xa1\x42\x52\x40\x82\x20\x77\x2f\x1a\xb7\x40\x57\x33\x0f\x0f\x33\xcd\xf9\xe4\x02\xe1\xb9\x57\x6f\x91\x2b\x40\x2c\x8d\xc5\x70\x82\x61\xf4\x5c\x8d\xae\x36\x02\x0c\xba\x27\x1c\x43\xb4\xaf\xfe\xb9\x7a\x2e\xdb\xc9\x9d\xdd\xed\xe3\xa6\x46\x45\xb7\xbf\xf1\x8b\x51\x69\xd9\x19\xe9\xa6\x7b\xda\x02\x8f\x30\x03\xfc\x58\x7c\x73\x75\xcf\x34\x79\xbb\xe2\xef\xeb\xfa\x7a\xe4\x82\x99\x43\x20\x41\xdd\xd3\xfa\xfe\xac\x0b\x0a\x5d\x9e\x7c\xa2\x4b\x27\xb5\x19\xa7\x83\xb4\x71\x55\x5a\x90\x44\x58\x66\xbc\x03\x0c\x42\xd6\xa5\xe2\x7f\x7f\x7f\x2c\x58\x63\x86\x07\x7c\x07\x00\x00\xff\xff\x55\xa4\x91\xb2\xdf\x00\x00\x00")

func templatesGoFunctionHandlerGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionHandlerGo,
		"templates/go/function/handler.go",
	)
}

func templatesGoFunctionHandlerGo() (*asset, error) {
	bytes, err := templatesGoFunctionHandlerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/handler.go", size: 223, mode: os.FileMode(0644), modTime: time.Unix(1717155349, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x65, 0xa7, 0x97, 0xfc, 0x78, 0x41, 0xdb, 0xf4, 0x25, 0x58, 0xd1, 0x41, 0x3b, 0xb4, 0x88, 0x11, 0xd1, 0xa6, 0x4c, 0x64, 0xaf, 0xcc, 0xbd, 0xf3, 0xf7, 0x2c, 0xbe, 0x1a, 0x29, 0xee, 0x53, 0xb7}}
	return a, nil
}

var _templatesGoGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x41\x6e\xc3\x20\x10\x00\xcf\xe5\x15\x1c\x9b\x03\xb0\x60\x3b\x89\xbf\xd1\xbe\x60\x0d\x1b\x8c\x82\xc1\x05\x1c\xd5\xbf\xaf\xaa\xaa\x95\x52\xc9\xf7\x99\xd1\x2c\xd9\x6d\x91\xb8\xcf\xe2\xb6\x25\xdb\x42\x4e\x62\xc6\xe4\x22\x15\xc6\x7c\xe6\x5a\x1a\xc3\x58\xa1\x8f\x2d\x14\xe2\xaf\xec\xc5\x87\x36\x6f\x93\xb4\x79\x51\x6f\x78\xc3\xfd\x7d\xaf\x8d\x96\xaa\x28\x3d\x16\x5f\xc4\x7a\xf7\x95\x3f\x40\x82\x04\x61\xc0\xf4\xd0\xc1\x05\xba\x01\x86\x51\xe8\xab\x41\x8d\xe8\x46\xb8\x5e\x8f\x3b\x7f\x17\x8d\x96\x35\x62\xa3\xaa\xaa\xbb\x2b\x9f\x9f\xaa\x43\xa7\xb5\xee\xa0\xbf\x08\x47\x67\x3d\x8c\xfd\x99\xec\x38\xb1\xd3\xd1\xea\x8c\x75\x0e\x36\x97\x55\xf9\x2c\x6c\x24\x4c\x73\x6b\xeb\x77\x72\x90\x86\x2b\xc5\x43\x72\xa1\x90\x6d\xc7\x56\xa1\x56\x76\x9c\x22\xfd\x9a\x17\xd9\xff\x33\x73\xc4\xe4\x65\x2e\x5e\x7d\xaa\xba\x27\xfb\x43\xc1\x13\x75\x62\x5f\x01\x00\x00\xff\xff\x0d\xec\xc3\xc6\x72\x01\x00\x00")

func templatesGoGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoMod,
		"templates/go/go.mod",
	)
}

func templatesGoGoMod() (*asset, error) {
	bytes, err := templatesGoGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.mod", size: 370, mode: os.FileMode(0644), modTime: time.Unix(1717155250, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0x92, 0xb6, 0xf7, 0x5b, 0xfa, 0x83, 0xe0, 0xeb, 0x3d, 0xab, 0xe7, 0x97, 0x40, 0x3f, 0x6d, 0xe8, 0x23, 0x53, 0x95, 0x48, 0x72, 0x79, 0x20, 0x11, 0x96, 0x14, 0xcb, 0xc9, 0x72, 0xbc, 0x65}}
	return a, nil
}

var _templatesGoGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd3\xcb\xce\xa2\x48\x18\xc6\xf1\x7d\x5f\x45\xef\x8d\x52\xc8\x79\x92\x5e\x28\x8a\x1c\x54\x40\x10\xc1\x1d\x50\x9c\x0f\x05\x54\xa9\xe0\xd5\x4f\xec\xce\x24\xba\xf8\x66\x7a\x92\x99\x1b\xf8\xbd\x7f\x9e\x50\x59\x41\xf2\x5b\xb4\x88\x51\x43\x9d\xc2\x34\x9c\x9c\x09\x93\xa4\xc1\x54\xd2\xde\x9b\x6c\x98\x77\x55\x86\xbf\xdf\xc1\x02\x2c\xc0\x7c\x09\x96\x2c\x60\x80\x00\x18\x0e\x70\xd2\x9c\x16\x97\x21\x1d\x86\x50\x02\xa2\xf8\x3d\xa7\xff\xa8\x37\xe0\x3e\xf2\xdc\xaa\xef\x37\x5e\xa7\x6c\xc7\xd9\xa9\xe6\x15\x9d\x36\x27\xaa\xf5\x67\x6b\x95\x72\xd5\xbb\xbb\xf7\x5b\x89\x93\x0f\x3f\xbe\xfd\x37\x67\xa9\x0c\x2d\x1a\x04\x5f\xd7\xad\xb2\x32\xa4\x06\x40\x7d\x47\x23\xa1\xf5\x1a\x72\x70\xcf\x49\x6c\xd6\xc1\xf3\xe4\x95\xbe\x30\xab\x2f\x75\x54\xc9\xcd\x8c\x34\xab\xaf\xaf\xa7\xb7\x36\x26\x05\x6a\xe7\x24\x69\xba\x3a\x24\x09\xa6\x30\xac\xa8\x0c\x7d\xb4\x70\x0c\x4d\xd3\x0c\x60\x85\x39\x4c\x78\x9a\x93\x58\x3e\x89\xa5\xe8\x15\x01\x29\x95\xe0\xd6\x38\xc4\x1b\xdb\x92\xaf\xaa\x59\x36\x45\x7a\x1d\xab\xb5\x34\xf3\x35\x41\x54\x72\x15\xda\x68\xa0\xa1\xc1\x36\xf6\xff\x13\xf1\x36\x08\x53\x97\xea\x81\x37\xab\x71\x0f\xf5\xb5\x08\xae\x4f\x6c\x63\x0b\x27\x7a\x36\x7a\xc4\x95\xcc\x07\xeb\xf4\x9d\x7f\x5d\x75\xe6\x6a\xfb\xd1\x02\xc3\x7b\x12\x67\x39\x95\xa1\x39\xee\x92\xc7\xf7\x3b\xbd\xa0\x17\xf4\x1b\xac\x0b\x81\x18\xc4\x97\xe5\xb1\xc8\x71\xd6\x78\x88\x6a\xee\x4c\xbd\x7a\xd4\x14\xae\xcc\x23\x5b\xec\xd5\xd2\xc1\xda\x2c\xe6\x54\x46\xfc\x80\x33\x84\xb2\x3a\x79\xb9\x71\xd3\xbd\xbe\x85\x5f\x80\x97\x87\xd2\x29\x1f\xef\x7e\x7c\xcd\x0f\xf8\xcc\xdd\xea\x48\x29\xf6\x46\x4d\xf9\x6b\xa5\xdf\xd2\x3b\xa7\x17\x42\x72\x13\xc9\xaa\x71\x4f\xda\x3f\x7a\x6f\x99\xb4\x00\xcf\x75\xb5\x36\xc3\x4a\x07\xb3\x4d\x35\x38\xce\xb1\x94\x2b\xad\x1c\x1d\x3e\x52\xa4\x67\xc4\x24\x75\x93\x1c\x77\x5a\x89\x82\x0f\x36\x0f\x71\x5e\xc4\x68\xe8\x7e\xca\x75\x12\xb6\x39\x21\x3f\x7d\x6e\xb1\x7c\xc1\x80\xe1\x14\x23\xd0\x2e\x65\x73\xde\x4f\xca\x69\x6d\x58\x58\x74\xd7\x36\x2a\xc0\xc8\x43\x69\xc7\x8e\xb1\xd4\x26\xbe\x7e\x59\x5d\xed\xdf\x87\xdf\xc2\x2b\x93\x0a\x36\xb5\x25\xee\x69\x86\xe5\xb7\xbc\x83\xe0\x63\x66\x0d\xdd\xda\xf1\x58\xca\x41\xa3\xec\xef\x02\x7e\xdd\x1f\x15\x97\x15\xbf\xf6\xf3\xb8\x46\xd9\xcb\x96\x7e\x45\xcb\x3b\xde\xdd\x72\xaa\x44\xe9\x3e\x56\x2e\xba\x9c\x22\xcd\xeb\x0c\x45\xab\x94\x84\x9f\xf0\xf6\xa6\x16\x43\xc7\x6e\x46\x19\xab\xda\xef\xa1\x6f\xc1\x9c\x7c\x9e\x85\xd9\xbe\x98\x18\x5d\x38\x0a\x76\xa9\x1a\x1c\x04\x9c\x31\xee\xf0\xcd\x2f\xec\xfd\x50\xae\x80\x2a\x84\x71\xb9\xac\xff\x66\x90\x21\x21\xc3\x14\x46\x75\xf2\xd7\x28\xc2\x82\x7d\xe1\x57\x3b\xf3\x60\xe7\xc2\xd5\x5e\xb8\x74\x07\xed\xb1\x7f\xca\x69\x14\xd6\x66\xec\x9c\x61\xb5\xb9\xb6\xdd\xf9\xce\x50\xb3\xf5\xf8\x54\x56\xff\x0e\x7f\xff\xa3\x27\x2a\xb3\x82\x15\x2c\xfb\x34\xbd\x52\x93\xb2\x93\x15\x6f\x09\x91\xc6\x3d\x4a\xa2\xd2\xc9\xe3\x20\xdd\xc4\x22\xf0\x4a\xe2\x7f\x2e\xde\x35\xc9\x33\x1c\xe0\xeb\x02\x2c\xd2\xb4\x2e\xa2\xd7\x6b\x01\x1f\xbf\x61\x61\xa8\x82\x50\x21\x25\x0f\x46\xd7\xa0\xbb\xf8\xd4\x56\x46\xd5\xa7\x2e\xca\x70\x94\x09\xd9\xf5\xe8\x05\x2c\x3e\x6d\x82\x2b\xc5\x7e\xd8\x98\x0c\x09\x89\xf3\x81\x22\x09\x26\x45\x3a\xbd\xe4\xe5\xc7\xec\xa1\x68\xb6\xa7\xb8\x88\xd8\x36\xcf\x81\x19\x9e\x56\xde\x2c\x20\x58\x14\x2a\x03\xf6\xc0\xb2\x84\xce\x4f\x27\xbe\xda\x54\x67\x0f\xff\xf8\x96\xa1\x3a\x6c\xb3\x05\x1a\x32\x6a\xa4\xf0\xd4\xc6\xbf\x56\xf8\xf9\x00\x03\xac\x35\xa9\xb3\x46\x96\x64\x5b\xc1\x1e\x8c\x93\xa1\x5b\x3d\xc8\xe2\x50\x87\x3b\x66\xd0\x5a\xd4\x8f\xee\x25\x4a\xed\x9b\x74\xf8\x1a\x7a\x0b\x93\x9f\x64\xf6\x30\x6e\x74\x26\x4f\x5b\x65\x73\x26\x2d\x28\x77\x9c\xed\xdd\x3b\x9d\x1f\x9e\x5e\x3f\x70\xa1\x3f\x11\x09\x0e\x76\x5a\xfd\xf8\xf6\x67\x00\x00\x00\xff\xff\xd5\x79\x43\x5e\x80\x06\x00\x00")

func templatesGoGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoSum,
		"templates/go/go.sum",
	)
}

func templatesGoGoSum() (*asset, error) {
	bytes, err := templatesGoGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.sum", size: 1664, mode: os.FileMode(0644), modTime: time.Unix(1717155250, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6, 0xb7, 0x4, 0x78, 0x64, 0xfd, 0x5, 0x0, 0x32, 0x46, 0x9e, 0xed, 0xa8, 0x29, 0x1b, 0x23, 0x55, 0x74, 0xc3, 0x9a, 0xa4, 0xb7, 0x7e, 0x72, 0xba, 0x12, 0xeb, 0xb9, 0xa3, 0x2d, 0x2a, 0xdc}}
	return a, nil
}

var _templatesGoGoWork = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x57\x30\xd4\x33\x32\xd2\x33\xe0\xe2\x2a\x2d\x4e\x55\xd0\xe0\xe2\xd4\xe3\xe2\xd4\xd3\x4f\x2b\xcd\x4b\x2e\xc9\xcc\xcf\xe3\xd2\xe4\x02\x04\x00\x00\xff\xff\xb1\x6f\xc0\x55\x22\x00\x00\x00")

func templatesGoGoWorkBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWork,
		"templates/go/go.work",
	)
}

func templatesGoGoWork() (*asset, error) {
	bytes, err := templatesGoGoWorkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work", size: 34, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x5d, 0xcc, 0xa0, 0xd4, 0x72, 0x56, 0x8a, 0xd, 0x3e, 0x3, 0x38, 0xf4, 0xc8, 0x86, 0xa8, 0xe3, 0x66, 0x8f, 0x83, 0x5f, 0x4f, 0x64, 0xdf, 0x79, 0xe6, 0x99, 0xd3, 0x32, 0x58, 0x29, 0xff}}
	return a, nil
}

var _templatesGoGoWorkSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x2c\xc9\x28\x4d\xd2\x4b\xce\xcf\xd5\x4f\xcf\xcf\x4f\xcf\x49\xd5\x4f\xcf\xd7\x4d\xce\x2d\x50\x28\x33\xd0\x33\xd3\x33\xd0\x4f\xcf\xd7\xcb\xcd\x4f\x51\xc8\x30\xb4\x32\x34\x4f\x09\xcd\xc9\x76\xf2\x4f\xcc\xf6\x32\xd0\x76\xc9\x2e\x0a\x0e\xf6\xcb\x72\xce\xf6\xcc\xaa\x08\x36\x4b\x72\xb3\xac\x4a\x32\x4e\xcd\xc9\x4d\xf5\x73\xf7\xcc\xca\x8f\xb4\xe5\x02\x04\x00\x00\xff\xff\xc2\xbe\xd9\x45\x57\x00\x00\x00")

func templatesGoGoWorkSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWorkSum,
		"templates/go/go.work.sum",
	)
}

func templatesGoGoWorkSum() (*asset, error) {
	bytes, err := templatesGoGoWorkSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work.sum", size: 87, mode: os.FileMode(0644), modTime: time.Unix(1712835135, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6f, 0x74, 0xbe, 0x5c, 0xdb, 0x8e, 0x67, 0x84, 0xb8, 0x19, 0xaf, 0x6d, 0xdb, 0x7b, 0x91, 0xfd, 0xc0, 0xa1, 0x1c, 0xcd, 0x3, 0xd2, 0xe0, 0x72, 0xeb, 0xb7, 0xff, 0xfb, 0x7c, 0x85, 0xa5, 0x79}}
	return a, nil
}

var _templatesGoMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x51\x6b\xdb\x3c\x14\x7d\xd6\xfd\x15\xf7\xf3\x43\xb1\x3f\x52\xab\xdb\x53\x09\xa4\x30\x68\xb7\x95\xb2\xb5\x34\xa5\x7d\x1c\x8a\x7d\xed\x88\xc8\x92\x91\xae\xd3\x96\x91\xff\x3e\x64\xc7\xa9\x53\xe8\x60\x2f\x41\xba\x39\xe7\xdc\x73\xcf\x95\xa5\x44\x55\xaa\x96\xa9\xc4\xca\xbb\x06\xd7\xcc\x6d\x98\x4b\x59\x6b\x5e\x77\xab\xbc\x70\x8d\x74\x2d\xd9\x4a\xa9\x20\x6b\x67\x94\xad\x4f\x23\xe4\x94\xa9\x69\x8d\x62\x92\x2b\xe3\x56\xb2\x51\x81\xc9\xcb\x43\x71\x82\x94\x8d\xd2\x36\xaf\x1d\x48\x89\xb7\x5e\xd7\xda\x2a\x83\x46\x17\x64\x03\xcd\xf1\xc7\xf5\x03\xb4\xaa\xd8\xa8\x9a\x30\x02\x01\x74\xd3\x3a\xcf\x98\x82\x48\xaa\x86\x13\x10\x89\x0b\xf1\x37\xb0\x2f\x9c\xdd\xc6\x23\xeb\x86\x12\x00\x91\xac\x95\x2d\x0d\x79\x59\x75\xb6\x60\xed\x6c\x2c\x86\x72\x83\xc9\xc4\xfd\xbd\xaa\xd4\xeb\xf2\x35\x30\x35\xe1\x00\x3c\xd8\x0f\x32\x94\x1b\x59\xbb\x5e\xee\x23\x16\xd9\x6d\x53\xfb\xd3\x76\x53\x07\x19\x74\x6d\x95\x09\x09\x64\x00\x85\xb3\x81\xb1\xa4\x4a\x75\x86\x1f\x74\x43\xae\x63\x5c\xe0\xa7\x33\xfc\x1f\xa3\xc7\x7c\x49\x85\xb3\x25\x40\x6c\xdb\x8f\x97\x66\xf8\x1b\x84\x27\x55\x8e\xf0\xf9\x02\x5b\xe5\x03\x5d\x5b\xbe\xf5\x97\x9d\x57\xd1\xde\xa3\x32\x1d\xa5\x2e\xe4\xdf\x88\xc9\x6e\xd3\x24\x32\x7e\xf1\x40\x49\xb2\xd9\xbb\x9e\x19\x88\x67\xaf\x99\xfe\x4d\xb3\xa7\xfc\x4d\x14\xc4\x18\xd7\xf2\xf2\x66\x86\xe4\x7d\x54\x0e\xe5\x26\xff\x49\xcf\x5f\xdf\xfe\x4a\x41\xc4\xd4\xf3\x27\xcd\xeb\xfb\xb7\xd1\xd2\xc9\x98\xd9\x6c\x82\x79\x9a\x78\x4d\xa7\xc6\x8f\x50\x77\xce\x73\x7a\x7e\x76\xfe\xf9\xa8\xfa\x7d\xd8\x78\x3a\x3a\xcb\x87\x42\x96\x81\xd0\x55\x6f\xf1\xbf\x05\x5a\x6d\x62\xcc\xa2\x6a\x38\xbf\xf3\xda\xb2\xb1\x69\x72\xe5\xbd\xf3\x58\x78\x52\xac\x6d\x8d\xa3\x00\x2e\x2f\x6f\xe6\x98\xf4\xe3\x65\x20\x84\x27\xee\xbc\x05\xb1\x03\x10\x05\xbf\xf4\x13\x0f\x2b\xcf\x97\xc4\x5d\xbb\xec\x2f\xa3\x8d\x77\x21\xe5\xf7\x9d\x4d\x0b\x7e\xc9\x60\xb7\x5f\xfa\x47\x7b\xd8\x2a\x83\x81\xbd\xb6\xf5\x0c\x2b\x65\xcc\x4a\x15\x9b\xe1\xcd\x8c\xb8\xec\xf8\x1a\x07\xd2\x15\x1a\xb2\x91\x9b\xe1\x05\x9e\xf5\x33\xf6\x0d\xca\x47\x65\x66\x43\xaf\xab\xfd\x96\x86\xaf\x25\xff\xc2\x4e\xf7\x04\x10\x91\x7e\x80\x2c\x86\x94\x4e\x4e\xf0\x20\x80\x17\x8b\xbd\xe6\x3e\x84\x63\x03\xe9\x01\x98\xbd\x7b\xde\x42\xec\x86\xbc\xca\x3d\x74\x86\xe3\x69\xef\xa6\x47\xdf\x45\xfe\x41\x6d\xf0\xa4\xab\x23\xe8\x64\x77\x7b\x0b\x63\x36\xb1\xc1\x58\x1b\x19\xb0\x83\x3f\x01\x00\x00\xff\xff\xf3\xe9\xf8\x3d\xbe\x04\x00\x00")

func templatesGoMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoMainGo,
		"templates/go/main.go",
	)
}

func templatesGoMainGo() (*asset, error) {
	bytes, err := templatesGoMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/main.go", size: 1214, mode: os.FileMode(0644), modTime: time.Unix(1717151156, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x8b, 0x1f, 0xb1, 0x1b, 0x9f, 0xe7, 0x78, 0x91, 0x7d, 0xf9, 0x2c, 0x19, 0xf5, 0xf3, 0xa9, 0xa4, 0x7e, 0x4b, 0x2d, 0x9f, 0x77, 0x79, 0x12, 0xfe, 0xda, 0xf3, 0xa9, 0xd2, 0xa6, 0xab, 0x9f}}
	return a, nil
}

var _templatesPythonDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x51\x6f\xdb\x36\x17\x7d\xfe\xf8\x2b\x2e\x54\xa3\xf8\xb6\x81\xa2\xbd\x2d\x1b\x66\x40\x0f\xaa\xad\xc4\x41\x12\xcb\x90\xd5\x76\x41\x17\x08\xb4\x44\x59\x44\x28\x91\x25\xa9\xc4\x82\x9b\xff\x3e\x88\x4a\xec\xb4\x35\x06\xd4\x0f\x86\x78\xcf\x21\xef\xb9\xe7\x5e\x32\x4c\x2e\x60\x75\x9b\x2e\xe2\x65\xf6\x21\x4a\xd6\x97\xf1\x32\xf8\xcd\x9f\x4c\x50\x1f\x8f\xcf\xb3\x8f\x61\x3a\x5b\xcc\xe3\x8b\x03\x38\xf6\xff\xf2\x27\x67\x03\xbc\xce\xde\x85\xeb\x28\x30\x82\xd7\x78\xd3\x0a\x61\x58\xc7\x10\x42\xe7\x49\x7c\x03\x18\x2b\x41\x6d\x29\x75\x1d\x8c\xf6\x69\x98\x5c\x44\xe9\xea\x3a\x4c\xcf\xe3\xe4\x66\x8a\x05\x6f\xda\x1d\xa1\x75\xf1\xc7\xef\x4f\xb0\xad\x72\xed\x73\x49\xa4\x62\x4d\x49\xa9\x21\xb2\xc4\x8f\xd4\xe6\x55\x21\xb7\xd3\xd1\xfe\x84\x88\x27\xa0\x06\x5e\x28\x3f\x9a\x4e\x75\xb6\x92\xcd\x74\xb4\xff\xba\xea\x27\x3c\xda\x3f\x17\xe4\x8e\xdf\xb4\x5c\x14\x08\xcd\xe2\xd5\x2d\x60\x5c\x6a\x59\x07\x2f\x19\x81\x94\xc7\xcf\xd6\x68\xb2\xe1\xcd\x31\x84\x92\xf7\x4b\xc8\xab\x5a\x16\xf0\xcb\xee\x14\x8e\xde\x40\x28\x2c\xd3\x0d\xb5\xfc\x81\x89\x0e\x5a\xc3\x20\x9c\xcf\xa1\xb2\x56\x99\x29\x21\xf0\xff\xc7\x8a\xe7\x15\x3c\x72\x21\xa0\x91\x16\x36\x0c\x72\x9a\x57\xac\x80\x4d\x07\x73\x99\xdf\x33\x3d\xe8\x63\xfa\x27\xd7\x89\x70\x3e\xbf\x4c\x2f\xe3\x65\x78\x9d\xad\xc2\xd9\x55\x78\x11\x05\x9e\xe7\x84\xb0\xbc\x92\xe0\x9d\xc0\x47\xfb\xef\x83\x4f\xc3\x1e\xaa\x2c\xde\x32\x0b\xf8\x73\x07\xad\x2a\xa8\x65\xf0\x0f\x02\x00\x78\xfb\xf6\x2b\x8c\x37\xc6\x52\x21\xe0\xe4\x51\xc7\x2d\xba\x06\xac\x4b\x20\x0f\x54\x13\xc1\x37\x84\x2a\x4b\x04\x37\xd6\x90\x9f\x9d\x17\x45\x01\x8d\x6c\x40\x4b\x69\x7b\x2b\xf4\xa0\xa1\x28\xb6\x5a\xb6\x0a\x30\x36\x9d\xb1\xac\x06\xaa\x94\x13\x50\x14\x3d\xc9\x2d\x0f\x18\xc6\xbc\x19\xe8\x54\xa9\xe7\x06\xc8\xc7\xc6\x91\x48\x25\x6b\x46\xfa\x38\x7a\xbf\x8e\x12\xc7\x40\xd1\xf2\x03\xac\xc2\x74\x11\x8c\xfa\xff\xe9\x81\x43\x7c\x21\x73\x2a\xfa\x8e\x21\xf4\x31\x4e\xae\xe6\x97\xc9\xf1\x04\x82\x9c\xdb\xab\x24\xfe\xfb\xb6\x37\xf8\x65\x3a\x5c\xb2\x80\x2a\x35\xed\x13\xd6\x94\x37\xbe\xea\xe0\xf8\xf3\x4f\x13\x35\xfb\xdc\x72\xcd\x6a\xd6\x58\xe3\xdb\x9d\x75\x4c\xa7\xb1\xf7\xc2\x95\xa1\xb8\x3a\xd8\x8c\x71\x23\xb1\x9b\x03\x5c\x70\xdd\x4f\xbc\x96\xbb\x2e\x18\xed\x9d\x9e\x27\xc0\xfa\xbb\x13\x5f\x55\xdc\x9f\x56\xdf\xbb\x8d\x0a\xca\xb6\xc9\x2d\x97\x8d\x8b\x5a\xd9\xe6\x15\xf8\xe4\x25\x48\xb2\x8c\x37\xdc\x66\x99\xaf\xba\x13\x1e\x1c\x68\xa7\x8b\x3a\xc0\xdf\x6a\xf9\x9f\xff\xe3\x15\x61\xd7\xea\x53\x85\xbd\xf2\xe9\xbf\x65\x38\x53\x87\x37\xc2\x5d\x99\xfe\x6e\x5b\x66\xec\xd0\xca\x34\x5a\xa7\xd9\x2c\xbe\xb9\x09\x97\xf3\xc0\xca\xdd\x31\x18\x2d\xc3\x77\xd7\xd1\x3c\x28\xa9\x30\x6c\xb0\xef\x13\x78\xa3\xd7\x98\x07\x01\x78\x0e\xf7\xe0\xae\x9f\xcd\xe1\xb2\x99\x7b\xae\x14\x6f\xb6\x2e\x8d\xf1\xe0\xcb\x17\x60\x0f\x54\xbc\x6c\x7e\xce\xe6\xa1\x6f\x55\x99\x8a\xab\x93\x33\x77\x6c\xe2\x1b\x58\x33\x0b\xad\x82\x57\x4f\x24\x94\x52\xc3\x22\x4d\x57\x50\xcb\x82\xb9\xc9\x2e\x95\x96\x39\x33\x26\xf0\x86\xc7\x0e\x78\x53\xb0\x9d\xaf\x3a\xcf\xc1\xf9\x96\x67\x15\xa3\x05\xd3\x26\xf0\xac\x6e\xd9\x10\xee\xb7\x07\x5e\xff\x08\x0d\xeb\x56\x19\xab\x19\xad\xb3\x56\x8b\x21\x3e\x25\x64\xf2\xeb\x9f\xfe\xd8\x1f\xfb\x93\xe9\xd9\x78\x3c\x1e\x88\x9a\xd1\xa2\xcb\x14\xb5\x55\xe0\x11\x4c\xdc\xd2\x43\x68\x11\x85\xd7\xe9\x62\xb6\x88\x66\x57\xee\x82\x5a\xa6\x1f\xa8\x08\xce\x0c\xcc\x6e\xe6\xf0\x09\x30\x03\x62\xeb\xe1\xca\xdd\xc3\x9d\xf3\x69\xc7\x2d\x4c\x10\x72\x04\xef\xf0\x64\x7a\x77\xe8\xdf\x00\x00\x00\xff\xff\xed\x40\xcd\x3e\xa7\x06\x00\x00")

func templatesPythonDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonDockerfile,
		"templates/python/Dockerfile",
	)
}

func templatesPythonDockerfile() (*asset, error) {
	bytes, err := templatesPythonDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/Dockerfile", size: 1703, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x98, 0xc, 0xe6, 0xda, 0x76, 0x43, 0x34, 0x23, 0xc7, 0x3b, 0xe7, 0xb0, 0x50, 0xf, 0xee, 0xc8, 0x3c, 0x34, 0x7e, 0x7, 0x76, 0x9e, 0x62, 0xeb, 0xaf, 0xc5, 0x43, 0x88, 0xc8, 0x19, 0x12}}
	return a, nil
}

var _templatesPythonFunction__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunction__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunction__init__Py,
		"templates/python/function/__init__.py",
	)
}

func templatesPythonFunction__init__Py() (*asset, error) {
	bytes, err := templatesPythonFunction__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/__init__.py", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var _templatesPythonFunctionHandlerPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\x2b\xca\xcf\x55\x28\xa9\x2c\xc8\xcc\x4b\x57\xc8\xcc\x2d\xc8\x2f\x2a\x51\xd0\xe2\x02\x0b\xe6\xe4\xa7\xa7\x23\x89\xfa\xe4\xa7\xa7\xa7\x16\x71\x71\xa5\xa4\xa6\x29\x64\x24\xe6\xa5\xe4\xa4\x6a\xe4\x80\x85\xac\xa0\x52\x3a\x45\xa9\x85\xa5\xa9\xc5\x25\x56\x0a\x2e\x99\xc9\x25\xd1\xc5\x25\x45\x3a\x0a\x8e\x79\x95\xb1\x9a\x0a\xba\x76\x68\x42\x56\x5c\x0a\x0a\x0a\x0a\x45\xa9\x25\xa5\x45\x79\x0a\xd5\xb5\x5c\x80\x00\x00\x00\xff\xff\x29\xf4\x2f\xce\x85\x00\x00\x00")

func templatesPythonFunctionHandlerPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionHandlerPy,
		"templates/python/function/handler.py",
	)
}

func templatesPythonFunctionHandlerPy() (*asset, error) {
	bytes, err := templatesPythonFunctionHandlerPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/handler.py", size: 133, mode: os.FileMode(0644), modTime: time.Unix(1717155363, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2d, 0x58, 0x0, 0xfd, 0x81, 0x7f, 0x6, 0xdd, 0x43, 0xd6, 0x88, 0x2, 0xd4, 0x1, 0x5b, 0xae, 0xd0, 0xa7, 0xd2, 0x40, 0xde, 0x74, 0xd2, 0x6d, 0x5c, 0xf8, 0xfc, 0xac, 0x97, 0xf2, 0x80, 0xea}}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxt,
		"templates/python/function/requirements.txt",
	)
}

func templatesPythonFunctionRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxtTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x56\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xd0\xad\xad\xe5\xaa\xae\x86\xa9\x02\x73\x74\x15\x52\xf3\x52\x6a\x6b\xb9\x00\x01\x00\x00\xff\xff\x86\x7b\x02\x07\x43\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxtTmpl,
		"templates/python/function/requirements.txt.tmpl",
	)
}

func templatesPythonFunctionRequirementsTxtTmpl() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt.tmpl", size: 67, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0x49, 0xd, 0x2c, 0x62, 0x37, 0xb9, 0x46, 0xc4, 0x3a, 0xf7, 0x24, 0x1f, 0x7d, 0x6, 0x4e, 0x31, 0xce, 0xda, 0xcb, 0xf0, 0xe7, 0x5, 0x55, 0xe0, 0x2f, 0x8, 0x1c, 0x8f, 0xde, 0x41, 0x84}}
	return a, nil
}

var _templatesPythonMainPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\x41\x0a\x83\x30\x14\x84\xe1\xfd\x3b\xc5\xd4\x6e\xda\x8d\xee\x0b\x9e\x65\x48\x6b\x82\x41\xf3\x22\x2f\x51\xf1\xf6\xa5\x68\x57\xc3\xc0\x0f\xdf\xfd\xd6\xad\xc5\xba\x77\xd4\xce\xeb\x86\xe5\xa8\x63\x56\x91\x60\x39\x21\xac\xfa\xa9\x31\x2b\x62\x5a\xb2\x55\x8c\x4e\x87\xd9\x9b\x5c\xf7\x6c\x59\x86\x89\xe6\x82\x3b\xb8\x67\x9b\xc2\x9c\x77\xb8\x82\x32\x4c\x22\x31\x80\x54\x97\x3c\x89\xbe\x47\x43\x26\x17\x95\x6c\x5e\x02\xe0\xd7\xb4\xc5\xdb\xe6\xf9\x97\x1e\x17\xd1\x9e\xfb\x94\x6f\x00\x00\x00\xff\xff\x3d\x62\xa4\x64\x9f\x00\x00\x00")

func templatesPythonMainPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonMainPy,
		"templates/python/main.py",
	)
}

func templatesPythonMainPy() (*asset, error) {
	bytes, err := templatesPythonMainPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/main.py", size: 159, mode: os.FileMode(0644), modTime: time.Unix(1710853495, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc7, 0x2e, 0x30, 0x84, 0xaa, 0x3a, 0x52, 0xb, 0x1a, 0x36, 0x1a, 0xf3, 0x92, 0x90, 0x68, 0xef, 0x69, 0x46, 0x54, 0x49, 0x6b, 0xb, 0x14, 0xb7, 0xb4, 0xb4, 0xba, 0xf3, 0xef, 0xbe, 0xe4, 0x38}}
	return a, nil
}

var _templatesPythonRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcb\x49\x2c\xce\xe6\x2a\x4f\xcc\x2c\x29\x4a\x2d\x2e\xe6\x2a\xc9\xaf\xb0\xb5\x35\xd6\xd3\xe2\x2a\xa8\x2c\xc9\xc8\xcf\x8b\x2f\x4e\xc9\x8e\x2f\x4a\x4c\x4b\xac\x8c\x2f\xcf\x2f\xca\x4e\xcb\xc9\x2f\xb7\xb3\x35\xd0\x33\xd0\x33\x34\x01\x04\x00\x00\xff\xff\xeb\x82\xf1\x2b\x39\x00\x00\x00")

func templatesPythonRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonRequirementsTxt,
		"templates/python/requirements.txt",
	)
}

func templatesPythonRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/requirements.txt", size: 57, mode: os.FileMode(0644), modTime: time.Unix(1717155192, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x41, 0x49, 0x41, 0x43, 0xc8, 0xd6, 0xf5, 0x16, 0xf9, 0x38, 0x62, 0x57, 0x9f, 0x8b, 0xe4, 0xdf, 0xfb, 0x34, 0xe4, 0xa2, 0xe6, 0x85, 0x21, 0xd7, 0x92, 0x80, 0x0, 0xf5, 0x32, 0x7e, 0x4d, 0xe}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go/Dockerfile":                         templatesGoDockerfile,
	"templates/go/function/go.mod":                    templatesGoFunctionGoMod,
	"templates/go/function/go.mod.tmpl":               templatesGoFunctionGoModTmpl,
	"templates/go/function/go.sum":                    templatesGoFunctionGoSum,
	"templates/go/function/handler.go":                templatesGoFunctionHandlerGo,
	"templates/go/go.mod":                             templatesGoGoMod,
	"templates/go/go.sum":                             templatesGoGoSum,
	"templates/go/go.work":                            templatesGoGoWork,
	"templates/go/go.work.sum":                        templatesGoGoWorkSum,
	"templates/go/main.go":                            templatesGoMainGo,
	"templates/python/Dockerfile":                     templatesPythonDockerfile,
	"templates/python/function/__init__.py":           templatesPythonFunction__init__Py,
	"templates/python/function/handler.py":            templatesPythonFunctionHandlerPy,
	"templates/python/function/requirements.txt":      templatesPythonFunctionRequirementsTxt,
	"templates/python/function/requirements.txt.tmpl": templatesPythonFunctionRequirementsTxtTmpl,
	"templates/python/main.py":                        templatesPythonMainPy,
	"templates/python/requirements.txt":               templatesPythonRequirementsTxt,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": {nil, map[string]*bintree{
		"go": {nil, map[string]*bintree{
			"Dockerfile": {templatesGoDockerfile, map[string]*bintree{}},
			"function": {nil, map[string]*bintree{
				"go.mod":      {templatesGoFunctionGoMod, map[string]*bintree{}},
				"go.mod.tmpl": {templatesGoFunctionGoModTmpl, map[string]*bintree{}},
				"go.sum":      {templatesGoFunctionGoSum, map[string]*bintree{}},
				"handler.go":  {templatesGoFunctionHandlerGo, map[string]*bintree{}},
			}},
			"go.mod":      {templatesGoGoMod, map[string]*bintree{}},
			"go.sum":      {templatesGoGoSum, map[string]*bintree{}},
			"go.work":     {templatesGoGoWork, map[string]*bintree{}},
			"go.work.sum": {templatesGoGoWorkSum, map[string]*bintree{}},
			"main.go":     {templatesGoMainGo, map[string]*bintree{}},
		}},
		"python": {nil, map[string]*bintree{
			"Dockerfile": {templatesPythonDockerfile, map[string]*bintree{}},
			"function": {nil, map[string]*bintree{
				"__init__.py":           {templatesPythonFunction__init__Py, map[string]*bintree{}},
				"handler.py":            {templatesPythonFunctionHandlerPy, map[string]*bintree{}},
				"requirements.txt":      {templatesPythonFunctionRequirementsTxt, map[string]*bintree{}},
				"requirements.txt.tmpl": {templatesPythonFunctionRequirementsTxtTmpl, map[string]*bintree{}},
			}},
			"main.py":          {templatesPythonMainPy, map[string]*bintree{}},
			"requirements.txt": {templatesPythonRequirementsTxt, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
