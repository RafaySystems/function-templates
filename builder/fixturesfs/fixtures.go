// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/go/Dockerfile (1.505kB)
// templates/go/function/go.mod (418B)
// templates/go/function/go.mod.tmpl (84B)
// templates/go/function/go.sum (2.499kB)
// templates/go/function/handler.go (914B)
// templates/go/go.mod (412B)
// templates/go/go.sum (2.499kB)
// templates/go/go.work (34B)
// templates/go/go.work.sum (87B)
// templates/go/main.go (1.399kB)
// templates/python/Dockerfile (1.702kB)
// templates/python/function/__init__.py (0)
// templates/python/function/handler.py (961B)
// templates/python/function/requirements.txt (0)
// templates/python/function/requirements.txt.tmpl (72B)
// templates/python/main.py (159B)
// templates/python/requirements.txt (57B)

package fixturesfs

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesGoDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\x5f\x6f\xdb\xb6\x17\x7d\xe7\xa7\xb8\x50\x8a\xbc\xfc\x40\x32\x4e\xfb\xeb\x32\x03\x02\xe6\xc6\x8e\x57\xcc\x89\x02\x39\xd9\x56\x6c\x83\xc1\x90\x94\x44\x84\x22\x09\x92\x4a\x32\x14\xf9\xee\x03\x25\x2b\xb6\x9b\x66\x7b\xd3\x3d\x57\x3c\xf7\xcf\x39\xf7\xa2\x2c\x2e\x01\x63\xa7\x59\xac\xac\x6f\xf3\x77\x5f\x6f\x66\xe5\x72\x71\x73\xbd\x9a\xdd\x5c\x14\xe5\xe5\x14\x6b\x65\xba\x27\xca\x5a\xf1\xf1\xc3\x33\xd4\x0d\xf7\x44\x59\x6a\x9d\x34\x15\x63\x81\xda\x0a\x3f\xb2\xc8\x1b\x61\xeb\xe9\x09\xf9\x91\x4c\xfe\x0f\x2c\xc0\x08\xa1\xd7\xf4\x9f\x6e\x3f\xaf\xe6\x6f\xb1\x5b\xcd\x4c\x3d\x9d\x90\xd3\x53\xcc\xb4\x53\x46\x26\xb2\xbb\x4e\x69\x81\x50\x79\x7b\x05\xb5\x05\x65\x42\x64\x5a\x03\x7e\x80\x5a\xc5\xa6\xbb\x23\xdc\xb6\x54\x19\xde\x7d\xec\x02\xad\xad\x6a\x9d\xf5\x31\x60\x2f\x1f\x54\x90\x9e\x3e\xbc\xff\x49\xb3\x28\x43\xfc\x96\x60\x28\x46\xac\xaf\xe9\x13\x8d\xd6\xea\x40\x79\x2b\x76\x0c\xe3\x33\x34\x2b\x97\x70\xb8\x94\x1e\x3a\x18\x64\xef\xa7\x62\xbd\x17\xcc\xca\xf3\x9f\x87\xd6\x99\xbb\x07\x8c\x8d\xc5\x9c\xf1\x46\x02\x13\x22\xf5\x8f\xd0\x79\x71\xfd\x05\x30\xae\xbc\x6d\xf3\x71\x6d\x40\xab\xdd\x67\x17\x3c\xbd\x53\x66\x07\xf5\x74\xbc\x69\xad\x80\xff\x3d\x7d\x2f\x3f\x14\x6c\xef\x85\xf2\x80\x1d\xd0\xda\xd2\xe0\x39\x6d\x98\x11\x5a\x7a\xf4\x5b\x51\xfe\x32\xff\x5c\xbe\xc2\x87\x56\x08\x10\x34\xcc\xbc\x2c\x26\x93\xc9\x65\x31\xbf\x5d\x2d\xf2\xcc\x9a\x6c\x0b\x5e\x97\xc5\xef\x5f\xf2\x6c\x0c\x2f\x56\xb3\xe5\x7a\x0c\xcf\x97\xc5\x66\x71\x35\xfb\xb4\x5a\xcc\xf3\x13\xb4\xb8\xfa\xf5\x00\x79\xf7\x75\x2f\x7a\x1e\x15\xdd\xae\x1b\xf0\x23\x90\x43\x68\xd4\x10\x70\xf2\x0e\x8b\x80\xbd\xe4\x9d\x0f\xea\x41\x02\xf6\x2d\xee\x4c\x17\xa4\x00\x42\x09\x19\x5f\x42\xda\x8a\xb0\x8f\x46\x5b\x26\x10\x7a\x73\xd6\xf4\xf7\xb2\x28\xd6\x2f\x7e\x2f\xd6\xcf\xb0\x2c\x92\x5c\x2f\x50\x0a\x9e\xe1\x4f\x04\x00\x89\xb9\xb7\x21\x60\xac\x45\xa5\x59\x1d\x20\xc3\xa9\xe7\x0c\xb0\x85\x2d\x2b\xb9\x53\xa6\xdf\xde\xd1\x11\x5c\x28\xc3\x34\xa8\x96\xd5\xf2\x3b\x47\xf0\xaf\x37\x36\x38\x7f\xfa\x9e\x4c\xce\xc8\x87\x74\x00\xa1\x51\x0e\xa1\x23\x98\x09\x01\xc6\x1a\xf0\xd6\x46\xe8\xd2\x62\x98\x11\xc0\xa5\x8f\xe1\x2d\x8b\x71\x86\x53\x5e\x55\x8a\x27\x37\x6f\xa7\x39\x3e\x4e\xc9\xda\xdb\xce\x01\x5e\x03\x73\x6e\x0b\xf5\xa4\x78\x0d\xb8\xee\x41\xe6\xfa\xba\x6b\xa7\x55\xec\xef\xc6\x77\x3c\x2a\x6b\x02\x04\x0b\xb1\x61\x71\x58\xca\xbd\x8a\xc0\x99\x01\xdf\x19\x38\x86\xbe\x38\x3a\x82\xd8\x48\x70\x49\x41\xdb\x05\xe0\xb6\x6d\x53\xb3\xac\x91\x4c\x80\xad\x20\xaa\x56\x92\x6f\x7c\xda\xd8\x56\xd2\x54\xf7\xa5\x4b\xde\xd8\x47\xd3\xb7\xf2\x92\xdc\xd3\x74\x07\xed\x1f\xd1\xa8\x53\xff\x36\xef\xdf\x1e\x8a\x4f\xf7\xe5\x1a\xb5\xfb\x2f\x8a\x57\x57\x06\x49\xe9\xdb\xf5\xa2\x1c\xb6\x94\xbc\x5e\x39\x6f\xb9\x0c\x21\xcf\xc8\x58\x23\xeb\x13\xad\x15\x32\xcf\x9a\x18\xdd\x10\x77\x2e\x44\x2f\x59\xbb\xe9\xbc\x1e\xf0\x29\xa5\x93\xd3\x1f\xc8\x09\x39\x21\x93\xe9\xd9\xc9\xd9\xe9\xf0\xa3\xf3\xb2\x52\x4f\x1b\x6d\xeb\x90\x67\x15\xd3\x41\x0e\xb8\x97\x4c\xfc\xbd\x71\x2c\x36\x79\x46\x37\xb4\x0f\x33\x84\xce\x2f\xe7\xf0\x47\x46\x76\x4d\x66\x7f\xa1\x7f\x02\x00\x00\xff\xff\x4d\xbe\xd4\x04\xe1\x05\x00\x00")

func templatesGoDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoDockerfile,
		"templates/go/Dockerfile",
	)
}

func templatesGoDockerfile() (*asset, error) {
	bytes, err := templatesGoDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/Dockerfile", size: 1505, mode: os.FileMode(0644), modTime: time.Unix(1712835065, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9c, 0x6c, 0x83, 0x20, 0x4b, 0xa0, 0x97, 0x5c, 0x73, 0x51, 0xd5, 0xaf, 0x19, 0xe8, 0x24, 0xf7, 0xd, 0xa7, 0xaf, 0xa, 0x59, 0xa0, 0xc4, 0xc5, 0x58, 0x1c, 0xb8, 0x5f, 0xa1, 0x53, 0x11, 0x4e}}
	return a, nil
}

var _templatesGoFunctionGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcd\x41\x6e\xeb\x20\x14\x85\xe1\xf1\x63\x15\x0c\x5f\x07\xc0\x85\xc4\x4e\xbc\x8d\x76\x05\x37\x70\x8d\x51\x30\xb8\x80\xad\x7a\xf7\x55\x55\xb5\x95\x2b\x45\xea\xfc\xfc\xdf\x99\xb3\x5b\x23\xf1\x09\x93\x8b\x54\xd4\xb8\x26\xdb\x42\x4e\x8c\xf9\xcc\xb5\x34\x46\x02\x63\x85\x5e\xd7\x50\x88\xfb\xd0\xa6\xf5\x26\x6d\x9e\xd5\x33\x8e\xb8\xbf\xec\xb5\xd1\x5c\xbf\x23\xd1\x68\x5e\x22\x36\xaa\xaa\xba\xbb\xf2\x99\x6f\x20\x41\x82\x30\x60\xce\x70\x31\x3d\x0c\xba\xef\x40\x90\xb1\xc3\x00\xbd\x86\xfe\xec\x7e\xf4\xff\xec\xdf\xa3\x03\x4a\xdb\xec\x8b\x58\xee\xbe\x1e\xc8\x13\x5c\xe0\xd4\x41\x37\x08\x7d\x35\xa8\x11\xdd\x00\xd7\x2b\x57\x8a\x87\xe4\x42\x21\xdb\x0e\xe6\x84\x75\x0a\x36\x97\x45\xf9\x2c\x6c\x24\x4c\x53\x6b\xcb\x87\xd8\x49\xf3\xb7\xaa\x50\x2b\x3b\xde\x22\x7d\x95\x17\x79\x7e\x58\xd6\x65\xd4\x27\x65\xb1\x36\xbe\x69\xd9\x4b\xf8\xb5\xcc\x11\x93\x97\xb9\x78\xf5\xa6\xea\x9e\xec\xa7\x77\x5c\x3d\xb1\xf7\x00\x00\x00\xff\xff\xcc\x14\x5e\xbb\xa2\x01\x00\x00")

func templatesGoFunctionGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoMod,
		"templates/go/function/go.mod",
	)
}

func templatesGoFunctionGoMod() (*asset, error) {
	bytes, err := templatesGoFunctionGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod", size: 418, mode: os.FileMode(0644), modTime: time.Unix(1721985623, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0xd9, 0x55, 0x9d, 0x38, 0x84, 0xd3, 0xbd, 0xf, 0xc3, 0x3f, 0x2d, 0xea, 0x40, 0x48, 0x56, 0x3c, 0x1f, 0x94, 0x84, 0xf7, 0xeb, 0xb9, 0x74, 0x1a, 0x42, 0x31, 0xfa, 0xbd, 0xeb, 0x35, 0xea}}
	return a, nil
}

var _templatesGoFunctionGoModTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x4a\x2d\x2c\xcd\x2c\x4a\x55\xd0\xe0\xaa\xae\xd6\x55\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xa8\xad\xe5\x52\x50\x50\x50\xa8\xae\x86\x29\xac\xad\xe5\x02\xeb\x4e\xcd\x4b\x01\xb1\x35\x01\x01\x00\x00\xff\xff\xe5\x67\xde\x62\x54\x00\x00\x00")

func templatesGoFunctionGoModTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoModTmpl,
		"templates/go/function/go.mod.tmpl",
	)
}

func templatesGoFunctionGoModTmpl() (*asset, error) {
	bytes, err := templatesGoFunctionGoModTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.mod.tmpl", size: 84, mode: os.FileMode(0644), modTime: time.Unix(1721984595, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0x7, 0x35, 0x94, 0x13, 0xd0, 0xeb, 0x9c, 0x14, 0xbd, 0x97, 0x28, 0x1b, 0x7c, 0x89, 0x46, 0x7, 0xd, 0xda, 0x13, 0xbd, 0x4f, 0x65, 0x12, 0x11, 0x59, 0xfe, 0xc9, 0x7f, 0x5c, 0xc1, 0x79}}
	return a, nil
}

var _templatesGoFunctionGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd4\xc9\x8e\xab\xcc\x01\x05\xe0\xfd\xff\x14\x77\x8f\xda\xcc\x53\xa4\xbb\xc0\x03\x66\xf0\x80\x8d\xc1\xc0\xae\x80\x62\x86\x62\x28\x6c\xf0\xd3\x47\xee\x4e\x24\x3b\xd2\xed\x74\x94\xff\x05\xbe\x3a\x75\x54\x75\xd2\x1c\x67\x63\xb8\x88\x50\x4d\x9e\x41\x02\x66\x7b\x1e\x30\xac\x07\x12\x36\xb7\x3a\xed\x3f\xda\x32\x1d\x7e\xdd\xa8\x05\xb5\xa0\x3e\x18\x8a\xe1\x28\x96\x12\x29\x96\xa7\x78\xf9\x83\x96\x18\x40\x03\x10\xcb\x94\x24\xfd\xca\xe8\x7f\x54\x6b\xea\x36\x09\xbc\xd2\x75\x6b\xb7\x55\x37\x13\x71\xae\x04\xd5\xa0\x8f\x33\xd9\x78\xc4\x52\x23\x2f\xda\xed\xb2\xf3\x1a\x99\x5f\xed\x7f\xff\xf5\xf7\x1c\x4b\xa6\x68\x51\xa3\xf8\x79\xba\x55\x94\xa6\x5c\x53\xb1\xb1\xa5\x91\xd8\xb8\x35\xde\x5f\x1c\x18\x1d\x2b\xff\x71\x76\x0b\x4f\x24\xaa\x6b\x15\x96\xab\x9a\xc0\xb5\xf2\xe7\xd3\x93\xb1\x89\x70\x8e\x9a\x0f\x0c\xeb\xb6\x02\x18\x0e\xe4\x10\x97\x64\x8a\xde\xb2\x88\x8c\x40\xc9\xb4\xc0\x53\x1f\x90\x89\x64\x99\x12\x68\x4a\xe0\x3e\x43\xb4\x86\x15\x9c\x50\x24\x3e\xee\xb7\x4d\xbf\xe5\x1e\x95\x35\xdb\xc4\x55\x09\x77\x01\xc0\x67\xab\x8b\x25\x27\xb6\x8e\x8a\x65\xe8\xee\x37\x15\xfc\x3f\x21\x5e\x0a\xa1\x72\x78\x73\x47\xe5\x68\x9b\x9d\x5a\x40\x7a\xe4\xc9\x0b\x11\x3b\xcc\x36\x0a\xae\xe7\x7d\x98\x4f\xb9\xa1\x0f\xce\x4e\xb6\x63\x9d\x7a\xcb\x12\x83\x1b\x8c\xd2\x8c\x4c\xd1\xc7\xd0\xc2\xfb\xaf\x1b\xbd\xa0\x17\xf4\x0b\x6c\x88\xbe\xe4\x47\x57\xe6\x90\x67\x43\x5a\xbb\x88\xac\x6f\x6c\xa5\xdc\x2b\x72\x28\x8f\x07\x2e\xdf\x69\x85\x3d\xe8\x44\xc4\x6b\xac\xf4\x06\x27\x3d\x68\xca\x10\x34\x64\x37\xe6\x51\x89\xe1\x80\x3f\x6d\x6e\x21\x3c\x55\xd1\x2b\x26\xc2\x6d\x1f\x8d\x46\xa0\x65\x03\x8b\xca\x72\x0a\x09\x39\x6d\x3c\x35\xee\xc0\x25\x92\xe7\x48\xd7\x46\x2b\x75\xee\xfa\x53\xf5\x25\x32\xd7\x62\x90\x24\x13\x33\x49\xc4\xf5\x72\xf5\x6a\x67\x35\xba\x8e\x00\x2c\xc7\xa3\xc9\xfd\x43\x7c\x84\xfc\x2d\x74\x50\xbe\x17\xee\xef\x5d\xa4\x08\xa5\x15\x7c\x56\x11\xd5\xed\xb3\x7e\x61\x41\x3d\x3d\x94\xcc\xd9\x74\xf3\xa2\x20\xdb\x0f\x0e\x3f\x56\xa1\x9a\xef\xcc\x8a\xf4\x96\x6a\xb7\xa1\xb7\x76\x27\x02\x3c\x4a\x58\xa9\x2f\x67\xfd\xbf\x7a\x2f\x31\x69\x31\x76\xaa\x72\x79\x04\xa5\x41\x11\xeb\xb2\xb7\xed\x43\xb1\x2a\xf5\x62\xb2\x85\x50\x95\x1f\x21\x0b\xab\x1a\x1e\xb6\x7a\x81\xfc\x37\x36\x03\x43\x96\x47\xa8\x6f\x3f\xe5\x0a\x82\x26\xc3\xf8\xd3\xe7\x17\xcc\xe7\x5b\x60\x79\xd5\xf4\xf5\x6b\x51\x3b\xbb\x59\x3d\x2f\x4d\x6b\x90\x2e\xcb\x13\xca\xa9\x49\x88\xe5\x2d\x37\x45\x72\x03\x3d\xe3\xaa\x04\xa7\x9f\xc3\x2f\xc1\xcb\x23\xe9\xaf\x2b\x4b\xda\xd1\x2c\x27\x6c\x04\x1b\xc5\x77\xc2\xea\xdb\xa5\xed\x72\xa4\x8d\xa6\x95\xb7\xf5\x85\x65\x77\x50\x2f\x9c\xf4\x67\x3f\x8b\x2a\x94\x3e\x6d\xf9\x2b\xf4\x6a\x2b\x5c\x36\xbc\x26\x93\x86\x37\xa8\x57\x63\x95\x20\xdd\x6d\x4d\x55\x2f\x55\x28\xcc\xc3\x66\xd4\xf2\xbe\xe5\xd6\xd3\x6a\xd0\xf4\x9f\xa1\x2f\x81\xf9\x95\x43\x80\x74\x97\xcf\xac\x21\x1e\xc4\x53\xa1\x99\x7c\x4c\xf1\xe6\xb4\x1d\x46\x2f\x3f\xed\xfa\x42\xa1\x34\x11\x44\x05\x53\x7d\x53\x48\x0f\x71\x3f\x83\xb0\x82\xff\x2e\x45\x5c\x70\x4f\x3c\x38\xa5\x6e\xdc\x5e\x62\x65\x27\x5e\xdb\xbd\x7e\xdf\x3d\x56\x49\x08\xaa\x63\x64\x3b\x71\xb9\x0e\x9a\xd6\xb9\xb1\x24\xb1\x9c\x1e\xaa\xf2\xbf\xe1\xaf\x9f\x70\x26\x53\xcb\x57\xe2\xa2\x4b\x92\x80\x9c\xd5\xed\x4a\x75\x99\x18\xe9\xfc\xbd\xc0\x1a\x0d\xef\x7b\x79\x94\x72\xdf\x2d\xb0\xf7\xde\x78\xd9\x93\x6d\x0f\x31\x9e\x9f\x24\xbb\xa0\x9f\x56\x52\x9d\xd7\xdc\xe1\x70\xf7\x15\xa7\x2d\xdb\xcc\x8d\x68\x2d\xc2\xd9\x99\x33\x37\xba\x6a\x08\x7c\x23\xed\xef\x7c\x17\x9f\x1b\x76\xb7\xf9\xd6\x7a\x89\x97\xa1\xcd\x90\xf9\xae\x06\xa6\xfd\xc0\x46\x33\x62\xfd\x26\x42\x23\x1f\x0c\x51\x9e\x8c\x6b\x54\xf5\x77\xcb\x0c\x40\xb3\x65\xa7\xf2\x3f\x49\x0c\x27\xfc\x04\x99\xaf\xaf\xc6\x1f\x26\xca\x07\x54\xd0\xf9\xcc\x9c\xba\xac\x20\x9c\x1e\x78\xec\x35\x9d\x66\x8d\x4e\xe6\x95\x36\x72\x81\xb1\xcc\x5a\x9b\x50\xfc\x6f\xa4\x97\x68\x70\x07\x7b\x91\x61\x2e\xb0\xcc\xb7\xe3\xbe\xcc\xe3\xfd\xb4\x22\xdb\x3d\xc5\x55\xd7\x0d\xec\x81\xe6\x38\xf5\xf2\x2e\x55\x4c\xda\xbf\xdf\xb6\xad\xe1\x03\xf4\xcf\x85\xfd\x88\xf3\x24\xa9\xf2\xf0\x39\x34\xd4\x9b\x9d\x9b\x9a\x28\x96\x48\xcd\xfc\xe9\x62\xd2\x6d\x74\x6e\x4a\xb3\xec\x92\x0b\x4a\x87\x30\x15\xd3\xe0\xe0\xfa\xdc\x70\x5e\xfb\x01\xc9\xbd\xd9\x3d\x4a\x5b\xd8\xb6\x9f\xcb\x90\x37\x18\xf6\x0d\xa8\x9e\xba\xfc\xd5\x81\xc8\x96\x9a\xe4\x10\x86\xd3\x79\x8e\x54\x9d\xc7\xa3\x06\x5d\x0d\x00\xd2\x0e\xac\x3c\x59\x89\xcb\x32\xea\x41\xe0\xc2\x42\x81\xd2\x4f\xd9\x97\xd0\x57\xec\x42\x4f\x9a\xb2\xcb\xf2\x96\x50\x43\x1d\x67\x63\x71\xc7\xcb\xa8\xe3\x4e\xfd\xa3\x23\x13\x03\xf4\xe0\xa0\xba\x07\xa2\x51\x87\x37\x7d\x68\x13\x9a\x25\x23\xf0\xb5\xb8\xff\x5a\xc6\xed\x26\xbf\x68\x9b\x9d\x4a\xdc\xc0\x99\x8f\xb3\x07\xeb\x76\x41\xa2\xda\x8f\xa0\xf0\xc3\x14\x9a\xeb\x76\x39\x9d\x5c\x9b\xdb\xfa\x06\xf5\x3d\xf6\x12\x10\x34\xd1\xa6\x5d\x4e\x77\x63\x7d\x5c\xdb\x57\xd2\xd9\x72\xfd\xba\x57\xba\xdc\x44\x55\x77\x38\x64\xcc\xda\x63\xeb\x52\x12\x22\x25\x46\xef\x26\xee\x21\x8e\xb2\xe7\x43\x18\x70\x9e\xcc\x4f\x99\x79\x9b\x01\x20\x1d\x9b\x73\x94\x87\x5c\x93\x65\xd4\x11\x9c\x15\x97\xf0\xf1\x20\x89\xa5\x19\x77\x94\x65\x89\xad\x97\xcc\x42\xb9\x2e\x1d\xf7\x79\x75\x54\x81\x26\x5d\xa0\x3e\x25\x27\x72\x98\x9b\xe8\xeb\x57\x7e\x5e\xdb\x1f\xf4\x3a\xb1\x97\xc8\x92\x4f\x96\xbf\xa3\xa6\xd9\x34\xac\x8e\x4a\x23\x60\xc4\x5b\xb6\xd7\x1b\xd4\x4d\x97\x6b\x98\x9c\x46\x79\xff\x67\xe8\x25\xd8\xea\x81\x89\xbb\x39\xd2\xe9\x6a\xde\xa8\x6b\x07\x37\x54\xb1\xe5\x4f\xee\xad\x35\x84\xfe\xe1\x76\x3d\x0f\xbc\x19\xcb\x71\x7f\x4a\xca\xdf\x7f\xfd\x33\x00\x00\xff\xff\xd9\xe5\x04\xa9\xc3\x09\x00\x00")

func templatesGoFunctionGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionGoSum,
		"templates/go/function/go.sum",
	)
}

func templatesGoFunctionGoSum() (*asset, error) {
	bytes, err := templatesGoFunctionGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/go.sum", size: 2499, mode: os.FileMode(0644), modTime: time.Unix(1721985700, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf4, 0xea, 0x2, 0x95, 0x95, 0xd2, 0x6d, 0xdd, 0x43, 0xcc, 0x88, 0xa0, 0xae, 0x89, 0x2c, 0x97, 0xac, 0xae, 0x6a, 0xe5, 0xe5, 0x33, 0x6a, 0xc5, 0xb5, 0x4, 0x54, 0xc4, 0x4d, 0xd1, 0x88, 0xc4}}
	return a, nil
}

var _templatesGoFunctionHandlerGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\x5f\x6b\xdb\x30\x10\x7f\x96\x3e\xc5\x71\x4f\x36\xf3\x9c\x16\xc6\x1e\x32\x3a\x18\xa3\xa3\x83\xb1\x87\x76\xb0\x87\x10\x8a\x6a\x9f\x5d\x61\x59\x72\x4e\x52\xdb\x50\xf2\xdd\x87\xe4\x3a\x4b\x60\xec\x25\xb1\xee\xf7\xe7\x7e\x77\x37\xa9\x66\x50\x3d\x41\x17\x6d\x13\xb4\xb3\x52\xea\x71\x72\x1c\xa0\x90\x02\x1b\x67\x03\xbd\x04\x94\x52\xf8\x76\x00\xec\x75\x78\x8c\x0f\x75\xe3\xc6\xd5\xad\xea\xd4\xfe\x6e\xef\x03\x8d\x7e\xb5\x88\xdf\x07\x1a\x27\xa3\x02\xf9\x95\x6f\x87\x55\xef\x50\x96\x52\x26\x14\x6e\x94\x6d\x0d\x15\x4d\x78\x81\x37\xd7\xfa\xeb\xfc\x5f\x81\x71\x7d\x4f\x0c\xbe\x1d\xea\x1f\xf9\xb3\x02\xa6\x5d\x7e\xdf\xd2\x2e\x92\x0f\x25\x14\xf3\xcb\x4f\xce\x7a\xaa\x80\x98\x1d\x97\xf0\x2a\xc5\x2c\xae\xbf\xdb\xce\x15\xc8\xd4\x90\x7e\xa2\x36\xe9\x93\x0e\x2b\x40\xa6\x1d\x66\xc3\x52\x4a\xd1\xb8\x68\x03\x31\xac\xaf\xe0\xa2\xbe\x90\x42\x77\x30\x31\x3d\x55\xe0\x86\x54\x63\xda\x6d\x30\x15\xb4\x8b\x1e\xb7\x9f\x52\xf9\x55\x8a\xf3\x26\x0b\x7e\xda\x24\xd5\xb0\xca\x5e\xa5\x14\xc7\x36\x57\xb9\x52\x17\xa3\x9a\x36\x3e\xb0\xb6\xfd\x56\xd9\x7d\xb9\xc1\x37\x02\x6e\xeb\xa2\x33\x4e\x85\x8f\x1f\x4a\x29\x0e\x52\x0a\x26\x3f\xa5\x24\xa3\x1a\xe8\x6c\xe6\x72\xc6\x36\xe8\x62\x98\x62\xc0\x2d\x5c\x01\xde\x90\x31\x0e\x7e\x3b\x36\x2d\x2e\xf8\x92\x2a\x11\x98\x76\x32\x0f\x49\xcc\x67\x33\xe6\xfd\x9d\x0c\x48\xcc\x77\x39\x5f\x05\xf7\x89\x44\xcc\x75\x31\x27\x4e\xf3\xf8\x67\x1d\x9a\x47\x38\xb2\xb2\xa6\x51\x9e\x00\xe9\x85\x9a\x18\xe8\x5e\xf5\x4a\x5b\x5c\x4b\x21\x52\xbf\x65\x01\x9f\xe1\x32\x73\x85\x78\x60\x52\x43\xfa\x3a\xa4\x1f\xa6\x10\xd9\x82\xd5\xa6\xca\x77\xfe\x49\xcf\xd7\xcc\xd7\xb3\xd7\x97\x64\x55\x9c\x44\x3a\x5f\xdf\xec\x87\x3c\xd0\x1e\xd7\x00\x00\xc8\x4f\xca\x44\xc2\x6a\x06\x96\xdd\xae\x8f\x29\xde\xc1\x65\xc6\x0e\xe5\x31\x76\x60\x65\xbd\x26\x1b\xe6\xc8\xff\xce\xf3\x6b\x21\xfd\x0d\x93\x1c\x5a\xea\x54\x34\xe1\x3f\xc2\x6f\x4a\x1b\x6a\xcf\x55\x87\xe5\xc0\x59\x70\x7a\xda\x22\x1d\xae\xac\x92\x89\x3c\xc8\x3f\x01\x00\x00\xff\xff\x57\x05\x95\x50\x92\x03\x00\x00")

func templatesGoFunctionHandlerGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoFunctionHandlerGo,
		"templates/go/function/handler.go",
	)
}

func templatesGoFunctionHandlerGo() (*asset, error) {
	bytes, err := templatesGoFunctionHandlerGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/function/handler.go", size: 914, mode: os.FileMode(0644), modTime: time.Unix(1717155717, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x43, 0x7f, 0x71, 0xaa, 0x48, 0x36, 0x89, 0x3f, 0x59, 0xa9, 0x87, 0x8b, 0x7d, 0xe7, 0xee, 0x6, 0x20, 0x40, 0xb0, 0xe, 0xdb, 0x18, 0xeb, 0x8a, 0xdb, 0x4a, 0xf9, 0x6, 0xcc, 0x60, 0x6a, 0x18}}
	return a, nil
}

var _templatesGoGoMod = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\x41\x6e\xc3\x20\x10\x85\xe1\x75\x39\x05\xcb\x66\x01\x0c\x24\x76\xe2\x6b\xb4\x27\x98\xc0\x18\xa3\x60\x70\x01\x5b\xf5\xed\xab\xaa\x6a\xa5\x54\xf2\xfe\xfd\x9f\xde\x9c\xdd\x1a\x89\xfb\x2c\xc6\x35\xd9\x16\x72\x12\x13\x26\x17\xa9\x30\xe6\x33\xd7\xd2\x18\xc6\x0a\x7d\xac\xa1\x10\x7f\x65\x2f\x3e\xb4\x69\xbd\x4b\x9b\x67\xf5\x86\x23\xee\xef\x7b\x6d\x34\x57\x45\x69\x9b\x7d\x11\xcb\xc3\x57\xbe\x81\x04\x09\xc2\x80\xb9\xc0\x19\xae\x70\xee\xa0\x1b\x84\xbe\x19\xd4\x88\x6e\x80\xdb\xed\xd8\xf9\x7b\xd1\x68\x5e\x22\x36\xaa\xaa\xba\x87\xf2\xf9\x49\xbd\x9a\x1e\x06\xdd\x77\x20\xc8\xd8\x61\x80\x5e\x43\x7f\x71\xec\x74\x74\x75\xc2\x3a\x05\x9b\xcb\xa2\x7c\x16\x36\x12\xa6\xa9\xb5\xe5\x9b\xec\xa4\xe1\x4a\xf1\x90\x5c\x28\x64\xdb\x71\x55\xa8\x95\x1d\xef\x91\x7e\xcb\xab\xbc\x1c\x96\x75\x19\xf5\x59\x59\xac\x8d\x6f\x5a\xf6\x12\xfe\x2d\x73\xc4\xe4\x65\x2e\x5e\x7d\xaa\xba\x27\xfb\xe3\x3d\xaf\x4e\xec\x2b\x00\x00\xff\xff\x80\xbf\x02\x1c\x9c\x01\x00\x00")

func templatesGoGoModBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoMod,
		"templates/go/go.mod",
	)
}

func templatesGoGoMod() (*asset, error) {
	bytes, err := templatesGoGoModBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.mod", size: 412, mode: os.FileMode(0644), modTime: time.Unix(1721985670, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x84, 0x71, 0x58, 0xbf, 0xef, 0x30, 0x81, 0xa8, 0x7a, 0x2c, 0xbf, 0xdf, 0xc4, 0x2f, 0x91, 0x66, 0x33, 0x2c, 0xef, 0x37, 0x1e, 0x32, 0x74, 0x68, 0x83, 0x33, 0xcc, 0x22, 0x2f, 0x24, 0xfc, 0xff}}
	return a, nil
}

var _templatesGoGoSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\xd4\xc9\x8e\xab\xcc\x01\x05\xe0\xfd\xff\x14\x77\x8f\xda\xcc\x53\xa4\xbb\xc0\x03\x66\xf0\x80\x8d\xc1\xc0\xae\x80\x62\x86\x62\x28\x6c\xf0\xd3\x47\xee\x4e\x24\x3b\xd2\xed\x74\x94\xff\x05\xbe\x3a\x75\x54\x75\xd2\x1c\x67\x63\xb8\x88\x50\x4d\x9e\x41\x02\x66\x7b\x1e\x30\xac\x07\x12\x36\xb7\x3a\xed\x3f\xda\x32\x1d\x7e\xdd\xa8\x05\xb5\xa0\x3e\x18\x8a\xe1\x28\x96\x12\x29\x96\xa7\x78\xf9\x83\x96\x18\x40\x03\x10\xcb\x94\x24\xfd\xca\xe8\x7f\x54\x6b\xea\x36\x09\xbc\xd2\x75\x6b\xb7\x55\x37\x13\x71\xae\x04\xd5\xa0\x8f\x33\xd9\x78\xc4\x52\x23\x2f\xda\xed\xb2\xf3\x1a\x99\x5f\xed\x7f\xff\xf5\xf7\x1c\x4b\xa6\x68\x51\xa3\xf8\x79\xba\x55\x94\xa6\x5c\x53\xb1\xb1\xa5\x91\xd8\xb8\x35\xde\x5f\x1c\x18\x1d\x2b\xff\x71\x76\x0b\x4f\x24\xaa\x6b\x15\x96\xab\x9a\xc0\xb5\xf2\xe7\xd3\x93\xb1\x89\x70\x8e\x9a\x0f\x0c\xeb\xb6\x02\x18\x0e\xe4\x10\x97\x64\x8a\xde\xb2\x88\x8c\x40\xc9\xb4\xc0\x53\x1f\x90\x89\x64\x99\x12\x68\x4a\xe0\x3e\x43\xb4\x86\x15\x9c\x50\x24\x3e\xee\xb7\x4d\xbf\xe5\x1e\x95\x35\xdb\xc4\x55\x09\x77\x01\xc0\x67\xab\x8b\x25\x27\xb6\x8e\x8a\x65\xe8\xee\x37\x15\xfc\x3f\x21\x5e\x0a\xa1\x72\x78\x73\x47\xe5\x68\x9b\x9d\x5a\x40\x7a\xe4\xc9\x0b\x11\x3b\xcc\x36\x0a\xae\xe7\x7d\x98\x4f\xb9\xa1\x0f\xce\x4e\xb6\x63\x9d\x7a\xcb\x12\x83\x1b\x8c\xd2\x8c\x4c\xd1\xc7\xd0\xc2\xfb\xaf\x1b\xbd\xa0\x17\xf4\x0b\x6c\x88\xbe\xe4\x47\x57\xe6\x90\x67\x43\x5a\xbb\x88\xac\x6f\x6c\xa5\xdc\x2b\x72\x28\x8f\x07\x2e\xdf\x69\x85\x3d\xe8\x44\xc4\x6b\xac\xf4\x06\x27\x3d\x68\xca\x10\x34\x64\x37\xe6\x51\x89\xe1\x80\x3f\x6d\x6e\x21\x3c\x55\xd1\x2b\x26\xc2\x6d\x1f\x8d\x46\xa0\x65\x03\x8b\xca\x72\x0a\x09\x39\x6d\x3c\x35\xee\xc0\x25\x92\xe7\x48\xd7\x46\x2b\x75\xee\xfa\x53\xf5\x25\x32\xd7\x62\x90\x24\x13\x33\x49\xc4\xf5\x72\xf5\x6a\x67\x35\xba\x8e\x00\x2c\xc7\xa3\xc9\xfd\x43\x7c\x84\xfc\x2d\x74\x50\xbe\x17\xee\xef\x5d\xa4\x08\xa5\x15\x7c\x56\x11\xd5\xed\xb3\x7e\x61\x41\x3d\x3d\x94\xcc\xd9\x74\xf3\xa2\x20\xdb\x0f\x0e\x3f\x56\xa1\x9a\xef\xcc\x8a\xf4\x96\x6a\xb7\xa1\xb7\x76\x27\x02\x3c\x4a\x58\xa9\x2f\x67\xfd\xbf\x7a\x2f\x31\x69\x31\x76\xaa\x72\x79\x04\xa5\x41\x11\xeb\xb2\xb7\xed\x43\xb1\x2a\xf5\x62\xb2\x85\x50\x95\x1f\x21\x0b\xab\x1a\x1e\xb6\x7a\x81\xfc\x37\x36\x03\x43\x96\x47\xa8\x6f\x3f\xe5\x0a\x82\x26\xc3\xf8\xd3\xe7\x17\xcc\xe7\x5b\x60\x79\xd5\xf4\xf5\x6b\x51\x3b\xbb\x59\x3d\x2f\x4d\x6b\x90\x2e\xcb\x13\xca\xa9\x49\x88\xe5\x2d\x37\x45\x72\x03\x3d\xe3\xaa\x04\xa7\x9f\xc3\x2f\xc1\xcb\x23\xe9\xaf\x2b\x4b\xda\xd1\x2c\x27\x6c\x04\x1b\xc5\x77\xc2\xea\xdb\xa5\xed\x72\xa4\x8d\xa6\x95\xb7\xf5\x85\x65\x77\x50\x2f\x9c\xf4\x67\x3f\x8b\x2a\x94\x3e\x6d\xf9\x2b\xf4\x6a\x2b\x5c\x36\xbc\x26\x93\x86\x37\xa8\x57\x63\x95\x20\xdd\x6d\x4d\x55\x2f\x55\x28\xcc\xc3\x66\xd4\xf2\xbe\xe5\xd6\xd3\x6a\xd0\xf4\x9f\xa1\x2f\x81\xf9\x95\x43\x80\x74\x97\xcf\xac\x21\x1e\xc4\x53\xa1\x99\x7c\x4c\xf1\xe6\xb4\x1d\x46\x2f\x3f\xed\xfa\x42\xa1\x34\x11\x44\x05\x53\x7d\x53\x48\x0f\x71\x3f\x83\xb0\x82\xff\x2e\x45\x5c\x70\x4f\x3c\x38\xa5\x6e\xdc\x5e\x62\x65\x27\x5e\xdb\xbd\x7e\xdf\x3d\x56\x49\x08\xaa\x63\x64\x3b\x71\xb9\x0e\x9a\xd6\xb9\xb1\x24\xb1\x9c\x1e\xaa\xf2\xbf\xe1\xaf\x9f\x70\x26\x53\xcb\x57\xe2\xa2\x4b\x92\x80\x9c\xd5\xed\x4a\x75\x99\x18\xe9\xfc\xbd\xc0\x1a\x0d\xef\x7b\x79\x94\x72\xdf\x2d\xb0\xf7\xde\x78\xd9\x93\x6d\x0f\x31\x9e\x9f\x24\xbb\xa0\x9f\x56\x52\x9d\xd7\xdc\xe1\x70\xf7\x15\xa7\x2d\xdb\xcc\x8d\x68\x2d\xc2\xd9\x99\x33\x37\xba\x6a\x08\x7c\x23\xed\xef\x7c\x17\x9f\x1b\x76\xb7\xf9\xd6\x7a\x89\x97\xa1\xcd\x90\xf9\xae\x06\xa6\xfd\xc0\x46\x33\x62\xfd\x26\x42\x23\x1f\x0c\x51\x9e\x8c\x6b\x54\xf5\x77\xcb\x0c\x40\xb3\x65\xa7\xf2\x3f\x49\x0c\x27\xfc\x04\x99\xaf\xaf\xc6\x1f\x26\xca\x07\x54\xd0\xf9\xcc\x9c\xba\xac\x20\x9c\x1e\x78\xec\x35\x9d\x66\x8d\x4e\xe6\x95\x36\x72\x81\xb1\xcc\x5a\x9b\x50\xfc\x6f\xa4\x97\x68\x70\x07\x7b\x91\x61\x2e\xb0\xcc\xb7\xe3\xbe\xcc\xe3\xfd\xb4\x22\xdb\x3d\xc5\x55\xd7\x0d\xec\x81\xe6\x38\xf5\xf2\x2e\x55\x4c\xda\xbf\xdf\xb6\xad\xe1\x03\xf4\xcf\x85\xfd\x88\xf3\x24\xa9\xf2\xf0\x39\x34\xd4\x9b\x9d\x9b\x9a\x28\x96\x48\xcd\xfc\xe9\x62\xd2\x6d\x74\x6e\x4a\xb3\xec\x92\x0b\x4a\x87\x30\x15\xd3\xe0\xe0\xfa\xdc\x70\x5e\xfb\x01\xc9\xbd\xd9\x3d\x4a\x5b\xd8\xb6\x9f\xcb\x90\x37\x18\xf6\x0d\xa8\x9e\xba\xfc\xd5\x81\xc8\x96\x9a\xe4\x10\x86\xd3\x79\x8e\x54\x9d\xc7\xa3\x06\x5d\x0d\x00\xd2\x0e\xac\x3c\x59\x89\xcb\x32\xea\x41\xe0\xc2\x42\x81\xd2\x4f\xd9\x97\xd0\x57\xec\x42\x4f\x9a\xb2\xcb\xf2\x96\x50\x43\x1d\x67\x63\x71\xc7\xcb\xa8\xe3\x4e\xfd\xa3\x23\x13\x03\xf4\xe0\xa0\xba\x07\xa2\x51\x87\x37\x7d\x68\x13\x9a\x25\x23\xf0\xb5\xb8\xff\x5a\xc6\xed\x26\xbf\x68\x9b\x9d\x4a\xdc\xc0\x99\x8f\xb3\x07\xeb\x76\x41\xa2\xda\x8f\xa0\xf0\xc3\x14\x9a\xeb\x76\x39\x9d\x5c\x9b\xdb\xfa\x06\xf5\x3d\xf6\x12\x10\x34\xd1\xa6\x5d\x4e\x77\x63\x7d\x5c\xdb\x57\xd2\xd9\x72\xfd\xba\x57\xba\xdc\x44\x55\x77\x38\x64\xcc\xda\x63\xeb\x52\x12\x22\x25\x46\xef\x26\xee\x21\x8e\xb2\xe7\x43\x18\x70\x9e\xcc\x4f\x99\x79\x9b\x01\x20\x1d\x9b\x73\x94\x87\x5c\x93\x65\xd4\x11\x9c\x15\x97\xf0\xf1\x20\x89\xa5\x19\x77\x94\x65\x89\xad\x97\xcc\x42\xb9\x2e\x1d\xf7\x79\x75\x54\x81\x26\x5d\xa0\x3e\x25\x27\x72\x98\x9b\xe8\xeb\x57\x7e\x5e\xdb\x1f\xf4\x3a\xb1\x97\xc8\x92\x4f\x96\xbf\xa3\xa6\xd9\x34\xac\x8e\x4a\x23\x60\xc4\x5b\xb6\xd7\x1b\xd4\x4d\x97\x6b\x98\x9c\x46\x79\xff\x67\xe8\x25\xd8\xea\x81\x89\xbb\x39\xd2\xe9\x6a\xde\xa8\x6b\x07\x37\x54\xb1\xe5\x4f\xee\xad\x35\x84\xfe\xe1\x76\x3d\x0f\xbc\x19\xcb\x71\x7f\x4a\xca\xdf\x7f\xfd\x33\x00\x00\xff\xff\xd9\xe5\x04\xa9\xc3\x09\x00\x00")

func templatesGoGoSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoSum,
		"templates/go/go.sum",
	)
}

func templatesGoGoSum() (*asset, error) {
	bytes, err := templatesGoGoSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.sum", size: 2499, mode: os.FileMode(0644), modTime: time.Unix(1721985695, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf4, 0xea, 0x2, 0x95, 0x95, 0xd2, 0x6d, 0xdd, 0x43, 0xcc, 0x88, 0xa0, 0xae, 0x89, 0x2c, 0x97, 0xac, 0xae, 0x6a, 0xe5, 0xe5, 0x33, 0x6a, 0xc5, 0xb5, 0x4, 0x54, 0xc4, 0x4d, 0xd1, 0x88, 0xc4}}
	return a, nil
}

var _templatesGoGoWork = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x57\x30\xd4\x33\x32\xd2\x33\xe0\xe2\x2a\x2d\x4e\x55\xd0\xe0\xe2\xd4\xe3\xe2\xd4\xd3\x4f\x2b\xcd\x4b\x2e\xc9\xcc\xcf\xe3\xd2\xe4\x02\x04\x00\x00\xff\xff\xb1\x6f\xc0\x55\x22\x00\x00\x00")

func templatesGoGoWorkBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWork,
		"templates/go/go.work",
	)
}

func templatesGoGoWork() (*asset, error) {
	bytes, err := templatesGoGoWorkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work", size: 34, mode: os.FileMode(0644), modTime: time.Unix(1710776299, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe1, 0x5d, 0xcc, 0xa0, 0xd4, 0x72, 0x56, 0x8a, 0xd, 0x3e, 0x3, 0x38, 0xf4, 0xc8, 0x86, 0xa8, 0xe3, 0x66, 0x8f, 0x83, 0x5f, 0x4f, 0x64, 0xdf, 0x79, 0xe6, 0x99, 0xd3, 0x32, 0x58, 0x29, 0xff}}
	return a, nil
}

var _templatesGoGoWorkSum = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcf\x2c\xc9\x28\x4d\xd2\x4b\xce\xcf\xd5\x4f\xcf\xcf\x4f\xcf\x49\xd5\x4f\xcf\xd7\x4d\xce\x2d\x50\x28\x33\xd0\x33\xd3\x33\xd0\x4f\xcf\xd7\xcb\xcd\x4f\x51\xc8\x30\xb4\x32\x34\x4f\x09\xcd\xc9\x76\xf2\x4f\xcc\xf6\x32\xd0\x76\xc9\x2e\x0a\x0e\xf6\xcb\x72\xce\xf6\xcc\xaa\x08\x36\x4b\x72\xb3\xac\x4a\x32\x4e\xcd\xc9\x4d\xf5\x73\xf7\xcc\xca\x8f\xb4\xe5\x02\x04\x00\x00\xff\xff\xc2\xbe\xd9\x45\x57\x00\x00\x00")

func templatesGoGoWorkSumBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoGoWorkSum,
		"templates/go/go.work.sum",
	)
}

func templatesGoGoWorkSum() (*asset, error) {
	bytes, err := templatesGoGoWorkSumBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/go.work.sum", size: 87, mode: os.FileMode(0644), modTime: time.Unix(1712835135, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6f, 0x74, 0xbe, 0x5c, 0xdb, 0x8e, 0x67, 0x84, 0xb8, 0x19, 0xaf, 0x6d, 0xdb, 0x7b, 0x91, 0xfd, 0xc0, 0xa1, 0x1c, 0xcd, 0x3, 0xd2, 0xe0, 0x72, 0xeb, 0xb7, 0xff, 0xfb, 0x7c, 0x85, 0xa5, 0x79}}
	return a, nil
}

var _templatesGoMainGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\xd1\x4e\xeb\x38\x10\x7d\xb6\xbf\x62\x36\x0f\x28\x41\x25\x2e\xfb\x84\x2a\x15\x69\x25\x60\x17\xc1\x5e\x50\x83\xe0\x11\xb9\xc9\x24\xb5\xea\xd8\x91\x3d\x29\xa0\xab\xfe\xfb\x95\x93\xa6\x24\x48\x5c\xe9\xbe\x44\x89\x7d\xce\x99\x33\x67\x26\x42\x80\x2c\x64\x43\x58\x40\xe9\x6c\x0d\x1b\xa2\xc6\x2f\x84\xa8\x14\x6d\xda\x75\x9a\xdb\x5a\xd8\x06\x4d\x29\xa5\x17\x95\xd5\xd2\x54\x67\x01\x72\x46\x58\x37\x5a\x12\x8a\xb5\xb6\x6b\x51\x4b\x4f\xe8\xc4\xf1\x70\x84\x14\xb5\x54\x26\xad\x2c\x17\x02\x1e\x9c\xaa\x94\x91\x1a\xb4\xca\xd1\x78\x5c\xc0\xff\xb7\x4f\xbc\x91\xf9\x56\x56\x08\x01\xc8\xb9\xaa\x1b\xeb\x08\x62\xce\xa2\xb2\xa6\x88\xb3\xc8\xfa\xf0\xf4\xe4\x72\x6b\x76\xe1\x95\x54\x8d\x11\xe7\x2c\xda\x48\x53\x68\x74\xa2\x6c\x4d\x4e\xca\x9a\x70\xe8\x8b\x2d\x44\x23\xf7\x2b\x59\xca\x8f\xec\xc3\x13\xd6\xfe\x08\x3c\xda\xf7\xc2\x17\x5b\x51\xd9\x4e\xee\x3b\x16\x9a\x5d\x5d\xb9\xb3\x66\x5b\x79\xe1\x55\x65\xa4\xf6\x11\x4f\x38\xcf\xad\xf1\x04\x05\x96\xb2\xd5\xf4\xa4\x6a\xb4\x2d\xc1\x12\xce\xe7\x70\x0a\xc1\x63\x9a\x61\x6e\x4d\xc1\x79\x28\xdb\xb5\x17\x27\xf0\x93\x33\x87\xb2\x18\xe0\x8b\x25\x34\xd2\x79\xbc\x35\xf4\xe0\xae\x5a\x27\x83\xbd\x67\xa9\x5b\x8c\xad\x4f\xff\x45\x42\xb3\x8b\xa3\xc0\x78\xa5\x9e\x12\x25\xb3\x2f\x35\x13\xce\xde\x9c\x22\xfc\x33\xcd\x8e\xf2\x5b\x51\xbf\x55\xcd\xd3\x7d\xf6\x8c\x4e\x95\x1f\x41\x75\xc4\x0e\x77\xaf\xa4\xfd\xeb\xae\xbb\x8d\x12\x58\x2e\x21\x22\xd7\x76\x93\x19\x72\xce\xae\xee\x66\x80\xce\x05\xb2\x2f\xb6\xe9\x0f\x7c\xbb\xf9\xbc\x8a\x39\x0b\xe3\x4a\x5f\x14\x6d\x56\x9f\x99\xc4\xa3\x7c\x92\xd9\x08\xf3\x32\x6a\x32\x1e\x77\x3c\x41\xdd\xdb\xea\x46\xb7\x7e\xb3\x92\x84\xf1\xf9\xe9\x68\x10\x5f\x61\x13\xbd\xf3\xf9\xb7\xd0\x0c\xdd\x0e\x5d\x36\x4e\x23\x9e\x64\x33\x41\x3f\x5a\x47\xf1\xc5\xfc\xe2\xef\xc9\xe9\x7f\xfd\xaa\xc6\x43\x32\x69\x7f\x90\x24\x9c\xa9\xb2\x8b\xe8\xaf\x25\x18\xa5\xc3\x7e\xb0\xb2\xa6\xf4\xd1\x29\x43\xda\xc4\xd1\xb5\x73\xd6\x41\xee\x50\x92\x32\x15\x0c\x02\x90\x5d\xdd\x2d\x20\xea\xe2\x4d\x38\x63\x0e\xa9\x75\x86\xb3\x3d\xe7\x2c\xa7\xf7\x2e\xf1\x7e\x57\xd3\x0c\xa9\x6d\xb2\xee\x63\xb0\x91\x4c\x87\x94\xae\x5a\x13\xe7\xf4\x9e\xf0\xfd\x61\x5b\xbf\x5b\xa0\x9d\xd4\xe0\xc9\x29\x53\xcd\xa0\x94\x5a\xaf\x65\xbe\xed\x97\x7d\xc0\x25\xd3\xcf\xd0\x90\x2a\x41\xa3\x09\xdc\x04\x2e\x61\xde\xf5\xd8\x15\x28\x9e\xa5\x9e\xf5\xb5\xae\x0f\x5b\xd2\xff\xe6\xe9\x3f\x64\x55\x47\xe0\x2c\xd0\x8f\x90\x65\x9f\xd2\xc9\x09\x1c\x05\xe0\x72\x79\xd0\x3c\x84\x30\x35\x10\x1f\x81\xc9\x97\xff\x92\xb1\x7d\x9f\x57\x71\x80\xce\x60\x78\x3b\xb8\xe9\xd0\x8f\x81\x7f\x54\xeb\x3d\xa9\x72\x02\x1d\xcd\xee\x60\x61\xc8\x26\x14\x18\xce\x06\x06\xdf\xf3\x5f\x01\x00\x00\xff\xff\x1a\x1c\x83\x3c\x77\x05\x00\x00")

func templatesGoMainGoBytes() ([]byte, error) {
	return bindataRead(
		_templatesGoMainGo,
		"templates/go/main.go",
	)
}

func templatesGoMainGo() (*asset, error) {
	bytes, err := templatesGoMainGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/go/main.go", size: 1399, mode: os.FileMode(0644), modTime: time.Unix(1717744987, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0x56, 0xb7, 0x94, 0x71, 0xf4, 0xa4, 0x65, 0x3e, 0xe2, 0x3c, 0x14, 0x7e, 0xcd, 0x6a, 0xa1, 0x6e, 0x50, 0x17, 0x71, 0xf6, 0xbf, 0xdb, 0xe8, 0xbb, 0x29, 0xca, 0xd9, 0x9, 0x94, 0x63, 0xc2}}
	return a, nil
}

var _templatesPythonDockerfile = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x51\x6f\xdb\x36\x17\x7d\xfe\xf8\x2b\x2e\x54\xa3\xf8\xb6\x81\xa2\xbd\x2d\x1b\x66\x40\x0f\xaa\xad\xc4\x41\x12\xcb\xb0\xd5\x76\x41\x17\x08\xb4\x44\x59\x44\x28\x91\x25\xa9\xc4\x82\xeb\xff\x3e\x88\x8a\xed\xb4\x35\x06\xd4\x0f\x86\x78\xcf\x21\xef\xb9\xe7\x5e\x32\x5c\x5e\xc1\xe2\x3e\x99\xc5\xf3\xf4\x43\xb4\x5c\x5d\xc7\xf3\xe0\x37\x7f\x34\x42\x5d\x3c\xbe\x4c\x3f\x86\xc9\x64\x36\x8d\xaf\x8e\xe0\xd0\xff\xcb\x1f\x5d\xf4\xf0\x2a\x7d\x17\xae\xa2\xc0\x08\x5e\xe1\x75\x23\x84\x61\x2d\x43\x08\x5d\x2e\xe3\x3b\xc0\x58\x09\x6a\x0b\xa9\xab\x60\xb0\x4b\xc2\xe5\x55\x94\x2c\x6e\xc3\xe4\x32\x5e\xde\x8d\xb1\xe0\x75\xb3\x25\xb4\xca\xff\xf8\x7d\x0f\x9b\x32\xd3\x3e\x97\x44\x2a\x56\x17\x94\x1a\x22\x0b\xfc\x4c\x6d\x56\xe6\x72\x33\x1e\xec\xce\x88\xd8\x03\x35\x70\xa0\xfc\x68\x3a\xd5\xda\x52\xd6\xe3\xc1\xee\xeb\xaa\xf7\x78\xb0\x7b\x29\xc8\x1d\xbf\x6e\xb8\xc8\x11\x9a\xc4\x8b\x7b\xc0\xb8\xd0\xb2\x0a\x0e\x19\x81\x14\xa7\xcf\xc6\x68\xb2\xe6\xf5\x29\x84\x96\xef\xe7\x90\x95\x95\xcc\xe1\x97\xed\x39\x1c\xbd\x81\x50\x58\xa6\x6b\x6a\xf9\x13\x13\x2d\x34\x86\x41\x38\x9d\x42\x69\xad\x32\x63\x42\xe0\xff\xcf\x25\xcf\x4a\x78\xe6\x42\x40\x2d\x2d\xac\x19\x64\x34\x2b\x59\x0e\xeb\x16\xa6\x32\x7b\x64\xba\xd7\xc7\xf4\x4f\xae\x13\xe1\x74\x7a\x9d\x5c\xc7\xf3\xf0\x36\x5d\x84\x93\x9b\xf0\x2a\x0a\x3c\xcf\x09\x61\x59\x29\xc1\x3b\x83\x0f\x76\xdf\x07\xf7\xfd\x1e\xaa\x2c\xde\x30\x0b\xf8\x73\x0b\x8d\xca\xa9\x65\xf0\x0f\x02\x00\x78\xfb\xf6\x2b\x8c\xd7\xc6\x52\x21\xe0\xec\x51\xa7\x2d\xba\x02\xac\x0b\x20\x4f\x54\x13\xc1\xd7\x84\x2a\x4b\x04\x37\xd6\x90\x9f\x9d\x17\x79\x0e\xb5\xac\x41\x4b\x69\x3b\x2b\x74\xaf\x21\xcf\x37\x5a\x36\x0a\x30\x36\xad\xb1\xac\x02\xaa\x94\x13\x90\xe7\x1d\xc9\x2d\x8f\x18\xc6\xbc\xee\xe9\x54\xa9\x97\x06\xc8\xe7\xda\x91\x48\x29\x2b\x46\xba\x38\x7a\xbf\x8a\x96\x8e\x81\xa2\xf9\x07\x58\x84\xc9\x2c\x18\x74\xff\xe3\x23\x87\xf8\x42\x66\x54\x74\x1d\x43\xe8\x63\xbc\xbc\x99\x5e\x2f\x4f\x27\x10\xe4\xdc\x5e\x2c\xe3\xbf\xef\x3b\x83\x0f\xd3\xe1\x92\x05\x54\xa9\x71\x97\xb0\xa2\xbc\xf6\x55\x0b\xa7\x9f\x7f\x9e\xa8\xd9\xe7\x86\x6b\x56\xb1\xda\x1a\xdf\x6e\xad\x63\x3a\x8d\x9d\x17\xae\x0c\xc5\xd5\xd1\x66\x8c\x6b\x89\xdd\x1c\xe0\x9c\xeb\x6e\xe2\xb5\xdc\xb6\xc1\x60\xe7\xf4\xec\x01\xeb\xef\x4e\x7c\x55\x71\x77\x5a\xf5\xe8\x36\x2a\x28\x9a\x3a\xb3\x5c\xd6\x2e\x6a\x65\x93\x95\xe0\x93\x43\x90\xa4\x29\xaf\xb9\x4d\x53\x5f\xb5\x67\x3c\x38\xd2\xce\x17\x75\x84\xbf\xd5\xf2\x3f\xff\xc7\x2b\xc2\xae\xd5\xe7\x0a\x7b\xe5\xd3\x7f\xcb\x70\xa6\xf6\x6f\x84\xbb\x32\xdd\xdd\xb6\xcc\xd8\xbe\x95\x49\xb4\x4a\xd2\x49\x7c\x77\x17\xce\xa7\x81\x95\xdb\x53\x30\x9a\x87\xef\x6e\xa3\x69\x50\x50\x61\x58\x6f\xdf\x27\xf0\x06\xaf\x31\x0f\x02\xf0\x1c\xee\xc1\x43\x37\x9b\xfd\x65\x33\x8f\x5c\x29\x5e\x6f\x5c\x1a\xe3\xc1\x97\x2f\xc0\x9e\xa8\x38\x6c\x7e\xc9\xe6\xa1\x6f\x55\x99\x92\xab\xb3\x33\x77\x6a\xe2\x1b\x58\x31\x0b\x8d\x82\x57\x4f\x24\x14\x52\xc3\x2c\x49\x16\x50\xc9\x9c\xb9\xc9\x2e\x94\x96\x19\x33\x26\xf0\xfa\xc7\xee\x30\x92\x9e\x43\xb3\x0d\x4f\x4b\x46\x73\xa6\x4d\xe0\x59\xdd\xb0\x3e\xdc\xed\x0e\xbc\xee\x0d\xea\xd7\x8d\x32\x56\x33\x5a\xa5\x8d\x16\x7d\x7c\x4c\xc8\xe8\xd7\x3f\xfd\xa1\x3f\xf4\x47\xe3\x8b\xe1\x70\xd8\x13\x35\xa3\x79\x9b\x2a\x6a\xcb\xc0\x23\x29\x71\x4b\x0f\xa1\x59\x14\xde\x26\xb3\xc9\x2c\x9a\xdc\xb8\xfb\x69\x99\x7e\xa2\x22\xb8\x30\x30\xb9\x9b\xc2\x27\xc0\x0c\x88\xad\xfa\x1b\xf7\x08\x0f\xce\xa6\x2d\xb7\x30\x42\xc8\x11\xbc\xe3\x8b\xe9\x3d\xa0\x7f\x03\x00\x00\xff\xff\x73\x5d\xad\x31\xa6\x06\x00\x00")

func templatesPythonDockerfileBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonDockerfile,
		"templates/python/Dockerfile",
	)
}

func templatesPythonDockerfile() (*asset, error) {
	bytes, err := templatesPythonDockerfileBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/Dockerfile", size: 1702, mode: os.FileMode(0644), modTime: time.Unix(1718009068, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0xec, 0x3e, 0x81, 0xb8, 0xd5, 0x7a, 0x47, 0x44, 0xdd, 0x41, 0x2e, 0x7a, 0xb2, 0x8f, 0xcb, 0xef, 0xae, 0x69, 0x89, 0x5, 0x61, 0xe6, 0xfa, 0x34, 0xa7, 0x26, 0xe1, 0x54, 0x2b, 0xba, 0x9}}
	return a, nil
}

var _templatesPythonFunction__init__Py = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunction__init__PyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunction__init__Py,
		"templates/python/function/__init__.py",
	)
}

func templatesPythonFunction__init__Py() (*asset, error) {
	bytes, err := templatesPythonFunction__init__PyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/__init__.py", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var _templatesPythonFunctionHandlerPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcd\x6a\xdc\x30\x10\xc7\xef\x7e\x8a\x41\x97\x38\xd4\x5d\x92\xab\xc1\x81\x40\x53\x7a\xe8\xb1\xd0\x43\x58\x8c\xb0\x47\x8e\x58\x45\x72\x47\xe3\x4d\x4c\xc8\xbb\x17\xcb\x92\x95\x6c\x92\x3d\xed\x4a\xff\x8f\xdf\x8c\xb0\x22\xf7\x08\x3c\x8f\xda\x0e\xa0\x1f\x47\x47\x0c\x3f\x74\xc7\x15\xdc\xda\xb9\x08\xa2\x71\xc3\xf0\x46\xfd\xed\x86\x01\x69\x95\xc6\x99\x1f\x9c\x6d\x7d\x7f\x68\x49\x2a\x39\xb7\x4f\x8e\x0e\xca\xb8\xa7\x64\xf6\xfd\xa1\x28\x7a\x54\xf0\x20\x6d\x6f\xb0\x34\x21\x5c\xc7\x92\x8a\xf0\xdf\x84\x9e\xeb\x80\xbc\xf7\x4c\x01\xbb\xbf\x84\xef\x37\x27\x57\x75\x01\x00\xb0\xc6\x77\xda\x2a\x57\x2a\x41\xd8\xa1\x3e\x62\x0f\xb1\xa6\x5a\xfe\xd4\xf0\x12\x8f\xaf\xe2\xb2\x08\xa9\xce\x4d\x96\x91\xa0\x81\xab\x70\xd6\x0a\xc4\x48\x78\xd4\x6e\xf2\x02\xb4\x4d\xf9\x95\xf1\x91\x93\xbc\xa9\xa8\x82\xe5\x26\x83\xee\x2f\x92\xe3\x62\xbf\x40\x53\x4b\xe6\x26\x63\xc6\xee\x77\x03\x72\x29\xa2\x45\x54\x70\x15\x87\x25\xf4\x23\x34\xf0\xb2\xb5\x08\x37\xf1\x38\xb1\xa8\x41\xfc\x42\x63\x1c\xfc\x75\x64\x7a\x51\x65\x43\x6c\x17\xf5\xf6\x10\x41\x7b\x2d\xb6\x6d\x91\xc8\xd1\xe7\xab\x22\x51\xeb\x79\x19\xd2\x33\x95\xdb\xa0\x6b\x62\x9f\x97\xd1\x2a\x5b\x1b\x10\xf8\x8c\xdd\xc4\xd8\xca\x41\x6a\x2b\x72\x5d\xb4\xa6\xd5\x6f\xe0\xfa\xbd\xb6\xae\xc8\x13\xd9\xb0\xe9\x3b\x8d\xa4\xf6\xb8\x7c\x32\xbb\xbb\xb5\xfd\x76\x29\xbf\x7b\xee\x70\x64\xed\x6c\x19\xf9\x15\xd0\x01\xe7\x46\xd0\x51\x9a\x09\x45\x95\x60\x4d\xfc\xfd\x76\x9d\xa7\x46\x73\x32\x37\x93\xb4\x5e\xa3\xe5\x93\x99\x33\xfb\x4f\x72\x7c\x00\x9f\xa9\x55\x52\x1b\xec\xbf\xec\xfc\x19\xe4\xb3\x85\x1e\x3f\x0b\x7f\x11\x79\xfb\x82\xff\x03\x00\x00\xff\xff\x4a\x8d\x90\x4c\xc1\x03\x00\x00")

func templatesPythonFunctionHandlerPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionHandlerPy,
		"templates/python/function/handler.py",
	)
}

func templatesPythonFunctionHandlerPy() (*asset, error) {
	bytes, err := templatesPythonFunctionHandlerPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/handler.py", size: 961, mode: os.FileMode(0644), modTime: time.Unix(1718011597, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x66, 0xc3, 0x83, 0x12, 0x63, 0xd0, 0x75, 0x49, 0xd1, 0x69, 0x62, 0x49, 0x98, 0x2b, 0x4, 0xcd, 0x33, 0x61, 0x27, 0xcb, 0x3a, 0x96, 0x37, 0x2a, 0x41, 0x6c, 0xee, 0x60, 0x49, 0x8f, 0x87}}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxt,
		"templates/python/function/requirements.txt",
	)
}

func templatesPythonFunctionRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt", size: 0, mode: os.FileMode(0644), modTime: time.Unix(1710302540, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0xb0, 0xc4, 0x42, 0x98, 0xfc, 0x1c, 0x14, 0x9a, 0xfb, 0xf4, 0xc8, 0x99, 0x6f, 0xb9, 0x24, 0x27, 0xae, 0x41, 0xe4, 0x64, 0x9b, 0x93, 0x4c, 0xa4, 0x95, 0x99, 0x1b, 0x78, 0x52, 0xb8, 0x55}}
	return a, nil
}

var _templatesPythonFunctionRequirementsTxtTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\x55\x28\x4a\xcc\x4b\x4f\x55\x50\x29\x4b\xcc\x29\x4d\x55\xb0\xb2\x55\xd0\x2b\xce\x2f\x2d\x4a\x4e\x8d\x4f\x49\x2d\x48\xcd\x4b\x49\xcd\x4b\xce\x4c\x2d\x56\xa8\xad\xe5\x52\x50\x50\x50\xa8\xae\x86\x29\xac\xad\xe5\xe2\x02\xe9\x4e\xcd\x4b\xa9\xad\xe5\x02\x04\x00\x00\xff\xff\x93\xef\x05\x16\x48\x00\x00\x00")

func templatesPythonFunctionRequirementsTxtTmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonFunctionRequirementsTxtTmpl,
		"templates/python/function/requirements.txt.tmpl",
	)
}

func templatesPythonFunctionRequirementsTxtTmpl() (*asset, error) {
	bytes, err := templatesPythonFunctionRequirementsTxtTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/function/requirements.txt.tmpl", size: 72, mode: os.FileMode(0644), modTime: time.Unix(1721984565, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xec, 0x8e, 0xe6, 0xa0, 0x5a, 0xfa, 0x1d, 0x66, 0x77, 0x44, 0x93, 0xa9, 0x16, 0x33, 0x8c, 0x4c, 0xb0, 0xd9, 0x3f, 0x47, 0x36, 0x91, 0xb3, 0xc9, 0x78, 0xa0, 0x80, 0x7b, 0xcf, 0xc6, 0x99, 0xa3}}
	return a, nil
}

var _templatesPythonMainPy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\x41\x0a\x83\x30\x14\x84\xe1\xfd\x3b\xc5\xd4\x6e\xda\x8d\xee\x0b\x9e\x65\x48\x6b\x82\x41\xf3\x22\x2f\x51\xf1\xf6\xa5\x68\x57\xc3\xc0\x0f\xdf\xfd\xd6\xad\xc5\xba\x77\xd4\xce\xeb\x86\xe5\xa8\x63\x56\x91\x60\x39\x21\xac\xfa\xa9\x31\x2b\x62\x5a\xb2\x55\x8c\x4e\x87\xd9\x9b\x5c\xf7\x6c\x59\x86\x89\xe6\x82\x3b\xb8\x67\x9b\xc2\x9c\x77\xb8\x82\x32\x4c\x22\x31\x80\x54\x97\x3c\x89\xbe\x47\x43\x26\x17\x95\x6c\x5e\x02\xe0\xd7\xb4\xc5\xdb\xe6\xf9\x97\x1e\x17\xd1\x9e\xfb\x94\x6f\x00\x00\x00\xff\xff\x3d\x62\xa4\x64\x9f\x00\x00\x00")

func templatesPythonMainPyBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonMainPy,
		"templates/python/main.py",
	)
}

func templatesPythonMainPy() (*asset, error) {
	bytes, err := templatesPythonMainPyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/main.py", size: 159, mode: os.FileMode(0644), modTime: time.Unix(1710853495, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc7, 0x2e, 0x30, 0x84, 0xaa, 0x3a, 0x52, 0xb, 0x1a, 0x36, 0x1a, 0xf3, 0x92, 0x90, 0x68, 0xef, 0x69, 0x46, 0x54, 0x49, 0x6b, 0xb, 0x14, 0xb7, 0xb4, 0xb4, 0xba, 0xf3, 0xef, 0xbe, 0xe4, 0x38}}
	return a, nil
}

var _templatesPythonRequirementsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4a\xcb\x49\x2c\xce\xe6\x2a\x4f\xcc\x2c\x29\x4a\x2d\x2e\xe6\x2a\xc9\xaf\xb0\xb5\x35\xd6\xd3\xe2\x2a\xa8\x2c\xc9\xc8\xcf\x8b\x2f\x4e\xc9\x8e\x2f\x4a\x4c\x4b\xac\x8c\x2f\xcf\x2f\xca\x4e\xcb\xc9\x2f\xb7\xb3\x35\xd0\x33\xd0\x33\x32\x00\x04\x00\x00\xff\xff\x31\x15\xb1\x07\x39\x00\x00\x00")

func templatesPythonRequirementsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templatesPythonRequirementsTxt,
		"templates/python/requirements.txt",
	)
}

func templatesPythonRequirementsTxt() (*asset, error) {
	bytes, err := templatesPythonRequirementsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/python/requirements.txt", size: 57, mode: os.FileMode(0644), modTime: time.Unix(1721985586, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x88, 0x71, 0xf5, 0x1, 0xb6, 0x6e, 0x39, 0xc9, 0x1a, 0xc5, 0x65, 0x22, 0x44, 0xd3, 0x34, 0xf2, 0xf3, 0x30, 0x42, 0x33, 0x23, 0x77, 0x6, 0x6, 0x53, 0x78, 0xd5, 0x4b, 0xc7, 0x78, 0x1e}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/go/Dockerfile":                         templatesGoDockerfile,
	"templates/go/function/go.mod":                    templatesGoFunctionGoMod,
	"templates/go/function/go.mod.tmpl":               templatesGoFunctionGoModTmpl,
	"templates/go/function/go.sum":                    templatesGoFunctionGoSum,
	"templates/go/function/handler.go":                templatesGoFunctionHandlerGo,
	"templates/go/go.mod":                             templatesGoGoMod,
	"templates/go/go.sum":                             templatesGoGoSum,
	"templates/go/go.work":                            templatesGoGoWork,
	"templates/go/go.work.sum":                        templatesGoGoWorkSum,
	"templates/go/main.go":                            templatesGoMainGo,
	"templates/python/Dockerfile":                     templatesPythonDockerfile,
	"templates/python/function/__init__.py":           templatesPythonFunction__init__Py,
	"templates/python/function/handler.py":            templatesPythonFunctionHandlerPy,
	"templates/python/function/requirements.txt":      templatesPythonFunctionRequirementsTxt,
	"templates/python/function/requirements.txt.tmpl": templatesPythonFunctionRequirementsTxtTmpl,
	"templates/python/main.py":                        templatesPythonMainPy,
	"templates/python/requirements.txt":               templatesPythonRequirementsTxt,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": {nil, map[string]*bintree{
		"go": {nil, map[string]*bintree{
			"Dockerfile": {templatesGoDockerfile, map[string]*bintree{}},
			"function": {nil, map[string]*bintree{
				"go.mod":      {templatesGoFunctionGoMod, map[string]*bintree{}},
				"go.mod.tmpl": {templatesGoFunctionGoModTmpl, map[string]*bintree{}},
				"go.sum":      {templatesGoFunctionGoSum, map[string]*bintree{}},
				"handler.go":  {templatesGoFunctionHandlerGo, map[string]*bintree{}},
			}},
			"go.mod":      {templatesGoGoMod, map[string]*bintree{}},
			"go.sum":      {templatesGoGoSum, map[string]*bintree{}},
			"go.work":     {templatesGoGoWork, map[string]*bintree{}},
			"go.work.sum": {templatesGoGoWorkSum, map[string]*bintree{}},
			"main.go":     {templatesGoMainGo, map[string]*bintree{}},
		}},
		"python": {nil, map[string]*bintree{
			"Dockerfile": {templatesPythonDockerfile, map[string]*bintree{}},
			"function": {nil, map[string]*bintree{
				"__init__.py":           {templatesPythonFunction__init__Py, map[string]*bintree{}},
				"handler.py":            {templatesPythonFunctionHandlerPy, map[string]*bintree{}},
				"requirements.txt":      {templatesPythonFunctionRequirementsTxt, map[string]*bintree{}},
				"requirements.txt.tmpl": {templatesPythonFunctionRequirementsTxtTmpl, map[string]*bintree{}},
			}},
			"main.py":          {templatesPythonMainPy, map[string]*bintree{}},
			"requirements.txt": {templatesPythonRequirementsTxt, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = os.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
